{"version":3,"file":"main.js","sources":["../src/globalData.js","../src/utils/log.js","../src/utils/utils.js","../src/utils/超级移动优化hotfix 0.9.4.js","../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/mapping-list.js","../node_modules/source-map/lib/source-map-generator.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/lib/source-node.js","../node_modules/source-map/source-map.js","../src/modules/errorMapper.js","../src/factory/room.js","../src/Alliance/run.js","../src/Alliance/initialization.js","../src/initialization.js","../src/main_mount.js","../src/factory/spawn.js","../src/factory/source.js","../src/factory/creep.js","../src/factory/creep/Harvest.js","../src/factory/creep/Upgrader.js","../src/factory/creep/Builder.js","../src/factory/creep/Carrier.js","../src/factory/creep/Repairer.js","../src/factory/creep/Defender.js","../src/factory/creep/TheHealer.js","../src/factory/creep/Occupier.js","../src/controller/task.js","../src/factory/Secure.js","../src/factory/Tower.js","../src/controller/room.js","../src/controller/creep.js","../src/Alliance/main.js","../src/main.js"],"sourcesContent":["// 全局数据\r\nglobal.globalData = {\r\n    // 总输出\r\n    clog: true,\r\n    // 【不用填写，会自动获取】当前使用代码的用户名\r\n    username: '',\r\n    // 房间\r\n    rooms: [{\r\n        // 【可以不填写，会自动获取】房间名\r\n        name: 'W47S54',\r\n        // 【可以不填写，会自动获取】基地集合\r\n        spawns: [{\r\n            // 【可以不填写，会自动获取】基地名称\r\n            name: 'Spawn1'\r\n        }],\r\n        // 【可以不填写，会自动获取】自动安全(受到攻击自动开启)\r\n        AutomaticSecurity: true,\r\n        // 【可以不填写，会自动获取】采集者自动分配矿区\r\n        AutomaticAssignHarvest: true,\r\n        // 【可以不填写，会自动获取】自动分配建设采集区的CONTAINER\r\n        AutomaticAssignHarvestCONTAINER: true,\r\n        // 【可以不填写，会自动获取】自动分配建设控制器区的CONTAINER\r\n        AutomaticAssignControllerCONTAINER: true\r\n    }\r\n    ],\r\n    // 全部房间配置\r\n    roomsAllAllocation: {\r\n        // 是否开启强制统一房间配置\r\n        on: false,\r\n        // 配置内容（当遇到房间配置没有单独配置时，自动使用以下为默认配置）\r\n        content: {\r\n            // 自动安全(受到攻击自动开启)\r\n            AutomaticSecurity: true,\r\n            // 采集者自动分配矿区\r\n            AutomaticAssignHarvest: true,\r\n            // 自动分配建设采集区的CONTAINER\r\n            AutomaticAssignHarvestCONTAINER: true,\r\n            // 自动分配建设控制器区的CONTAINER\r\n            AutomaticAssignControllerCONTAINER: true\r\n        }\r\n    },\r\n    // 角色配置\r\n    creepConfigs: {\r\n        // 采集者\r\n        'harvest': {\r\n            // 普通版（6*WORK已经是1对1能量源300秒采集3000的极限，多了会浪费,5*WORK勉强剩余450多能量）\r\n            bodys: {\r\n                list: [WORK, WORK, WORK, WORK, WORK, CARRY, MOVE],\r\n                // 总能量数量（达到该植才允许生产,可以设比生产所需高点达到预留能量的效果,避免能量直接用完）\r\n                totalEnergyRequired: 200\r\n            },\r\n            // 缩减版\r\n            bodysMinus: {\r\n                list: [WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 100\r\n            },\r\n            // 加强版（没带carry部件或者满了，再采集能量会自动掉脚下，如果脚下有容器就会自动进容器）\r\n            bodysPlus: {\r\n                list: [WORK, WORK, WORK, WORK, WORK, CARRY, MOVE, MOVE, MOVE],\r\n                totalEnergyRequired: 300\r\n            },\r\n            // 总上限数量\r\n            number: 2,\r\n            // 自动分配数量（开启 AutomaticAssignHarvest可以根据最大支持数量动态更新采集者数量）\r\n            AutomaticAssignNum: true,\r\n            // 自动分配根据可用能量容量上限调整bodys\r\n            AutomaticAssignBodysEnergyCapacityAvailable: true\r\n        },\r\n        // 升级者\r\n        'upgrader': {\r\n            bodys: {\r\n                list: [WORK, WORK, WORK, WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK, WORK,\r\n                    CARRY, MOVE, MOVE, MOVE\r\n                ],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 2\r\n        },\r\n        // 建造者\r\n        'builder': {\r\n            bodys: {\r\n                list: [WORK, WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [WORK, WORK, WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 1\r\n        },\r\n        // 运输者\r\n        'carrier': {\r\n            bodys: {\r\n                list: [WORK, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, MOVE, MOVE],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [WORK, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY, CARRY,\r\n                    CARRY, CARRY, CARRY, CARRY, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE, MOVE\r\n                ],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 3,\r\n            // 矿区CONTAINER是否1v1运送\r\n            sourceContainer1v1: true\r\n        },\r\n        // 维修者\r\n        'repairer': {\r\n            bodys: {\r\n                list: [WORK, WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [WORK, WORK, WORK, CARRY, MOVE],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 1,\r\n            // tower创建拥有能量的时候不生成维修者\r\n            onTower: false\r\n        },\r\n        // 防御者-近战\r\n        'nearDefender': {\r\n            bodys: {\r\n                list: [MOVE, ATTACK, ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [MOVE, ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [MOVE, ATTACK, ATTACK, ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH,\r\n                    TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH\r\n                ],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 0\r\n        },\r\n        // 防御者-远战\r\n        'farDefender': {\r\n            bodys: {\r\n                list: [MOVE, RANGED_ATTACK, RANGED_ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH,\r\n                    TOUGH, TOUGH\r\n                ],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [MOVE, RANGED_ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [MOVE, RANGED_ATTACK, RANGED_ATTACK, RANGED_ATTACK, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH,\r\n                    TOUGH, TOUGH, TOUGH,\r\n                    TOUGH, TOUGH, TOUGH, TOUGH, TOUGH, TOUGH\r\n                ],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 0\r\n        },\r\n        // 治疗者\r\n        'theHealer': {\r\n            bodys: {\r\n                list: [MOVE, HEAL, HEAL],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [MOVE, HEAL],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [MOVE, HEAL, HEAL, HEAL],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 0\r\n        },\r\n        // 占领者\r\n        'occupier': {\r\n            bodys: {\r\n                list: [MOVE, CLAIM, CLAIM],\r\n                totalEnergyRequired: 200\r\n            },\r\n            bodysMinus: {\r\n                list: [MOVE, CLAIM],\r\n                totalEnergyRequired: 100\r\n            },\r\n            bodysPlus: {\r\n                list: [MOVE, CLAIM, CLAIM, CLAIM],\r\n                totalEnergyRequired: 300\r\n            },\r\n            number: 0\r\n        }\r\n    },\r\n    // 联盟信息\r\n    Alliance: [\r\n        {\r\n            username: '1755616537',\r\n            rooms: [\r\n                {\r\n                    name: 'W47S54'\r\n                },\r\n                {\r\n                    name: 'W48S54'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            username: 'Stars22',\r\n            rooms: [\r\n                {\r\n                    name: 'W49S53'\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    // 移动\r\n    Move: {\r\n        // 工作颜色\r\n        WorkColor: '#ffaa00',\r\n        // 获取资源颜色\r\n        WorkResourceColor: '#ffff00',\r\n    },\r\n\r\n\r\n    // 以下内容不可更改--------------------------------------------------------------\r\n\r\n    // 采集者ID\r\n    harvest: 'harvest',\r\n    // 升级者ID\r\n    upgrader: 'upgrader',\r\n    // 建造者ID\r\n    builder: 'builder',\r\n    // 运输者ID\r\n    carrier: 'carrier',\r\n    // 维修者ID\r\n    repairer: 'repairer',\r\n    // 防御者近战ID\r\n    nearDefender: 'nearDefender',\r\n    // 防御者远战ID\r\n    farDefender: 'farDefender',\r\n    // 占领者ID\r\n    occupier: 'occupier',\r\n    // 治疗者ID\r\n    theHealer: 'theHealer',\r\n    // 角色部件配置\r\n    creepComponentConfigs: {\r\n        // 每 tick 减少 2 点疲惫值\r\n        MOVE: 50,\r\n        // 每 tick 从能量源采集 2 单位能量。\r\n        // 每 tick 从矿区采集 1 单位矿物。\r\n        // 每 tick 增加工地建设进度 5 点，花费 5 单位能量。\r\n        // 每 tick 增加建筑 100 耐久度，花费 1 单位能量。\r\n        // 每 tick 拆减建筑 50 点耐久，并返还 0.25 单位能量。\r\n        // 每 tick 提高控制器升级进度 1 点，花费 1 单位能量。\r\n        WORK: 100,\r\n        // 携带最多 50 单位资源。\r\n        CARRY: 50,\r\n        // 对相邻的 creep 或建筑造成 30 点伤害。\r\n        ATTACK: 80,\r\n        // 单个目标时，每 tick 对 creep 或建筑造成 10 点伤害，范围为 3 格。\r\n        // 多个目标时，每 tick 对范围内所有 creep 与建筑造成 1-4-10 点伤害，具体伤害取决于距离，范围为 3 格。\r\n        RANGED_ATTACK: 150,\r\n        // 治疗对象可为自己或其它 creep。自愈或治疗相邻 creep 时每 tick 恢复 12 点耐久，一定距离内远程治疗每 tick 恢复 4 点耐久。\r\n        HEAL: 250,\r\n        // 占领一个中立房间的控制器。\r\n        // 每部件每 tick 使己方对中立房间控制器的预定时间增加 1 tick，或使其他玩家的预定时间减少 1 tick。\r\n        // 每部件每 tick 使其他玩家控制器降级计数器加速 300 tick。\r\n        // 注：拥有该部件的 creep 寿命只有 600 tick，且无法被 renew。\r\n        CLAIM: 600,\r\n        // 无附加效果，唯一作用是增加 creep 的最大耐久值。可被强化以承受更多伤害。\r\n        TOUGH: 10,\r\n    },\r\n    structuresShape: {\r\n        \"spawn\": \"◎\",\r\n        \"extension\": \"ⓔ\",\r\n        \"link\": \"◈\",\r\n        \"road\": \"•\",\r\n        \"constructedWall\": \"▓\",\r\n        \"rampart\": \"⊙\",\r\n        \"storage\": \"▤\",\r\n        \"tower\": \"🔫\",\r\n        \"observer\": \"👀\",\r\n        \"powerSpawn\": \"❂\",\r\n        \"extractor\": \"☸\",\r\n        \"terminal\": \"✡\",\r\n        \"lab\": \"☢\",\r\n        \"container\": \"□\",\r\n        \"nuker\": \"▲\",\r\n        \"factory\": \"☭\"\r\n    }\r\n}\r\n","clog = function (...e) {\r\n    if (globalData.clog) console.log(...e)\r\n};\r\nlog = function (...e) {\r\n    if (globalData.clog) console.log(JSON.stringify(e))\r\n};","Array.prototype.flat = function () {\r\n    return _.flatten(this)\r\n};\r\n// Array.prototype.reduce= function(func){return _.reduce(this,func)};\r\nArray.prototype.zip = function (another) {\r\n    return _.zip(this, another)\r\n};\r\nArray.prototype.contains = function (another) {\r\n    return _.includes(this, another)\r\n};\r\nArray.prototype.take = function (n) {\r\n    return _.take(this, n)\r\n};\r\nArray.prototype.head = function () {\r\n    return _.head(this)\r\n};\r\nArray.prototype.last = function () {\r\n    return _.last(this)\r\n};\r\nArray.prototype.without = function (...e) {\r\n    return _.without(this, ...e)\r\n};\r\nArray.prototype.sum = function (...e) {\r\n    return _.sum(this, ...e)\r\n};\r\nArray.prototype.toSet = function () {\r\n    return new Set(this)\r\n};\r\nArray.prototype.toMap = function () {\r\n    return this.reduce((map, entry) => {\r\n        map[entry[0]] = entry[1];\r\n        return map\r\n    }, {})\r\n};\r\nArray.prototype.find = function (...e) {\r\n    return _.find(this, ...e)\r\n};\r\nArray.prototype.maxBy = function (func) {\r\n    return this.reduce((ori, another) => func(ori) >= func(another) ? ori : another, this[0])\r\n};\r\nArray.prototype.minBy = function (func) {\r\n    return this.reduce((ori, another) => func(ori) < func(another) ? ori : another, this[0])\r\n};\r\nArray.prototype.log = function () {\r\n    console.log(JSON.stringify(this));\r\n    return this\r\n};\r\nArray.prototype.randomGet = function () {\r\n    return this[Math.floor(this.length * Math.random())]\r\n};\r\n\r\nlet base36 = Math.pow(36, 10)\r\nrandomId = () => _.padLeft(Math.ceil(Math.random() * base36).toString(36).toLocaleUpperCase(), 10, \"0\")\r\n\r\nlet posCodeNumberMap = {};\r\nlet posCodeCharMap = {};\r\n// pos 转换 char 用的\r\n(function () {\r\n    let a = 'a'.charCodeAt(0)\r\n    let A = 'A'.charCodeAt(0)\r\n    for (let i = 0; i < 25; i++) {\r\n        let b = String.fromCharCode(a + i)\r\n        let j = 25 + i\r\n        let B = String.fromCharCode(A + i)\r\n        posCodeNumberMap[i] = b\r\n        posCodeCharMap[b] = i\r\n        posCodeNumberMap[j] = B\r\n        posCodeCharMap[B] = j\r\n    }\r\n}())\r\n\r\n\r\nlet pro = {\r\n    randomGet(array) {\r\n        return array[Math.floor(array.length * Math.random())]\r\n    },\r\n    getBodyEnergyNeed(body) {\r\n        let need = 0;\r\n        body.forEach(e => {\r\n            if (BODYPART_COST[e]) need += BODYPART_COST[e]\r\n        });\r\n        return need;\r\n    },\r\n    /*\r\n    let str = Utils.encodePosArray(Memory.rooms.W5N8.structMap.constructedWall.map(e=>{return {x:e[0],y:e[1]}}))\r\n    log(str)\r\n    let arrs = Utils.decodePosArray(str)\r\n    log(arrs)\r\n    log(Memory.rooms.W5N8.structMap.constructedWall.map(e=>{return {x:e[0],y:e[1]}}))\r\n    */\r\n    encodePosArray(posArray) {\r\n        return posArray.map(e => posCodeNumberMap[e.x] + posCodeNumberMap[e.y]).reduce((a, b) => a + b, \"\")\r\n    },\r\n    decodePosArray(string) {\r\n        let out = []\r\n        for (let i = 0; i < string.length; i += 2) {\r\n            out.push({\r\n                x: posCodeCharMap[string[i]],\r\n                y: posCodeCharMap[string[i + 1]]\r\n            })\r\n        }\r\n        return out;\r\n    },\r\n    hashCode(str) {\r\n        let hash = 5381;\r\n        for (let i = 0; i < str.length; i++) {\r\n            let char = str.charCodeAt(i);\r\n            hash = ((hash << 5) + hash) + char; /* hash * 33 + c */\r\n        }\r\n        return hash\r\n    },\r\n    //线性同余随机数\r\n    rnd(seed) {\r\n        return (seed * 9301 + 49297) % 233280; //为何使用这三个数?\r\n    },\r\n    randomInt(start, end) {\r\n        if (end == undefined) {\r\n            end = start\r\n            start = 0\r\n        }\r\n        let range = end - start\r\n        return start + Math.floor(Math.random() * range)\r\n    },\r\n\r\n\r\n    cn: function screepsCN() {\r\n        // 汉化\r\n\r\n        clog(\"【客户端汉化显示加载】【开始】 Time \" + Game.time);\r\n        console.log(\r\n            `<script src=\"https://screeps-cn.gitee.io/screeps-chinese-pack-release/main.js\" async defer></script>`\r\n        );\r\n        clog(\"【客户端汉化显示加载】【完成】 Time \" + Game.time);\r\n    },\r\n    notify(message, onTime = true, groupInterval = 0) {\r\n        // screeps内置 邮件发送\r\n        // 带重复,超时60秒,过滤功能\r\n        // [例子: Utils.notify(`【${roomName}】房间,开启安全模式【成功】`);]\r\n\r\n        if (!Memory.notifyList) Memory.notifyList = [];\r\n        let time = Game.time;\r\n        let notifyList = Memory.notifyList;\r\n        let notifyList2 = [];\r\n        let on = false;\r\n        for (var i = 0; i < notifyList.length; i++) {\r\n            if (notifyList[i].message == message) {\r\n                on = true;\r\n            }\r\n            if (Game.time - notifyList[i].time <= 60) notifyList2.push(notifyList[i]);\r\n        }\r\n        if (on) return;\r\n        notifyList2.push({\r\n            message: message,\r\n            time: time\r\n        })\r\n        Memory.notifyList = notifyList2;\r\n        if (onTime) {\r\n            Game.notify(`Time ${time} ${message}`, groupInterval);\r\n        } else {\r\n            Game.notify(message, groupInterval);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nglobal.Utils = pro;","/*\r\ncreep对穿+跨房间寻路+寻路缓存 \r\n跑的比香港记者还快从你做起\r\n应用此模块会导致creep.moveTo可选参数中这些项失效：reusePath、serializeMemory、noPathFinding、ignore、avoid、serialize\r\n保留creep.moveTo中其他全部可选参数如visualizePathStyle、range、ignoreDestructibleStructures、ignoreCreeps、ignoreRoad等\r\n新增creep.moveTo中可选参数ignoreSwamps，会无视swamp与road的移动力损耗差异，一律与plain相同处理，用于方便pc和眼，默认false\r\n例：creep.moveTo(controller, {ignoreSwamps: true});\r\n新增creep.moveTo中可选参数bypassHostileCreeps，被creep挡路时若此项为true则绕过别人的creep，默认为true，设为false用于近战攻击\r\n例：creep.moveTo(controller, {bypassHostileCreeps: false});\r\n新增creep.moveTo中可选参数bypassRange，被creep挡路准备绕路时的绕路半径，默认为5\r\n例：creep.moveTo(controller, {bypassRange: 10});\r\n新增creep.moveTo中可选参数noPathDelay，寻得的路是不完全路径时的再次寻路延迟，默认为10\r\n例：creep.moveTo(controller, {noPathDelay: 5});\r\n新增返回值ERR_INVALID_ARGS，表示range或者bypassRange类型错误\r\n\r\n遇到己方creep自动进行对穿，遇到自己设置了不想被对穿的creep（或bypassHostileCreeps设为true时遇到他人creep）会自动绕过\r\n会将新手墙和部署中的invaderCore处理为无法通过\r\n会绕过非终点的portal，不影响creep.moveTo(portal)\r\n不使用Memory及global，不会因此干扰外部代码\r\n不会在Creep.prototype、PowerCreep.prototype上增加官方未有的键值，不会因此干扰外部代码\r\n本模块不可用于sim，在sim会因为房间名格式不对返回ERR_INVALID_TARGET\r\n模块参数见代码头部，模块接口见代码尾部\r\n版本号规则：alpha test = 0.1.x，beta test = 0.9.x，publish >= 1.0.0\r\n\r\nauthor: Scorpior\r\ndebug helpers: fangxm, czc\r\ninspired by: Yuandiaodiaodiao\r\ndate: 2020/3/30\r\nversion: 0.9.4(beta test)\r\n\r\nUsage:\r\nmodule :main\r\n\r\nrequire('超级移动优化');\r\nmodule.exports.loop=function() {\r\n\r\n    //your codes go here\r\n\r\n}\r\n\r\nchangelog:\r\n0.1.0:  maybe not runnable\r\n0.1.1： still maybe not runnable，修了一些typo，完成正向移动，修改isObstacleStructure\r\n0.1.2： maybe runnable，some bugs are fixed\r\n0.1.3:  修正工地位置寻路错误，调整打印格式\r\n0.1.4:  补充pc对穿，打印中增加cache hits统计\r\n0.9.0:  启用自动清理缓存，保留ignoreCreeps参数，调整对穿顺序+增加在storage附近检查对穿，\r\n        正确识别敌对rampart，正确查询带range路径，打印中增加对穿频率统计\r\n0.9.1:  增加正常逻辑开销统计，修改cache搜索开销统计为cache miss开销统计，绕路bugfix，跨房检测bugfix，other bugfix\r\n0.9.2:  修改缓存策略减少查找耗时增加命中率，增加核心区对穿次数统计，对穿bugfix，other bugfix\r\n0.9.3： 取消路径反向复用避免偶发的复用非最优路径的情况，改进识别被新手墙封闭的房间，增加avoidRooms设置，\r\n        增加远距离跨房寻路成功率，房间出口处对穿bug fix\r\n0.9.4:  优化路径复用避免偶发的复用非最优路径的情况，删除运行时参数中neutralCostMatrixClearDelay，\r\n        自动根据挡路建筑情况设置中立房间costMatrix过期时间，增加ob寻路（检查房间是否可走），\r\n        提供deletePathInRoom接口（使用方式见下方ps），print()中增加平均每次查找缓存时检查的路径数量统计，\r\n        findRoute遇到过道新手墙时bugfix，偏移路径bugfix\r\n0.9.5： TODO：ignoreSwamp避开路，提供deletePathFromRoom、deletePathToRoom接口，增加自动visual，betterMove\r\n\r\n\r\nps:\r\n1.默认ignoreCreeps为true，主动设置ignoreCreeps为false会在撞到creep时重新寻路\r\n2.对于不想被对穿的creep（比如没有脚的中央搬运工）, 设置memory：\r\ncreep.memory.dontPullMe = true;\r\n3.修路后希望手动更新房间内路径，可执行如下代码：\r\nrequire('超级移动优化').deletePathInRoom(roomName);\r\n4.战斗中遇到敌方pc不断产生新rampart挡路的情况，目前是撞上建筑物才重新寻路（原版moveTo撞上也继续撞），如果觉得需要手动提前激活重新寻路则联系我讨论\r\n5.在控制台输入require('超级移动优化').print()获取性能信息，鼓励发给作者用于优化\r\n*/\r\n\r\n/***************************************\r\n *  模块参数\r\n */\r\n// 初始化参数\r\nlet config = {\r\n    地图房号最大数字超过100: false,\r\n    changeMove: true,   // 【未启用】为creep.move增加对穿能力\r\n    changeMoveTo: true, // 全面优化creep.moveTo，跨房移动也可以一个moveTo解决问题\r\n    changeFindClostestByPath: true,     // 【未启用】轻度修改findClosestByPath，使得默认按照ignoreCreeps寻找最短\r\n    autoVisual: false,  // 【未启用】\r\n    enableFlee: false   // 【未启用】是否添加flee()函数，注意这会在Creep.prototype上添加官方未有键值，flee()用法见最底下module.exports处\r\n}\r\n// 运行时参数 \r\nlet pathClearDelay = 5000;  // 清理相应时间内都未被再次使用的路径，同时清理死亡creep的缓存，设为undefined表示不清除缓存\r\nlet hostileCostMatrixClearDelay = 500; // 自动清理相应时间前创建的其他玩家房间的costMatrix\r\nlet coreLayoutRange = 3; // 核心布局半径，在离storage这个范围内频繁检查对穿（减少堵路的等待\r\nlet avoidRooms = ['E18S8', 'E19S9', 'E21S9', 'E24S8', 'E35N6', 'E25S9',\r\n    'E19N2', 'E18N3', 'E29N5', 'E29N3', 'E28N8', 'E33N9', 'E34N8',\r\n    'E37N6', 'E41N8', 'E39N11', 'E39N12', 'E39N13', 'E17S9']      // 永不踏入这些房间\r\nlet avoidExits = {\r\n    'E35N7': 'E35N6',\r\n    'fromRoom': 'toRoom'\r\n}   // 【未启用】单向屏蔽房间的一些出口，永不从fromRoom踏入toRoom\r\n/** @type {{id:string, roomName:string, taskQueue:{path:MyPath, idx:number, roomName:string}[]}[]} */\r\nlet observers = ['5e3646219c6dc78024fd7097', '5e55e9b8673548d9468a2d3d', '5e36372d00fab883d281d95e'];  // 如果想用ob寻路，把ob的id放这里\r\n\r\n/***************************************\r\n *  局部缓存\r\n */\r\n/** @type {{ [time: number]:{path:MyPath, idx:number, roomName:string}[] }} */\r\nlet obTimer = {};   // 【未启用】用于登记ob调用，在相应的tick查看房间对象\r\nlet obTick = Game.time;\r\n/** @type {Paths} */\r\nlet globalPathCache = {};     // 缓存path\r\n/** @type {MoveTimer} */\r\nlet pathCacheTimer = {}; // 用于记录path被使用的时间，清理长期未被使用的path\r\n/** @type {CreepPaths} */\r\nlet creepPathCache = {};    // 缓存每个creep使用path的情况\r\nlet creepMoveCache = {};    // 缓存每个creep最后一次移动的tick\r\nlet emptyCostMatrix = new PathFinder.CostMatrix;\r\n/** @type {CMs} */\r\nlet costMatrixCache = {};    // true存ignoreDestructibleStructures==true的，false同理\r\n/** @type {{ [time: number]:{roomName:string, avoids:string[]}[] }} */\r\nlet costMatrixCacheTimer = {}; // 用于记录costMatrix的创建时间，清理过期costMatrix\r\nlet autoClearTick = Game.time;  // 用于避免重复清理缓存\r\n\r\nconst obstacles = new Set(OBSTACLE_OBJECT_TYPES);\r\nconst originMove = Creep.prototype.move;\r\nconst originMoveTo = Creep.prototype.moveTo;\r\nconst originFindClosestByPath = RoomPosition.prototype.findClosestByPath;\r\n\r\n// 统计变量\r\nlet startTime;\r\nlet endTime;\r\nlet startCacheSearch;\r\nlet analyzeCPU = { // 统计相关函数总耗时\r\n    move: { sum: 0, calls: 0 },\r\n    moveTo: { sum: 0, calls: 0 },\r\n    findClosestByPath: { sum: 0, calls: 0 }\r\n};\r\nlet pathCounter = 0;\r\nlet testCacheHits = 0;\r\nlet testCacheMiss = 0;\r\nlet testNormal = 0;\r\nlet testNearStorageCheck = 0;\r\nlet testNearStorageSwap = 0;\r\nlet testTrySwap = 0;\r\nlet testBypass = 0;\r\nlet normalLogicalCost = 0;\r\nlet cacheHitCost = 0;\r\nlet cacheMissCost = 0;\r\n\r\n/***************************************\r\n *  util functions\r\n */\r\nlet reg1 = /^([WE])([0-9]+)([NS])([0-9]+)$/;    // parse得到['E28N7','E','28','N','7']\r\n/**\r\n *  统一到大地图坐标，平均单次开销0.00005\r\n * @param {RoomPosition} pos \r\n */\r\nfunction formalize(pos) {\r\n    let splited = reg1.exec(pos.roomName);\r\n    if (splited && splited.length == 5) {\r\n        return { // 如果这里出现类型错误，那么意味着房间名字不是正确格式但通过了parse，小概率事件\r\n            x: (splited[1] === 'W' ? -splited[2] : +splited[2] + 1) * 50 + pos.x,\r\n            y: (splited[3] === 'N' ? -splited[4] : +splited[4] + 1) * 50 + pos.y\r\n        }\r\n    } // else 房间名字不是正确格式\r\n    return {}\r\n}\r\n\r\nfunction getAdjacents(pos) {\r\n    let posArray = [];\r\n    for (let i = -1; i <= 1; i++) {\r\n        for (let j = -1; j <= 1; j++) {\r\n            posArray.push({\r\n                x: pos.x + i,\r\n                y: pos.y + j\r\n            })\r\n        }\r\n    }\r\n    return posArray;\r\n}\r\n\r\n/**\r\n *  阉割版isEqualTo，提速\r\n * @param {RoomPosition} pos1 \r\n * @param {RoomPosition} pos2 \r\n */\r\nfunction isEqual(pos1, pos2) {\r\n    return pos1.x == pos2.x && pos1.y == pos2.y && pos1.roomName == pos2.roomName;\r\n}\r\n\r\n/**\r\n *  兼容房间边界\r\n *  参数具有x和y属性就行\r\n * @param {RoomPosition} pos1 \r\n * @param {RoomPosition} pos2 \r\n */\r\nfunction isNear(pos1, pos2) {\r\n    if (pos1.roomName == pos2.roomName) {    // undefined == undefined 也成立\r\n        return -1 <= pos1.x - pos2.x && pos1.x - pos2.x <= 1 && -1 <= pos1.y - pos2.y && pos1.y - pos2.y <= 1;\r\n    } else if (pos1.roomName && pos2.roomName) {    // 是完整的RoomPosition\r\n        if (pos1.x + pos2.x != 49 && pos1.y + pos2.y != 49) return false;    // 肯定不是两个边界点, 0.00003 cpu\r\n        // start\r\n        let splited1 = reg1.exec(pos1.roomName);\r\n        let splited2 = reg1.exec(pos2.roomName);\r\n        if (splited1 && splited1.length == 5 && splited2 && splited2.length == 5) {\r\n            // 统一到大地图坐标\r\n            let formalizedEW = (splited1[1] === 'W' ? -splited1[2] : +splited1[2] + 1) * 50 + pos1.x - (splited2[1] === 'W' ? -splited2[2] : +splited2[2] + 1) * 50 - pos2.x;\r\n            let formalizedNS = (splited1[3] === 'N' ? -splited1[4] : +splited1[4] + 1) * 50 + pos1.y - (splited2[3] === 'N' ? -splited2[4] : +splited2[4] + 1) * 50 - pos2.y;\r\n            return -1 <= formalizedEW && formalizedEW <= 1 && -1 <= formalizedNS && formalizedNS <= 1;\r\n        }\r\n        // end - start = 0.00077 cpu\r\n    }\r\n    return false\r\n}\r\n\r\n/** \r\n* @param {RoomPosition} pos1 \r\n* @param {RoomPosition} pos2 \r\n*/\r\nfunction inRange(pos1, pos2, range) {\r\n    if (pos1.roomName == pos2.roomName) {\r\n        return -range <= pos1.x - pos2.x && pos1.x - pos2.x <= range && -range <= pos1.y - pos2.y && pos1.y - pos2.y <= range;\r\n    } else {\r\n        pos1 = formalize(pos1);\r\n        pos2 = formalize(pos2);\r\n        return pos1.x && pos2.x && inRange(pos1, pos2);\r\n    }\r\n}\r\n\r\n/**\r\n *  fromPos和toPos是pathFinder寻出的路径上的，只可能是同房相邻点或者跨房边界点\r\n * @param {RoomPosition} fromPos \r\n * @param {RoomPosition} toPos \r\n */\r\nfunction getDirection(fromPos, toPos) {\r\n    if (fromPos.roomName == toPos.roomName) {\r\n        if (toPos.x > fromPos.x) {    // 下一步在右边\r\n            if (toPos.y > fromPos.y) {    // 下一步在下面\r\n                return BOTTOM_RIGHT;\r\n            } else if (toPos.y == fromPos.y) { // 下一步在正右\r\n                return RIGHT;\r\n            }\r\n            return TOP_RIGHT;   // 下一步在上面\r\n        } else if (toPos.x == fromPos.x) { // 横向相等\r\n            if (toPos.y > fromPos.y) {    // 下一步在下面\r\n                return BOTTOM;\r\n            } else if (toPos.y < fromPos.y) {\r\n                return TOP;\r\n            }\r\n        } else {  // 下一步在左边\r\n            if (toPos.y > fromPos.y) {    // 下一步在下面\r\n                return BOTTOM_LEFT;\r\n            } else if (toPos.y == fromPos.y) {\r\n                return LEFT;\r\n            }\r\n            return TOP_LEFT;\r\n        }\r\n    } else {  // 房间边界点\r\n        if (fromPos.x == 0 || fromPos.x == 49) {  // 左右相邻的房间，只需上下移动（左右边界会自动弹过去）\r\n            if (toPos.y > fromPos.y) {   // 下一步在下面\r\n                return BOTTOM;\r\n            } else if (toPos.y < fromPos.y) { // 下一步在上\r\n                return TOP\r\n            } // else 正左正右\r\n            return fromPos.x ? RIGHT : LEFT;\r\n        } else if (fromPos.y == 0 || fromPos.y == 49) {    // 上下相邻的房间，只需左右移动（上下边界会自动弹过去）\r\n            if (toPos.x > fromPos.x) {    // 下一步在右边\r\n                return RIGHT;\r\n            } else if (toPos.x < fromPos.x) {\r\n                return LEFT;\r\n            }// else 正上正下\r\n            return fromPos.y ? BOTTOM : TOP;\r\n        }\r\n    }\r\n}\r\n\r\nlet reg2 = /^[WE]([0-9]+)[NS]([0-9]+)$/;    // parse得到['E28N7','28','7']\r\nlet isHighWay = config.地图房号最大数字超过100 ?\r\n    (roomName) => {\r\n        let splited = reg2.exec(roomName);\r\n        return splited[1] % 10 == 0 || splited[2] % 10 == 0;\r\n    } :\r\n    (roomName) => {\r\n        // E0 || E10 || E1S0 || [E10S0|E1S10] || [E10S10] 比正则再除快\r\n        return roomName[1] == 0 || roomName[2] == 0 || roomName[3] == 0 || roomName[4] == 0 || roomName[5] == 0;\r\n    }\r\n\r\n/**\r\n *  缓存的路径和当前moveTo参数相同\r\n * @param {MyPath} path \r\n * @param {*} ops \r\n */\r\nfunction isSameOps(path, ops) {\r\n    return path.ignoreRoads == !!ops.ignoreRoads &&\r\n        path.ignoreSwamps == !!ops.ignoreSwamps &&\r\n        path.ignoreStructures == !!ops.ignoreDestructibleStructures;\r\n}\r\n\r\nfunction hasActiveBodypart(body, type) {\r\n    if (!body) {\r\n        return true;\r\n    }\r\n\r\n    for (var i = body.length - 1; i >= 0; i--) {\r\n        if (body[i].hits <= 0)\r\n            break;\r\n        if (body[i].type === type)\r\n            return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nfunction isClosedRampart(structure) {\r\n    return structure.structureType == STRUCTURE_RAMPART && !structure.my && !structure.isPublic;\r\n}\r\n\r\n/**\r\n *  查看是否有挡路建筑\r\n * @param {Room} room\r\n * @param {RoomPosition} pos \r\n * @param {boolean} ignoreStructures\r\n */\r\nfunction isObstacleStructure(room, pos, ignoreStructures) {\r\n    let consSite = room.lookForAt(LOOK_CONSTRUCTION_SITES, pos);\r\n    if (0 in consSite && consSite[0].my && obstacles.has(consSite[0].structureType)) {  // 工地会挡路\r\n        return true;\r\n    }\r\n    for (let s of room.lookForAt(LOOK_STRUCTURES, pos)) {\r\n        if (!s.hits || s.ticksToDeploy) {     // 是新手墙或者无敌中的invaderCore\r\n            return true;\r\n        } else if (!ignoreStructures && (obstacles.has(s.structureType) || isClosedRampart(s))) {\r\n            return true\r\n        }\r\n    }\r\n    return false;\r\n    // let possibleStructures = room.lookForAt(LOOK_STRUCTURES, pos);  // room.lookForAt比pos.lookFor快\r\n    // 万一有人把路修在extension上，导致需要每个建筑都判断，最多重叠3个建筑（rap+road+其他）\r\n    // return obstacles.has(possibleStructures[0]) || obstacles.has(possibleStructures[1]) || obstacles.has(possibleStructures[2]);    // 条件判断平均每次0.00013cpu\r\n}\r\n\r\n/**\r\n *  登记ob需求\r\n * @param {MyPath} path \r\n * @param {number} idx \r\n */\r\nfunction addObTask(path, idx) {\r\n    let roomName = path.posArray[idx].roomName;\r\n    //console.log('准备ob ' + roomName);\r\n    for (let obData of observers) {\r\n        if (Game.map.getRoomLinearDistance(obData.roomName, roomName) <= 10) {\r\n            obData.taskQueue.push({ path: path, idx: idx, roomName: roomName });\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *  尝试用ob检查路径\r\n */\r\nfunction doObTask() {\r\n    for (let obData of observers) { // 遍历所有ob\r\n        let queue = obData.taskQueue;\r\n        while (queue.length) {  // 没有task就pass\r\n            let task = queue[queue.length - 1];\r\n            let roomName = task.roomName;\r\n            if (roomName in costMatrixCache) {  // 有过视野不用再ob\r\n                if (!task.path.directionArray[task.idx]) {\r\n                    //console.log(roomName + ' 有视野了无需ob');\r\n                    checkRoom({ name: roomName }, task.path, task.idx - 1);\r\n                }\r\n                queue.pop();\r\n                continue;\r\n            }\r\n            /** @type {StructureObserver} */\r\n            let ob = Game.getObjectById(obData.id);\r\n            if (ob) {\r\n                //console.log('ob ' + roomName);\r\n                ob.observeRoom(roomName);\r\n                if (!(Game.time + 1 in obTimer)) {\r\n                    obTimer[Game.time + 1] = [];\r\n                }\r\n                obTimer[Game.time + 1].push({ path: task.path, idx: task.idx, roomName: roomName });    // idx位置无direction\r\n            } else {\r\n                observers.splice(observers.indexOf(obData), 1);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *  查看ob得到的房间\r\n */\r\nfunction checkObResult() {\r\n    for (let tick in obTimer) {\r\n        if (tick < Game.time) {\r\n            delete obTimer[tick];\r\n            continue;   // 后面可能还有要检查的\r\n        } else if (tick == Game.time) {\r\n            for (let result of obTimer[tick]) {\r\n                if (result.roomName in Game.rooms) {\r\n                    //console.log('ob得到 ' + result.roomName);\r\n                    checkRoom(Game.rooms[result.roomName], result.path, result.idx - 1);    // checkRoom要传有direction的idx\r\n                }\r\n            }\r\n            delete obTimer[tick];\r\n        } // else 没有要检查的\r\n        break;  // 检查完了或者没有要检查的\r\n    }\r\n}\r\n\r\n/**\r\n *  为房间保存costMatrix，ignoreDestructibleStructures这个参数的两种情况各需要一个costMatrix\r\n *  设置costMatrix缓存的过期时间\r\n * @param {Room} room \r\n * @param {RoomPosition} pos\r\n */\r\nfunction generateCostMatrix(room, pos) {\r\n    let noStructureCostMat = new PathFinder.CostMatrix; // 不考虑可破坏的建筑，但是要考虑墙上资源点和无敌的3种建筑，可能还有其他不能走的？\r\n    let structureCostMat = new PathFinder.CostMatrix;   // 在noStructrue的基础上加上所有不可行走的建筑\r\n    let totalStructures = room.find(FIND_STRUCTURES);\r\n    let 修路也没用的墙点 = [].concat(room.find(FIND_SOURCES), room.find(FIND_MINERALS), room.find(FIND_DEPOSITS));\r\n    let x, y, noviceWall, deployingCore, centralPortal;\r\n    let clearDelay = Infinity;\r\n    for (let object of 修路也没用的墙点) {\r\n        x = object.pos.x; y = object.pos.y;\r\n        noStructureCostMat.set(x, y, 255);\r\n    }\r\n    if (room.controller && (room.controller.my || room.controller.safeMode)) {  // 自己的工地不能踩\r\n        for (let consSite of room.find(FIND_CONSTRUCTION_SITES)) {\r\n            if (obstacles.has(consSite.structureType)) {\r\n                x = consSite.pos.x; y = consSite.pos.y;\r\n                noStructureCostMat.set(x, y, 255);\r\n                structureCostMat.set(x, y, 255);\r\n            }\r\n        }\r\n    }\r\n    for (let s of totalStructures) {\r\n        if (s.structureType == STRUCTURE_INVADER_CORE) {  // 第1种可能无敌的建筑\r\n            if (s.ticksToDeploy) {\r\n                deployingCore = true;\r\n                clearDelay = clearDelay > s.ticksToDeploy ? s.ticksToDeploy : clearDelay;\r\n                noStructureCostMat.set(s.pos.x, s.pos.y, 255);\r\n            }\r\n            structureCostMat.set(s.pos.x, s.pos.y, 255);\r\n        } else if (s.structureType == STRUCTURE_PORTAL) {  // 第2种无敌建筑\r\n            if (!isHighWay(room.name)) {\r\n                centralPortal = true;\r\n                clearDelay = clearDelay > s.ticksToDecay ? s.ticksToDecay : clearDelay;\r\n            }\r\n            x = s.pos.x; y = s.pos.y;\r\n            structureCostMat.set(x, y, 255);\r\n            noStructureCostMat.set(x, y, 255);\r\n        } else if (s.structureType == STRUCTURE_WALL) {    // 第3种可能无敌的建筑\r\n            if (!s.hits) {\r\n                noviceWall = true;\r\n                noStructureCostMat.set(s.pos.x, s.pos.y, 255);\r\n            }\r\n            structureCostMat.set(s.pos.x, s.pos.y, 255);\r\n        } else if (s.structureType == STRUCTURE_ROAD) {    // 路的移动力损耗是1，此处设置能寻到墙上的路\r\n            x = s.pos.x; y = s.pos.y;\r\n            if (noStructureCostMat.get(x, y) == 0) {  // 不是在3种无敌建筑或墙中资源上\r\n                noStructureCostMat.set(x, y, 1);\r\n                if (structureCostMat.get(x, y) == 0) {     // 不是在不可行走的建筑上\r\n                    structureCostMat.set(x, y, 1);\r\n                }\r\n            }\r\n        } else if (obstacles.has(s.structureType) || isClosedRampart(s)) {   // HELP：有没有遗漏其他应该设置 noStructureCostMat 的点\r\n            structureCostMat.set(s.pos.x, s.pos.y, 255);\r\n        }\r\n    }\r\n\r\n    costMatrixCache[room.name] = {\r\n        roomName: room.name,\r\n        true: noStructureCostMat,   // 对应 ignoreDestructibleStructures = true\r\n        false: structureCostMat     // 对应 ignoreDestructibleStructures = false\r\n    };\r\n\r\n    let avoids = [];\r\n    if (room.controller && room.controller.owner && !room.controller.my && hostileCostMatrixClearDelay) {  // 他人房间，删除costMat才能更新被拆的建筑位置\r\n        if (!(Game.time + hostileCostMatrixClearDelay in costMatrixCacheTimer)) {\r\n            costMatrixCacheTimer[Game.time + hostileCostMatrixClearDelay] = [];\r\n        }\r\n        costMatrixCacheTimer[Game.time + hostileCostMatrixClearDelay].push({\r\n            roomName: room.name,\r\n            avoids: avoids\r\n        });   // 记录清理时间\r\n    } else if (noviceWall || deployingCore || centralPortal) { // 如果遇到可能消失的挡路建筑，这3种情况下clearDelay才可能被赋值为非Infinity\r\n        if (noviceWall) {    // 如果看见新手墙\r\n            let neighbors = Game.map.describeExits(room.name);\r\n            for (let direction in neighbors) {\r\n                let status = Game.map.getRoomStatus(neighbors[direction]);\r\n                if (status.status == 'closed') {\r\n                    avoidRooms[neighbors[direction]] = 1;\r\n                } else if (status.status != 'normal' && status.timestamp != null) {\r\n                    let estimateTickToChange = (status.timestamp - new Date().getTime()) / 10000; // 10s per tick\r\n                    clearDelay = clearDelay > estimateTickToChange ? Math.ceil(estimateTickToChange) : clearDelay;\r\n                }\r\n            }\r\n            if (pos) {  // 如果知道自己的pos\r\n                for (let direction in neighbors) {\r\n                    if (!(neighbors[direction] in avoidRooms)) {\r\n                        let exits = room.find(+direction);\r\n                        if (PathFinder.search(pos, exits, { maxRooms: 1, roomCallback: () => noStructureCostMat }).incomplete) {    // 此路不通\r\n                            avoidRooms[neighbors[direction]] = 1;\r\n                            avoids.push(neighbors[direction]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //console.log(room.name + ' costMat 设置清理 ' + clearDelay);\r\n        if (!(Game.time + clearDelay in costMatrixCacheTimer)) {\r\n            costMatrixCacheTimer[Game.time + clearDelay] = [];\r\n        }\r\n        costMatrixCacheTimer[Game.time + clearDelay].push({\r\n            roomName: room.name,\r\n            avoids: avoids  // 因新手墙导致的avoidRooms需要更新\r\n        });   // 记录清理时间\r\n    }\r\n    //console.log('生成costMat ' + room.name);\r\n\r\n}\r\n\r\n/**\r\n *  把路径上有视野的位置的正向移动方向拿到，只有在找新路时调用，找新路时会把有视野房间都缓存进costMatrixCache\r\n * @param {MyPath} path \r\n */\r\nfunction generateDirectionArray(path) {\r\n    let posArray = path.posArray\r\n    let directionArray = new Array(posArray.length);\r\n    let incomplete = false;\r\n    for (let idx = 1; idx in posArray; idx++) {\r\n        if (posArray[idx - 1].roomName in costMatrixCache) {    // 有costMat，是准确路径，否则需要在有视野时checkRoom()\r\n            directionArray[idx] = getDirection(posArray[idx - 1], posArray[idx]);\r\n        } else if (!incomplete) {   // 记录第一个缺失准确路径的位置\r\n            incomplete = idx;\r\n        }\r\n    }\r\n    if (observers.length && incomplete) {\r\n        addObTask(path, incomplete); // 这格没有direction\r\n    }\r\n    path.directionArray = directionArray;\r\n}\r\n\r\n/**\r\n *  第一次拿到该room视野，startIdx是新房中唯一有direction的位置\r\n * @param {Room} room \r\n * @param {MyPath} path \r\n * @param {number} startIdx \r\n */\r\nfunction checkRoom(room, path, startIdx) {\r\n    if (!(room.name in costMatrixCache)) {\r\n        generateCostMatrix(room, path.posArray[startIdx]);\r\n    }\r\n    let thisRoomName = room.name\r\n    /** @type {CostMatrix} */\r\n    let costMat = costMatrixCache[thisRoomName][path.ignoreStructures];\r\n    let posArray = path.posArray;\r\n    let directionArray = path.directionArray;\r\n    let i;\r\n    for (i = startIdx; i + 1 in posArray && posArray[i].roomName == thisRoomName; i++) {\r\n        if (costMat.get(posArray[i].x, posArray[i].y) == 255) {   // 路上有东西挡路\r\n            return false;\r\n        }\r\n        directionArray[i + 1] = getDirection(posArray[i], posArray[i + 1]);\r\n    }\r\n    if (observers.length && i + 1 in posArray) {\r\n        while (i + 1 in posArray) {\r\n            if (!directionArray[i + 1]) {\r\n                addObTask(path, i + 1);     // 这格没有direction\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n *  尝试对穿，有2种不可穿情况\r\n * @param {Creep} creep \r\n * @param {RoomPosition} pos  \r\n * @param {boolean} bypassHostileCreeps\r\n */\r\nfunction trySwap(creep, pos, bypassHostileCreeps, ignoreCreeps) {     // ERR_NOT_FOUND开销0.00063，否则开销0.0066\r\n    let obstacleCreeps = creep.room.lookForAt(LOOK_CREEPS, pos).concat(creep.room.lookForAt(LOOK_POWER_CREEPS, pos));\r\n    if (obstacleCreeps.length) {\r\n        if (!ignoreCreeps) {\r\n            return ERR_INVALID_TARGET;\r\n        }\r\n        for (let c of obstacleCreeps) {\r\n            if (c.my) {\r\n                if (c.memory.dontPullMe) {    // 第1种不可穿情况：挡路的creep设置了不对穿\r\n                    return ERR_INVALID_TARGET;\r\n                }\r\n                if (creepMoveCache[c.name] != Game.time && originMove.call(c, getDirection(pos, creep.pos)) == ERR_NO_BODYPART && creep.pull) {\r\n                    creep.pull(c);\r\n                    originMove.call(c, creep);\r\n                }\r\n            } else if (bypassHostileCreeps && (!c.room.controller || !c.room.controller.my || !c.room.controller.safeMode)) {  // 第二种不可穿情况：希望绕过敌对creep\r\n                return ERR_INVALID_TARGET;\r\n            }\r\n        }\r\n        testTrySwap++;\r\n        return OK;    // 或者全部操作成功\r\n    }\r\n    return ERR_NOT_FOUND // 没有creep\r\n}\r\n\r\nlet temporalAvoidFrom, temporalAvoidTo;\r\nfunction routeCallback(nextRoomName, fromRoomName) {    // 避开avoidRooms设置了的\r\n    if (nextRoomName in avoidRooms) {\r\n        //console.log('Infinity at ' + nextRoomName);\r\n        return Infinity;\r\n    }\r\n    return isHighWay(nextRoomName) ? 1 : 1.15;\r\n}\r\nfunction bypassRouteCallback(nextRoomName, fromRoomName) {\r\n    if (fromRoomName == temporalAvoidFrom && nextRoomName == temporalAvoidTo) {\r\n        //console.log(`Infinity from ${fromRoomName} to ${nextRoomName}`);\r\n        return Infinity;\r\n    }\r\n    return routeCallback(nextRoomName, fromRoomName);\r\n}\r\n/**\r\n *  遇到跨房寻路，先以房间为单位寻route，再寻精细的path\r\n * @param {string} fromRoomName \r\n * @param {string} toRoomName \r\n * @param {boolean} bypass\r\n */\r\nfunction findRoute(fromRoomName, toRoomName, bypass) {  // TODO 以后跨shard寻路也放在这个函数里\r\n    //console.log('findRoute', fromRoomName, toRoomName, bypass);\r\n    return Game.map.findRoute(fromRoomName, toRoomName, { routeCallback: bypass ? bypassRouteCallback : routeCallback });\r\n}\r\n\r\n/**\r\n * @param {RoomPosition} pos\r\n * @param {Room} room \r\n * @param {CostMatrix} costMat \r\n */\r\nfunction checkTemporalAvoidExit(pos, room, costMat) {    // 用于记录因creep堵路导致的房间出口临时封闭\r\n    let neighbors = Game.map.describeExits(room.name);\r\n    temporalAvoidFrom = temporalAvoidTo = '';   // 清空旧数据\r\n    for (let direction in neighbors) {\r\n        if (!(neighbors[direction] in avoidRooms)) {\r\n            for (let direction in neighbors) {\r\n                let exits = room.find(+direction);\r\n                if (PathFinder.search(pos, exits, {\r\n                    maxRooms: 1,\r\n                    roomCallback: () => costMat\r\n                }).incomplete) {    // 此路不通\r\n                    temporalAvoidFrom = room.name;\r\n                    temporalAvoidTo = neighbors[direction];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction routeReduce(temp, item) {\r\n    temp[item.room] = 1;\r\n    return temp;\r\n}\r\nfunction bypassHostile(creep) {\r\n    return !creep.my || creep.memory.dontPullMe;\r\n}\r\nfunction bypassMy(creep) {\r\n    return creep.my && creep.memory.dontPullMe;\r\n}\r\nlet bypassRoomName, bypassCostMat, bypassIgnoreCondition, userCostCallback, costMat, route;\r\nfunction bypassRoomCallback(roomName) {\r\n    if (roomName in avoidRooms) {\r\n        return false;\r\n    }\r\n    if (roomName == bypassRoomName) {     // 在findTemporalRoute函数里刚刚建立了costMatrix\r\n        costMat = bypassCostMat;\r\n    } else {\r\n        costMat = roomName in costMatrixCache ? costMatrixCache[roomName][findPathIgnoreCondition] : emptyCostMatrix;\r\n    }\r\n\r\n    if (userCostCallback) {\r\n        let resultCostMat = userCostCallback(roomName, roomName in costMatrixCache ? costMat.clone() : new PathFinder.CostMatrix);\r\n        if (resultCostMat instanceof PathFinder.CostMatrix) {\r\n            costMat = resultCostMat;\r\n        }\r\n    }\r\n    return costMat;\r\n}\r\nfunction bypassRoomCallbackWithRoute(roomName) {\r\n    if (roomName in route) {\r\n        if (roomName == bypassRoomName) {     // 在findTemporalRoute函数里刚刚建立了costMatrix\r\n            costMat = bypassCostMat;\r\n        } else {\r\n            costMat = roomName in costMatrixCache ? costMatrixCache[roomName][findPathIgnoreCondition] : emptyCostMatrix;\r\n        }\r\n\r\n        if (userCostCallback) {\r\n            let resultCostMat = userCostCallback(roomName, roomName in costMatrixCache ? costMat.clone() : new PathFinder.CostMatrix);\r\n            if (resultCostMat instanceof PathFinder.CostMatrix) {\r\n                costMat = resultCostMat;\r\n            }\r\n        }\r\n        return costMat;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n *  影响参数：bypassHostileCreeps, ignoreRoads, ignoreDestructibleStructures, ignoreSwamps, costCallback, range, bypassRange\r\n *  及所有PathFinder参数：plainCost, SwampCost, masOps, maxRooms, maxCost, heuristicWeight\r\n * @param {Creep} creep \r\n * @param {RoomPosition} toPos \r\n * @param {MoveToOpts} ops \r\n */\r\nfunction findTemporalPath(creep, toPos, ops) {\r\n    let nearbyCreeps;\r\n    if (ops.ignoreCreeps) { // 有ignoreCreep，只绕过无法对穿的creep\r\n        nearbyCreeps = creep.pos.findInRange(FIND_CREEPS, ops.bypassRange, {\r\n            filter: ops.bypassHostileCreeps ? bypassHostile : bypassMy\r\n        }).concat(creep.pos.findInRange(FIND_POWER_CREEPS, ops.bypassRange, {\r\n            filter: ops.bypassHostileCreeps ? bypassHostile : bypassMy\r\n        }));\r\n    } else {    // 绕过所有creep\r\n        nearbyCreeps = creep.pos.findInRange(FIND_CREEPS, ops.bypassRange).concat(\r\n            creep.pos.findInRange(FIND_POWER_CREEPS, ops.bypassRange)\r\n        )\r\n    }\r\n    if (!(creep.room.name in costMatrixCache)) { // 这个房间的costMatrix已经被删了\r\n        generateCostMatrix(creep.room, creep.pos);\r\n    }\r\n    bypassIgnoreCondition = !!ops.ignoreDestructibleStructures;\r\n    /** @type {CostMatrix} */\r\n    bypassCostMat = costMatrixCache[creep.room.name][bypassIgnoreCondition].clone();\r\n    for (let c of nearbyCreeps) {\r\n        bypassCostMat.set(c.pos.x, c.pos.y, 255);\r\n    }\r\n    bypassRoomName = creep.room.name;\r\n    userCostCallback = typeof ops.costCallback == 'function' ? ops.costCallback : undefined;\r\n\r\n    /**@type {PathFinderOpts} */\r\n    let PathFinderOpts = {\r\n        maxRooms: ops.maxRooms,\r\n        maxCost: ops.maxCost,\r\n        heuristicWeight: ops.heuristicWeight || 1.2\r\n    }\r\n    if (ops.ignoreSwamps) {   // HELP 这里有没有什么不增加计算量的简短写法\r\n        PathFinderOpts.plainCost = ops.plainCost;\r\n        PathFinderOpts.swampCost = ops.swampCost || 1;\r\n    } else if (ops.ignoreRoads) {\r\n        PathFinderOpts.plainCost = ops.plainCost;\r\n        PathFinderOpts.swampCost = ops.swampCost || 5;\r\n    } else {\r\n        PathFinderOpts.plainCost = ops.plainCost || 2;\r\n        PathFinderOpts.swampCost = ops.swampCost || 10;\r\n    }\r\n\r\n    if (creep.pos.roomName != toPos.roomName) { // findRoute会导致非最优path的问题\r\n        checkTemporalAvoidExit(creep.pos, creep.room, bypassCostMat);   // 因为creep挡路导致的无法通行的出口\r\n        route = findRoute(creep.pos.roomName, toPos.roomName, true);\r\n        if (route == ERR_NO_PATH) {\r\n            return false;\r\n        }\r\n        PathFinderOpts.maxRooms = PathFinderOpts.maxRooms || route.length + 1;\r\n        PathFinderOpts.maxOps = ops.maxOps || 2000 + route.length ** 2 * 100;  // 跨10room则有2000+10*10*100=12000\r\n        route = route.reduce(routeReduce, { [creep.pos.roomName]: 1 });     // 因为 key in Object 比 Array.includes(value) 快，但不知道值不值得reduce\r\n        PathFinderOpts.roomCallback = bypassRoomCallbackWithRoute;\r\n    } else {\r\n        PathFinderOpts.maxOps = ops.maxOps;\r\n        PathFinderOpts.roomCallback = bypassRoomCallback;\r\n    }\r\n\r\n    let result = PathFinder.search(creep.pos, { pos: toPos, range: ops.range }, PathFinderOpts).path;\r\n    if (result.length) {\r\n        let creepCache = creepPathCache[creep.name];\r\n        creepCache.path = {     // 弄个新的自己走，不修改公用的缓存路，只会用于正向走所以也不需要start属性，idx属性会在startRoute中设置\r\n            end: formalize(result[result.length - 1]),\r\n            posArray: result,\r\n            ignoreStructures: !!ops.ignoreDestructibleStructures\r\n        }\r\n        generateDirectionArray(creepCache.path);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nlet findPathIgnoreCondition;\r\n/**\r\n * @param {{[roomName:string]:1}} temp \r\n * @param {{room:string}} item \r\n * @returns {{[roomName:string]:1}}\r\n */\r\nfunction roomCallback(roomName) {\r\n    if (roomName in avoidRooms) {\r\n        return false;\r\n    }\r\n\r\n    costMat = roomName in costMatrixCache ? costMatrixCache[roomName][findPathIgnoreCondition] : emptyCostMatrix;\r\n    if (userCostCallback) {\r\n        let resultCostMat = userCostCallback(roomName, roomName in costMatrixCache ? costMat.clone() : new PathFinder.CostMatrix);\r\n        if (resultCostMat instanceof PathFinder.CostMatrix) {\r\n            costMat = resultCostMat;\r\n        }\r\n    }\r\n    return costMat;\r\n}\r\nfunction roomCallbackWithRoute(roomName) {\r\n    if (roomName in route) {\r\n        costMat = roomName in costMatrixCache ? costMatrixCache[roomName][findPathIgnoreCondition] : emptyCostMatrix;\r\n        //console.log('in route ' + roomName);\r\n        if (userCostCallback) {\r\n            let resultCostMat = userCostCallback(roomName, roomName in costMatrixCache ? costMat.clone() : new PathFinder.CostMatrix);\r\n            if (resultCostMat instanceof PathFinder.CostMatrix) {\r\n                costMat = resultCostMat;\r\n            }\r\n        }\r\n        return costMat;\r\n    }\r\n    //console.log('out route ' + roomName);\r\n    return false;   // 不在route上的不搜索\r\n}\r\n/**\r\n *  影响参数：ignoreRoads, ignoreDestructibleStructures, ignoreSwamps, costCallback, range\r\n *  及所有PathFinder参数：plainCost, SwampCost, masOps, maxRooms, maxCost, heuristicWeight\r\n * @param {RoomPosition} fromPos \r\n * @param {RoomPosition} toPos \r\n * @param {MoveToOpts} ops \r\n */\r\nfunction findPath(fromPos, toPos, ops) {\r\n\r\n    if (!(fromPos.roomName in costMatrixCache) && fromPos.roomName in Game.rooms) {   // 有视野没costMatrix\r\n        generateCostMatrix(Game.rooms[fromPos.roomName], fromPos);\r\n    }\r\n\r\n    findPathIgnoreCondition = !!ops.ignoreDestructibleStructures;\r\n    userCostCallback = typeof ops.costCallback == 'function' ? ops.costCallback : undefined;\r\n\r\n    /**@type {PathFinderOpts} */\r\n    let PathFinderOpts = {\r\n        maxRooms: ops.maxRooms,\r\n        maxCost: ops.maxCost,\r\n        heuristicWeight: ops.heuristicWeight || 1.2\r\n    }\r\n    if (ops.ignoreSwamps) {   // HELP 这里有没有什么不增加计算量的简短写法\r\n        PathFinderOpts.plainCost = ops.plainCost;\r\n        PathFinderOpts.swampCost = ops.swampCost || 1;\r\n    } else if (ops.ignoreRoads) {\r\n        PathFinderOpts.plainCost = ops.plainCost;\r\n        PathFinderOpts.swampCost = ops.swampCost || 5;\r\n    } else {\r\n        PathFinderOpts.plainCost = ops.plainCost || 2;\r\n        PathFinderOpts.swampCost = ops.swampCost || 10;\r\n    }\r\n\r\n    if (fromPos.roomName != toPos.roomName) {   // findRoute会导致非最优path的问题\r\n        route = findRoute(fromPos.roomName, toPos.roomName);\r\n        if (route == ERR_NO_PATH) {\r\n            return { path: [] };\r\n        }\r\n        PathFinderOpts.maxOps = ops.maxOps || 2000 + route.length ** 2 * 100;  // 跨10room则有2000+10*10*50=7000\r\n        PathFinderOpts.maxRooms = PathFinderOpts.maxRooms || route.length + 1;\r\n        route = route.reduce(routeReduce, { [fromPos.roomName]: 1 });   // 因为 key in Object 比 Array.includes(value) 快，但不知道值不值得reduce\r\n        //console.log(fromPos + ' using route ' + JSON.stringify(route));\r\n        PathFinderOpts.roomCallback = roomCallbackWithRoute;\r\n    } else {\r\n        PathFinderOpts.maxOps = ops.maxOps;\r\n        PathFinderOpts.roomCallback = roomCallback;\r\n    }\r\n\r\n    return PathFinder.search(fromPos, { pos: toPos, range: ops.range }, PathFinderOpts);\r\n}\r\n\r\nlet combinedX, combinedY;\r\n/**\r\n * @param {MyPath} newPath \r\n */\r\nfunction addPathIntoCache(newPath) {\r\n    combinedX = newPath.start.x + newPath.start.y;\r\n    combinedY = newPath.end.x + newPath.end.y;\r\n    if (!(combinedX in globalPathCache)) {\r\n        globalPathCache[combinedX] = {\r\n            [combinedY]: []  // 数组里放不同ops的及其他start、end与此对称的\r\n        };\r\n    } else if (!(combinedY in globalPathCache[combinedX])) {\r\n        globalPathCache[combinedX][combinedY] = []      // 数组里放不同ops的及其他start、end与此对称的\r\n    }\r\n    globalPathCache[combinedX][combinedY].push(newPath);\r\n}\r\n\r\nfunction invalidate() {\r\n    return 0;\r\n}\r\n/**\r\n * @param {MyPath} path \r\n */\r\nfunction deletePath(path) {\r\n    if (path.start) {     // 有start属性的不是临时路\r\n        let pathArray = globalPathCache[path.start.x + path.start.y][path.end.x + path.end.y];\r\n        pathArray.splice(pathArray.indexOf(path), 1);\r\n        path.posArray = path.posArray.map(invalidate);\r\n    }\r\n}\r\n\r\nlet minX, maxX, minY, maxY;\r\n/**\r\n *  寻找房内缓存路径，起始位置两步限制避免复用非最优路径\r\n * @param {RoomPosition} formalFromPos \r\n * @param {RoomPosition} formalToPos\r\n * @param {RoomPosition} fromPos\r\n * @param {CreepPaths} creepCache \r\n * @param {MoveToOpts} ops \r\n */\r\nfunction findShortPathInCache(formalFromPos, formalToPos, fromPos, creepCache, ops) {     // ops.range设置越大找的越慢\r\n    startCacheSearch = Game.cpu.getUsed();\r\n    minX = formalFromPos.x + formalFromPos.y - 2;\r\n    maxX = formalFromPos.x + formalFromPos.y + 2;\r\n    minY = formalToPos.x + formalToPos.y - 1 - ops.range;\r\n    maxY = formalToPos.x + formalToPos.y + 1 + ops.range;\r\n    for (combinedX = minX; combinedX <= maxX; combinedX++) {\r\n        if (combinedX in globalPathCache) {\r\n            for (combinedY = minY; combinedY <= maxY; combinedY++) {\r\n                if (combinedY in globalPathCache[combinedX]) {\r\n                    for (let path of globalPathCache[combinedX][combinedY]) {     // 这个数组应该会很短\r\n                        pathCounter++;\r\n                        if (isNear(path.start, formalFromPos) && isNear(fromPos, path.posArray[1]) && inRange(path.end, formalToPos, ops.range) && isSameOps(path, ops)) {     // 找到路了\r\n                            creepCache.path = path;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n *  寻找跨房缓存路径，允许起始位置少量的误差\r\n * @param {RoomPosition} formalFromPos\r\n * @param {RoomPosition} formalToPos\r\n * @param {CreepPaths} creepCache\r\n * @param {MoveToOpts} ops\r\n */\r\nfunction findLongPathInCache(formalFromPos, formalToPos, creepCache, ops) {     // ops.range设置越大找的越慢\r\n    startCacheSearch = Game.cpu.getUsed();\r\n    minX = formalFromPos.x + formalFromPos.y - 2;\r\n    maxX = formalFromPos.x + formalFromPos.y + 2;\r\n    minY = formalToPos.x + formalToPos.y - 1 - ops.range;\r\n    maxY = formalToPos.x + formalToPos.y + 1 + ops.range;\r\n    for (combinedX = minX; combinedX <= maxX; combinedX++) {\r\n        if (combinedX in globalPathCache) {\r\n            for (combinedY = minY; combinedY <= maxY; combinedY++) {\r\n                if (combinedY in globalPathCache[combinedX]) {\r\n                    for (let path of globalPathCache[combinedX][combinedY]) {     // 这个数组应该会很短\r\n                        pathCounter++;\r\n                        if (isNear(path.start, formalFromPos) && inRange(path.end, formalToPos, ops.range) && isSameOps(path, ops)) {     // 找到路了\r\n                            creepCache.path = path;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nlet startRoomName, endRoomName;\r\n/**\r\n *  起止点都在自己房间的路不清理\r\n * @param {CreepPaths['name']} creepCache \r\n */\r\nfunction setPathTimer(creepCache) {\r\n    if (pathClearDelay) {\r\n        let posArray = creepCache.path.posArray;\r\n        startRoomName = posArray[0].roomName;\r\n        endRoomName = posArray[posArray.length - 1].roomName;\r\n        if (startRoomName != endRoomName || (startRoomName in Game.rooms && Game.rooms[startRoomName].controller && !Game.rooms[startRoomName].controller.my)) {    // 跨房路或者敌方房间路\r\n            if (!(Game.time + pathClearDelay in pathCacheTimer)) {\r\n                pathCacheTimer[Game.time + pathClearDelay] = [];\r\n            }\r\n            pathCacheTimer[Game.time + pathClearDelay].push(creepCache.path);\r\n            creepCache.path.lastTime = Game.time;\r\n        }\r\n    }\r\n}\r\n\r\n/**@type {RoomPosition[]} */\r\nlet tempArray = [];\r\n/**\r\n *  \r\n * @param {Creep} creep \r\n * @param {RoomPosition} toPos \r\n * @param {RoomPosition[]} posArray \r\n * @param {number} startIdx \r\n * @param {number} idxStep \r\n * @param {PolyStyle} visualStyle \r\n */\r\nfunction showVisual(creep, toPos, posArray, startIdx, idxStep, visualStyle) {\r\n    tempArray.length = 0;\r\n    tempArray.push(creep.pos);\r\n    let thisRoomName = creep.room.name;\r\n    _.defaults(visualStyle, defaultVisualizePathStyle);\r\n    for (let i = startIdx; i in posArray && posArray[i].roomName == thisRoomName; i += idxStep) {\r\n        tempArray.push(posArray[i]);\r\n    }\r\n    if (toPos.roomName == thisRoomName) {\r\n        tempArray.push(toPos);\r\n    }\r\n    creep.room.visual.poly(tempArray, visualStyle);\r\n}\r\n\r\n/**\r\n *  按缓存路径移动\r\n * @param {Creep} creep \r\n * @param {PolyStyle} visualStyle \r\n * @param {RoomPosition} toPos \r\n */\r\nfunction moveOneStep(creep, visualStyle, toPos) {\r\n    let creepCache = creepPathCache[creep.name];\r\n    if (visualStyle) {\r\n        showVisual(creep, toPos, creepCache.path.posArray, creepCache.idx, 1, visualStyle);\r\n    }\r\n    if (creep.fatigue) {\r\n        return ERR_TIRED;\r\n    }\r\n    creepCache.idx++;\r\n    creepMoveCache[creep.name] = Game.time;\r\n    testNormal++;\r\n    let t = Game.cpu.getUsed() - startTime;\r\n    if (t > 0.2) {  // 对穿导致的另一个creep的0.2不计在内\r\n        normalLogicalCost += t - 0.2;\r\n    } else {\r\n        normalLogicalCost += t;\r\n    }\r\n    //creep.room.visual.circle(creepCache.path.posArray[creepCache.idx]);\r\n    return originMove.call(creep, creepCache.path.directionArray[creepCache.idx]);\r\n}\r\n\r\n/**\r\n *  按缓存路径移动\r\n * @param {Creep} creep \r\n * @param {PolyStyle} visualStyle \r\n * @param {RoomPosition} toPos \r\n */\r\nfunction moveOneStepReverse(creep, visualStyle, toPos) {    // deprecated\r\n    let creepCache = creepPathCache[creep.name];\r\n    if (visualStyle) {\r\n        showVisual(creep, toPos, creepCache.path.posArray, creepCache.idx, -1, visualStyle);\r\n    }\r\n    if (creep.fatigue) {\r\n        return ERR_TIRED;\r\n    }\r\n    creepMoveCache[creep.name] = Game.time;\r\n    //creep.room.visual.circle(creepCache.path.posArray[creepCache.idx]);\r\n    return originMove.call(creep, (creepCache.path.directionArray[creepCache.idx--] + 3) % 8 + 1);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Creep} creep \r\n * @param {{\r\n        path: MyPath,\r\n        dst: RoomPosition,\r\n        idx: number\r\n    }} pathCache \r\n * @param {PolyStyle} visualStyle \r\n * @param {RoomPosition} toPos \r\n * @param {boolean} ignoreCreeps\r\n */\r\nfunction startRoute(creep, pathCache, visualStyle, toPos, ignoreCreeps) {\r\n    let posArray = pathCache.path.posArray;\r\n\r\n    let idx = 0;\r\n    while (idx in posArray && isNear(creep.pos, posArray[idx])) {\r\n        idx += 1;\r\n    }\r\n    idx -= 1;\r\n    pathCache.idx = idx;\r\n\r\n    if (visualStyle) {\r\n        showVisual(creep, toPos, posArray, idx, 1, visualStyle);\r\n    }\r\n    creepMoveCache[creep.name] = Game.time;\r\n\r\n    let nextStep = posArray[idx];\r\n    if (ignoreCreeps) {\r\n        trySwap(creep, nextStep, false, true);\r\n    }\r\n    return originMove.call(creep, getDirection(creep.pos, posArray[idx]));\r\n}\r\n\r\n/**\r\n *  将用在Creep.prototype.move中\r\n * @param {RoomPosition} pos \r\n * @param {DirectionConstant} target \r\n */\r\nfunction direction2Pos(pos, target) {\r\n    if (typeof target != \"number\") {\r\n        // target 不是方向常数\r\n        return undefined;\r\n    }\r\n\r\n    const direction = +target;  // 如果是string则由此运算转换成number\r\n    let tarpos = {\r\n        x: pos.x,\r\n        y: pos.y,\r\n    }\r\n    if (direction !== 7 && direction !== 3) {\r\n        if (direction > 7 || direction < 3) {\r\n            --tarpos.y\r\n        } else {\r\n            ++tarpos.y\r\n        }\r\n    }\r\n    if (direction !== 1 && direction !== 5) {\r\n        if (direction < 5) {\r\n            ++tarpos.x\r\n        } else {\r\n            --tarpos.x\r\n        }\r\n    }\r\n    if (tarpos.x < 0 || tarpos.y > 49 || tarpos.x > 49 || tarpos.y < 0) {\r\n        return undefined;\r\n    } else {\r\n        return new RoomPosition(tarpos.x, tarpos.y, pos.roomName);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Function} fn \r\n */\r\nfunction wrapFn(fn, name) {\r\n    return function () {\r\n        startTime = Game.cpu.getUsed();     // 0.0015cpu\r\n        if (obTick < Game.time) {\r\n            obTick = Game.time;\r\n            checkObResult();\r\n            doObTask();\r\n        }\r\n        let code = fn.apply(this, arguments);\r\n        endTime = Game.cpu.getUsed();\r\n        if (endTime - startTime >= 0.2) {\r\n            analyzeCPU[name].sum += endTime - startTime;\r\n            analyzeCPU[name].calls++;\r\n        }\r\n        return code;\r\n    }\r\n}\r\n\r\nfunction clearUnused() {\r\n    if (Game.time % pathClearDelay == 0) { // 随机清一次已死亡creep\r\n        for (let name in creepPathCache) {\r\n            if (!(name in Game.creeps)) {\r\n                delete creepPathCache[name];\r\n            }\r\n        }\r\n    }\r\n    for (let time in pathCacheTimer) {\r\n        if (time > Game.time) {\r\n            break;\r\n        }\r\n        //console.log('clear path');\r\n        for (let path of pathCacheTimer[time]) {\r\n            if (path.lastTime == time - pathClearDelay) {\r\n                deletePath(path);\r\n            }\r\n        }\r\n        delete pathCacheTimer[time];\r\n    }\r\n    for (let time in costMatrixCacheTimer) {\r\n        if (time > Game.time) {\r\n            break;\r\n        }\r\n        //console.log('clear costMat');\r\n        for (let data of costMatrixCacheTimer[time]) {\r\n            delete costMatrixCache[data.roomName];\r\n            for (let avoidRoomName of data.avoids) {\r\n                delete avoidRooms[avoidRoomName];\r\n            }\r\n        }\r\n        delete costMatrixCacheTimer[time];\r\n    }\r\n}\r\n\r\n/***************************************\r\n *  功能实现\r\n */\r\n\r\nconst defaultVisualizePathStyle = { fill: 'transparent', stroke: '#fff', lineStyle: 'dashed', strokeWidth: .15, opacity: .1 };\r\n/**@type {[MoveToOpts, RoomPosition, CreepPaths['1'], MyPath, number, RoomPosition[], boolean]}\r\n*/\r\nlet [ops, toPos, creepCache, path, idx, posArray, found] = [];\r\n/**\r\n *  把moveTo重写一遍\r\n * @param {Creep} this\r\n * @param {number | RoomObject} firstArg \r\n * @param {number | MoveToOpts} secondArg \r\n * @param {MoveToOpts} opts \r\n */\r\nfunction betterMoveTo(firstArg, secondArg, opts) {\r\n    if (!this.my) {\r\n        return ERR_NOT_OWNER;\r\n    }\r\n\r\n    if (this.spawning) {\r\n        return ERR_BUSY;\r\n    }\r\n\r\n    if (typeof firstArg == 'object') {\r\n        toPos = firstArg.pos || firstArg;\r\n        ops = secondArg || {};\r\n    } else {\r\n        toPos = { x: firstArg, y: secondArg, roomName: this.room.name };\r\n        ops = opts || {};\r\n    }\r\n    ops.bypassHostileCreeps = ops.bypassHostileCreeps === undefined || ops.bypassHostileCreeps;    // 设置默认值为true\r\n    ops.ignoreCreeps = ops.ignoreCreeps === undefined || ops.ignoreCreeps;\r\n\r\n    if (typeof toPos.x != \"number\" || typeof toPos.y != \"number\") {   // 房名无效或目的坐标不是数字，不合法\r\n        //this.say('no tar');\r\n        return ERR_INVALID_TARGET;\r\n    } else if (inRange(this.pos, toPos, ops.range || 1)) {   // 已到达\r\n        if (isEqual(toPos, this.pos) || ops.range) {  // 已到达\r\n            return OK;\r\n        } // else 走一步\r\n        if (this.pos.roomName == toPos.roomName && ops.ignoreCreeps) {    // 同房间考虑一下对穿\r\n            trySwap(this, toPos, false, true);\r\n        }\r\n        creepMoveCache[this.name] = Game.time;      // 用于防止自己移动后被误对穿\r\n        testNormal++;\r\n        let t = Game.cpu.getUsed() - startTime;\r\n        normalLogicalCost += t > 0.2 ? t - 0.2 : t;\r\n        return originMove.call(this, getDirection(this.pos, toPos));\r\n    }\r\n    ops.range = ops.range || 1;\r\n\r\n    if (!hasActiveBodypart(this.body, MOVE)) {\r\n        return ERR_NO_BODYPART;\r\n    }\r\n\r\n    if (this.fatigue) {\r\n        if (!ops.visualizePathStyle) {    // 不用画路又走不动，直接return\r\n            return ERR_TIRED;\r\n        } // else 要画路，画完再return\r\n    }\r\n\r\n    // HELP：感兴趣的帮我检查这里的核心逻辑orz\r\n    creepCache = creepPathCache[this.name];\r\n    if (creepCache) {  // 有缓存\r\n        path = creepCache.path;\r\n        idx = creepCache.idx;\r\n        if (path && idx in path.posArray && path.ignoreStructures == !!ops.ignoreDestructibleStructures) {  // 缓存路条件相同\r\n            posArray = path.posArray;\r\n            if (isEqual(toPos, creepCache.dst) || inRange(posArray[posArray.length - 1], toPos, ops.range)) {   // 正向走，目的地没变\r\n                if (isEqual(this.pos, posArray[idx])) {    // 正常\r\n                    if ('storage' in this.room && inRange(this.room.storage.pos, this.pos, coreLayoutRange) && ops.ignoreCreeps) {\r\n                        testNearStorageCheck++;\r\n                        if (trySwap(this, posArray[idx + 1], false, true) == OK) {\r\n                            testNearStorageSwap++;\r\n                        }\r\n                    }\r\n                    //this.say('正常');\r\n                    return moveOneStep(this, ops.visualizePathStyle, toPos);\r\n                } else if (idx + 1 in posArray && idx + 2 in posArray && isEqual(this.pos, posArray[idx + 1])) {  // 跨房了\r\n                    creepCache.idx++;\r\n                    if (!path.directionArray[idx + 2]) {  // 第一次见到该房则检查房间\r\n                        if (checkRoom(this.room, path, creepCache.idx)) {   // 传creep所在位置的idx\r\n                            //this.say('新房 可走');\r\n                            //console.log(`${Game.time}: ${this.name} check room ${this.pos.roomName} OK`);\r\n                            return moveOneStep(this, ops.visualizePathStyle, toPos);  // 路径正确，继续走\r\n                        }   // else 检查中发现房间里有建筑挡路，重新寻路\r\n                        //console.log(`${Game.time}: ${this.name} check room ${this.pos.roomName} failed`);\r\n                        deletePath(path);\r\n                    } else {\r\n                        //this.say('这个房间见过了');\r\n                        return moveOneStep(this, ops.visualizePathStyle, toPos);  // 路径正确，继续走\r\n                    }\r\n                } else if (isNear(this.pos, posArray[idx])) {  // 堵路了\r\n                    let code = trySwap(this, posArray[idx], ops.bypassHostileCreeps, ops.ignoreCreeps);  // 检查挡路creep\r\n                    if (code == OK) {   // 让这个逻辑掉下去\r\n                    } else if (code == ERR_INVALID_TARGET) {   // 是被设置了不可对穿的creep或者敌对creep挡路，临时绕路\r\n                        testBypass++;\r\n                        ops.bypassRange = ops.bypassRange || 5; // 默认值\r\n                        if (typeof ops.bypassRange != \"number\" || typeof ops.range != 'number') {\r\n                            return ERR_INVALID_ARGS;\r\n                        }\r\n                        if (findTemporalPath(this, toPos, ops)) { // 有路，creepCache的内容会被这个函数更新\r\n                            //this.say('开始绕路');\r\n                            return startRoute(this, creepCache, ops.visualizePathStyle, toPos, ops.ignoreCreeps);\r\n                        } else {  // 没路\r\n                            //this.say('没路啦');\r\n                            return ERR_NO_PATH;\r\n                        }\r\n                    } else if (code == ERR_NOT_FOUND && isObstacleStructure(this.room, posArray[idx], ops.ignoreDestructibleStructures)) {   // 发现出现新建筑物挡路，删除costMatrix和path缓存，重新寻路\r\n                        //console.log(`${Game.time}: ${this.name} find obstacles at ${this.pos}`);\r\n                        delete costMatrixCache[this.pos.roomName];\r\n                        deletePath(path);\r\n                    } // else 上tick移动失败但也不是建筑物和creep/pc挡路。有2个情况：1.下一格路本来是穿墙路并碰巧消失了；2.下一格是房间出口，有另一个creep抢路了然后它被传送到隔壁了。不处理第1个情况，按第2个情况对待。\r\n                    //this.say('对穿' + getDirection(this.pos, posArray[idx]) + '-' + originMove.call(this, getDirection(this.pos, posArray[idx])));\r\n                    if (ops.visualizePathStyle) {\r\n                        showVisual(this, toPos, posArray, idx, 1, ops.visualizePathStyle);\r\n                    }\r\n                    creepMoveCache[this.name] = Game.time;\r\n                    return originMove.call(this, getDirection(this.pos, posArray[idx]));  // 有可能是第一步就没走上路or通过略过moveTo的move操作偏离路线，直接call可兼容\r\n                } else if (idx - 1 >= 0 && isNear(this.pos, posArray[idx - 1])) {  // 因为堵路而被自动传送反向跨房了\r\n                    //this.say('偏离一格');\r\n                    if (this.pos.roomName == posArray[idx - 1].roomName && ops.ignoreCreeps) {    // 不是跨房而是偏离，检查对穿\r\n                        trySwap(this, posArray[idx - 1], false, true);\r\n                    }\r\n                    if (ops.visualizePathStyle) {\r\n                        showVisual(this, toPos, posArray, idx, 1, ops.visualizePathStyle);\r\n                    }\r\n                    creepMoveCache[this.name] = Game.time;\r\n                    return originMove.call(this, getDirection(this.pos, posArray[idx - 1]));    // 同理兼容略过moveTo的move\r\n                } // else 彻底偏离，重新寻路\r\n            } // else 目的地变了\r\n        } // else 缓存中没路或者条件变了\r\n    } // else 需要重新寻路，先找缓存路，找不到就寻路\r\n\r\n    if (!creepCache) {    // 初始化cache\r\n        creepCache = {\r\n            dst: { x: NaN, y: NaN },\r\n            path: undefined,\r\n            idx: 0\r\n        };\r\n        creepPathCache[this.name] = creepCache;\r\n    } else {\r\n        creepCache.path = undefined;\r\n    }\r\n\r\n    if (typeof ops.range != 'number') {\r\n        return ERR_INVALID_ARGS\r\n    }\r\n\r\n    found = this.pos.roomName == toPos.roomName ? findShortPathInCache(formalize(this.pos), formalize(toPos), this.pos, creepCache, ops) : findLongPathInCache(formalize(this.pos), formalize(toPos), creepCache, ops);\r\n    if (found) {\r\n        //this.say('cached');\r\n        //console.log(this, this.pos, 'hit');\r\n        testCacheHits++;\r\n    } else {  // 没找到缓存路\r\n        testCacheMiss++;\r\n\r\n        if (autoClearTick < Game.time) {  // 自动清理\r\n            autoClearTick = Game.time;\r\n            clearUnused();\r\n        }\r\n\r\n        let result = findPath(this.pos, toPos, ops);\r\n        if (!result.path.length || (result.incomplete && result.path.length == 1)) {     // 一步也动不了了\r\n            //this.say('no path')\r\n            return ERR_NO_PATH;\r\n        }\r\n        result = result.path;\r\n        result.unshift(this.pos);\r\n\r\n        //this.say('start new');\r\n        let newPath = {\r\n            start: formalize(result[0]),\r\n            end: formalize(result[result.length - 1]),\r\n            posArray: result,\r\n            ignoreRoads: !!ops.ignoreRoads,\r\n            ignoreStructures: !!ops.ignoreDestructibleStructures,\r\n            ignoreSwamps: !!ops.ignoreSwamps\r\n        }\r\n        generateDirectionArray(newPath);\r\n        addPathIntoCache(newPath);\r\n        //console.log(this, this.pos, 'miss');\r\n        creepCache.path = newPath;\r\n    }\r\n\r\n    creepCache.dst = toPos;\r\n    setPathTimer(creepCache);\r\n\r\n    found ? cacheHitCost += Game.cpu.getUsed() - startCacheSearch : cacheMissCost += Game.cpu.getUsed() - startCacheSearch;\r\n\r\n    return startRoute(this, creepCache, ops.visualizePathStyle, toPos, ops.ignoreCreeps);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Creep} this 写好后删这个参数\r\n * @param {DirectionConstant | Creep} target \r\n */\r\nfunction betterMove(target) {\r\n\r\n}\r\n\r\n/**\r\n * @param {RoomPosition} this 写好后删这个参数\r\n * @param {FindConstant} type \r\n * @param {FindPathOpts & FilterOptions<FIND_STRUCTURES> & { algorithm?: string }} opts \r\n */\r\nfunction betterFindClosestByPath(type, opts) {\r\n\r\n}\r\n\r\n/**\r\n *  opts: memberPos:relativePos[], avoidTowersHigherThan:number, avoidObstaclesHigherThan:number\r\n * @param {RoomPosition} this 写好后删这个参数\r\n * @param {RoomPosition} toPos \r\n * @param {*} opts \r\n */\r\nfunction findSquadPathTo(toPos, opts) {\r\n\r\n}\r\n\r\n/***************************************\r\n *  初始化\r\n *  Creep.prototype.move()将在v0.9.x版本加入\r\n *  ob寻路、自动visual将在v0.9.x或v1.0.x版本加入\r\n *  RoomPosition.prototype.findClosestByPath()将在v1.1加入\r\n *  Creep.prototype.flee()、RoomPosition.prototype.findSquadPathTo()函数将在v1.1或v1.2加入\r\n *  checkSquadPath()有小概率会写\r\n */\r\navoidRooms = avoidRooms.reduce((temp, roomName) => {\r\n    temp[roomName] = 1;\r\n    return temp;\r\n}, {});\r\n\r\nobservers = observers.reduce((temp, id) => {\r\n    let ob = Game.getObjectById(id);\r\n    if (ob && ob.observeRoom && ob.my) {\r\n        temp.push({ id, roomName: ob.room.name, taskQueue: [] });\r\n    }\r\n    return temp;\r\n}, []);\r\n\r\n// Creep.prototype.move = wrapFn(config.changeMove? betterMove : originMove, 'move');\r\nCreep.prototype.moveTo = wrapFn(config.changeMoveTo ? betterMoveTo : originMoveTo, 'moveTo');\r\n// RoomPosition.prototype.findClosestByPath = wrapFn(config.changeFindClostestByPath? betterFindClosestByPath : originFindClosestByPath, 'findClosestByPath');\r\n// Creep.prototype.flee()和RoomPosition.prototype.findClosestByPath()将在v0.9或v1.0版本加入\r\nmodule.exports = {\r\n    setChangeMove: function (bool) {\r\n        //Creep.prototype.move = wrapFn(bool? betterMove : originMove, 'move');\r\n        analyzeCPU.move = { sum: 0, calls: 0 };\r\n        return OK;\r\n    },\r\n    setChangeMoveTo: function (bool) {\r\n        Creep.prototype.moveTo = wrapFn(bool ? betterMoveTo : originMoveTo, 'moveTo');\r\n        analyzeCPU.moveTo = { sum: 0, calls: 0 };\r\n        testCacheHits = 0;\r\n        testCacheMiss = 0;\r\n        testNormal = 0;\r\n        testNearStorageCheck = 0;\r\n        testNearStorageSwap = 0;\r\n        testTrySwap = 0;\r\n        testBypass = 0;\r\n        normalLogicalCost = 0;\r\n        cacheHitCost = 0;\r\n        cacheMissCost = 0;\r\n        return OK;\r\n    },\r\n    setChangeFindClostestByPath: function (bool) {\r\n        // RoomPosition.prototype.findClosestByPath = wrapFn(bool? betterFindClosestByPath : originFindClosestByPath, 'findClosestByPath');\r\n        analyzeCPU.findClosestByPath = { sum: 0, calls: 0 };\r\n        return OK;\r\n    },\r\n    setPathClearDelay: function (number) {\r\n        if (typeof number == \"number\" && number > 0) {\r\n            pathClearDelay = Math.ceil(number);\r\n            return OK;\r\n        } else if (number === undefined) {\r\n            pathClearDelay = undefined;\r\n        }\r\n        return ERR_INVALID_ARGS;\r\n    },\r\n    setHostileCostMatrixClearDelay: function (number) {\r\n        if (typeof number == \"number\" && number > 0) {\r\n            hostileCostMatrixClearDelay = Math.ceil(number);\r\n            return OK;\r\n        } else if (number === undefined) {\r\n            hostileCostMatrixClearDelay = undefined;\r\n            return OK;\r\n        }\r\n        return ERR_INVALID_ARGS;\r\n    },\r\n    deleteCostMatrix: function (roomName) {\r\n        delete costMatrixCache[roomName];\r\n        return OK;\r\n    },\r\n    deltePath: function (fromPos, toPos, opts) {   // TODO\r\n        //if(!(fromPos instanceof RoomPosition))\r\n        return 'not implemented'\r\n    },\r\n    addAvoidRooms: function (roomName) {\r\n        let splited = reg1.exec(roomName);\r\n        if (splited && splited.length == 5) {\r\n            avoidRooms[roomName] = 1;\r\n            return OK;\r\n        } else {\r\n            return ERR_INVALID_ARGS;\r\n        }\r\n    },\r\n    deleteAvoidRooms: function (roomName) {\r\n        let splited = reg1.exec(roomName);\r\n        if (splited && splited.length == 5) {\r\n            delete avoidRooms[roomName];\r\n            return OK;\r\n        } else {\r\n            return ERR_INVALID_ARGS;\r\n        }\r\n    },\r\n    deletePathInRoom: function (roomName) {\r\n        let splited = reg1.exec(roomName);\r\n        if (splited && splited.length == 5) {\r\n            this.deleteCostMatrix(roomName);\r\n            let fromalCentralPos = formalize({ x: 25, y: 25, roomName: roomName });\r\n            minX = fromalCentralPos.x + fromalCentralPos.y - 48;\r\n            maxX = fromalCentralPos.x + fromalCentralPos.y + 48;\r\n            minY = minX;\r\n            maxY = maxX;\r\n            for (combinedX = minX; combinedX <= maxX; combinedX++) {\r\n                if (combinedX in globalPathCache) {\r\n                    for (combinedY = minY; combinedY <= maxY; combinedY++) {\r\n                        if (combinedY in globalPathCache[combinedX]) {\r\n                            for (let path of globalPathCache[combinedX][combinedY]) {     // 这个数组应该会很短\r\n                                let posArray = path.posArray;\r\n                                if (posArray[0].roomName == roomName && posArray[posArray.length - 1].roomName == roomName) {     // 是这个房间的路\r\n                                    deletePath(path);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return OK;\r\n        } else {\r\n            return ERR_INVALID_ARGS;\r\n        }\r\n    },\r\n    addAvoidExits: function (fromRoomName, toRoomName) {    // 【未启用】\r\n        let splited1 = reg1.exec(fromRoomName);\r\n        let splited2 = reg1.exec(toRoomName);\r\n        if (splited1 && splited1.length == 5 && splited2 && splited2.length == 5) {\r\n            avoidExits[fromRoomName] ? avoidExits[fromRoomName][toRoomName] = 1 : avoidExits[fromRoomName] = { [toRoomName]: 1 };\r\n            return OK;\r\n        } else {\r\n            return ERR_INVALID_ARGS;\r\n        }\r\n    },\r\n    deleteAvoidExits: function (fromRoomName, toRoomName) { // 【未启用】\r\n        let splited1 = reg1.exec(fromRoomName);\r\n        let splited2 = reg1.exec(toRoomName);\r\n        if (splited1 && splited1.length == 5 && splited2 && splited2.length == 5) {\r\n            if (fromRoomName in avoidExits && toRoomName in avoidExits[fromRoomName]) {\r\n                delete avoidExits[fromRoomName][toRoomName];\r\n            }\r\n            return OK;\r\n        } else {\r\n            return ERR_INVALID_ARGS;\r\n        }\r\n    },\r\n    print: function () {\r\n        let text = '\\navarageTime\\tcalls\\tFunctionName';\r\n        for (let fn in analyzeCPU) {\r\n            text += `\\n${(analyzeCPU[fn].sum / analyzeCPU[fn].calls).toFixed(5)}\\t\\t${analyzeCPU[fn].calls}\\t\\t${fn}`;\r\n        }\r\n        let hitCost = cacheHitCost / testCacheHits;\r\n        let missCost = cacheMissCost / testCacheMiss;\r\n        let missRate = testCacheMiss / (testCacheMiss + testCacheHits);\r\n        text += `\\nnormal logical cost: ${(normalLogicalCost / testNormal).toFixed(5)}, total cross rate: ${(testTrySwap / analyzeCPU.moveTo.calls).toFixed(4)}, total bypass rate:  ${(testBypass / analyzeCPU.moveTo.calls).toFixed(4)}`\r\n        text += `\\nnear storage check rate: ${(testNearStorageCheck / analyzeCPU.moveTo.calls).toFixed(4)}, near storage cross rate: ${(testNearStorageSwap / testNearStorageCheck).toFixed(4)}`\r\n        text += `\\ncache search rate: ${((testCacheMiss + testCacheHits) / analyzeCPU.moveTo.calls).toFixed(4)}, total hit rate: ${(1 - missRate).toFixed(4)}, avg check paths: ${(pathCounter / (testCacheMiss + testCacheHits)).toFixed(3)}`;\r\n        text += `\\ncache hit avg cost: ${(hitCost).toFixed(5)}, cache miss avg cost: ${(missCost).toFixed(5)}, total avg cost: ${(hitCost * (1 - missRate) + missCost * missRate).toFixed(5)}`;\r\n        return text;\r\n    },\r\n    clear: () => { }\r\n    // clear: clearUnused\r\n}","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/**\r\n * 校正异常的堆栈信息\r\n * \r\n * 由于 rollup 会打包所有代码到一个文件，所以异常的调用栈定位和源码的位置是不同的\r\n * 本模块就是用来将异常的调用栈映射至源代码位置\r\n * \r\n * @see https://github.com/screepers/screeps-typescript-starter/blob/master/src/utils/ErrorMapper.ts\r\n */\r\n\r\nimport { SourceMapConsumer } from 'source-map'\r\n\r\n// 缓存 SourceMap\r\nlet consumer = null\r\n\r\n// 第一次报错时创建 sourceMap\r\nconst getConsumer = function () {\r\n    if (consumer == null) consumer = new SourceMapConsumer(require(\"main.js.map\"))\r\n    return consumer\r\n}\r\n\r\n// 缓存映射关系以提高性能\r\nconst cache = {}\r\n\r\n/**\r\n * 使用源映射生成堆栈跟踪，并生成原始标志位\r\n * 警告 - global 重置之后的首次调用会产生很高的 cpu 消耗 (> 30 CPU)\r\n * 之后的每次调用会产生较低的 cpu 消耗 (~ 0.1 CPU / 次)\r\n *\r\n * @param {Error | string} error 错误或原始追踪栈\r\n * @returns {string} 映射之后的源代码追踪栈\r\n */\r\nconst sourceMappedStackTrace = function (error) {\r\n    const stack = error instanceof Error ? error.stack : error\r\n    // 有缓存直接用\r\n    if (cache.hasOwnProperty(stack)) return cache[stack]\r\n\r\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm\r\n    let match\r\n    let outStack = error.toString()\r\n    console.log(\"ErrorMapper -> sourceMappedStackTrace -> outStack\", outStack)\r\n\r\n    while ((match = re.exec(stack))) {\r\n        // 解析完成\r\n        if (match[2] !== \"main\") break\r\n        \r\n        // 获取追踪定位\r\n        const pos = getConsumer().originalPositionFor({\r\n            column: parseInt(match[4], 10),\r\n            line: parseInt(match[3], 10)\r\n        })\r\n\r\n        // 无法定位\r\n        if (!pos.line) break\r\n        \r\n        // 解析追踪栈\r\n        if (pos.name) outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`\r\n        else {\r\n            // 源文件没找到对应文件名，采用原始追踪名\r\n            if (match[1]) outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`\r\n            // 源文件没找到对应文件名并且原始追踪栈里也没有，直接省略\r\n            else outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`\r\n        }\r\n    }\r\n\r\n    cache[stack] = outStack\r\n    return outStack\r\n}\r\n\r\n/**\r\n * 错误追踪包装器\r\n * 用于把报错信息通过 source-map 解析成源代码的错误位置\r\n * 和原本 wrapLoop 的区别是，wrapLoop 会返回一个新函数，而这个会直接执行\r\n * \r\n * @param next 玩家代码\r\n */\r\nexport const errorMapper = function (next) {\r\n    return () => {\r\n        try {\r\n            // 执行玩家代码\r\n            next()\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                // 渲染报错调用栈，沙盒模式用不了这个\r\n                const errorMessage = Game.rooms.sim ?\r\n                    `沙盒模式无法使用 source-map - 显示原始追踪栈<br>${_.escape(e.stack)}` :\r\n                    `${_.escape(sourceMappedStackTrace(e))}`\r\n                \r\n                console.log(`<text style=\"color:#ef9a9a\">${errorMessage}</text>`)\r\n            }\r\n            // 处理不了，直接抛出\r\n            else throw e\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    nameGet: nameGet,\r\n    sequenceGet: sequenceGet,\r\n    nameGetSequence: nameGetSequence,\r\n    sequenceGetName: sequenceGetName\r\n}\r\n\r\nfunction nameGet(name) {\r\n    return Game.rooms[name];\r\n}\r\n\r\nfunction sequenceGet(sequence) {\r\n    return Game.rooms[sequenceGetName(sequence)];\r\n}\r\n\r\nfunction nameGetSequence(name) {\r\n    let sequence = _.findIndex(globalData.rooms, (room) => room.name == name)\r\n    if (sequence == -1) {\r\n        return 1;\r\n    }\r\n    return sequence + 1;\r\n}\r\n\r\nfunction sequenceGetName(sequence) {\r\n    if (sequence > globalData.rooms.length || sequence < 1) {\r\n        return globalData.rooms[0].name;\r\n    }\r\n    return globalData.rooms[sequence - 1].name;\r\n}\r\n","// 联盟 统一入口\r\nexport default function (DataArr, _this, objectFun) {\r\n    _.forEach(DataArr, i => {\r\n        if (i.name == globalData.username) {\r\n            i.run(_this, objectFun);\r\n        }\r\n    });\r\n}\r\n","// 联盟 初始化\r\nexport default [\r\n    {\r\n        name: globalData.Alliance[0].username,\r\n        run: function (_this, objectFun) {\r\n            let roomName = globalData.rooms[0].name;\r\n\r\n            objectFun.iniRoom(roomName);\r\n        }\r\n    }\r\n]","import {errorMapper} from './modules/errorMapper.js'\r\n\r\nimport factory_room from \"./factory/room.js\";\r\n\r\nimport Alliance_run from './Alliance/run.js'\r\nimport Alliance_initialization from './Alliance/initialization.js'\r\n\r\nexport {iniglobalData}\r\n\r\nexport default function () {\r\n    return errorMapper(() => {\r\n        clog('【挂载拓展】【完成】 Time ' + Game.time)\r\n        clog(\"【脚本加载】 Time \" + Game.time + \" , bucket \" + Game.cpu.bucket);\r\n\r\n        clog(\"【初始化】【开始】 Time \" + Game.time);\r\n\r\n        // 客户端汉化显示\r\n        // Utils.cn();\r\n        clog('【提示】: 手动汉化输入【Utils.cn();】');\r\n\r\n        if (!Memory.rooms) {\r\n            Memory.rooms = {\r\n                source: {},\r\n                controller: {}\r\n            }\r\n        }\r\n\r\n        for (let name in Game.creeps) {\r\n            if (!Game.creeps[name].memory.id) Game.creeps[name].memory.id = Game.creeps[name].id;\r\n        }\r\n\r\n        // 全局数据初始化\r\n        iniglobalData();\r\n\r\n        // 联盟 初始化 入口\r\n        Alliance_run(Alliance_initialization, this, {\r\n            iniRoom: iniRoom\r\n        });\r\n\r\n        clog(\"【初始化】【结束】 Time \" + Game.time);\r\n    })\r\n}\r\n\r\nfunction iniRoom(roomName) {\r\n    if (!Memory.rooms[roomName]) {\r\n        Memory.rooms[roomName] = {}\r\n    }\r\n\r\n    // 能量源区块初始化\r\n    iniSource(roomName);\r\n\r\n    // 控制器块初始化\r\n    iniController(roomName);\r\n}\r\n\r\n// 全局数据初始化\r\nfunction iniglobalData() {\r\n    let username = '';\r\n    if (Game.spawns.length > 0) username = Game.spawns[0].owner.username;\r\n    if (username) {\r\n        globalData.username = username;\r\n    }\r\n\r\n    let rooms = {};\r\n    _.forEach(Game.spawns, spawn => {\r\n        let roomName = spawn.room.name;\r\n        if (!rooms[roomName].spawns) rooms[roomName].spawns = [];\r\n        rooms[roomName].spawns.push({\r\n            name: spawn.name\r\n        });\r\n    });\r\n\r\n    _.forEach(Game.rooms, room => {\r\n        const globalDataRoomIndex = _.findIndex(globalData.rooms, (value) => value.name === room.name);\r\n        let globalDataRoom = {};\r\n        if (globalDataRoomIndex == -1) {\r\n            globalDataRoom = {\r\n                name: room.name,\r\n                spawns: rooms[roomName].spawns\r\n            };\r\n        } else {\r\n            globalDataRoom = globalData.rooms[globalDataRoomIndex];\r\n\r\n            // 基地配置\r\n            if (!globalDataRoom.spawns) globalDataRoom.spawns = [];\r\n            let spawns = globalDataRoom.spawns;\r\n            // 合并 过滤已存在\r\n            spawns = _.unionBy(spawns, rooms[roomName].spawns);\r\n            globalDataRoom.spawns = spawns;\r\n        }\r\n        // 房间配置\r\n        if (globalData.roomsAllAllocation.on) {\r\n            // 合并 覆盖\r\n            globalDataRoom = _.merge(globalDataRoom, globalData.roomsAllAllocation.content);\r\n        } else {\r\n            // 合并 过滤已存在\r\n            globalDataRoom = _.mergeWith(globalDataRoom, globalData.roomsAllAllocation.content, function (objValue, srcValue) {\r\n                // 如果目标对象中已经有这个键，则保留原值\r\n                if (!_.isUndefined(objValue)) {\r\n                    return objValue;\r\n                }\r\n            });\r\n        }\r\n        if (globalDataRoomIndex == -1) {\r\n            globalData.rooms.push(globalDataRoom);\r\n        } else {\r\n            globalData.globalData.rooms[globalDataRoomIndex] = globalDataRoom;\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\n// 能量源区块初始化\r\nfunction iniSource(roomName) {\r\n    if (!Memory.rooms[roomName].source) {\r\n        Memory.rooms[roomName].source = {}\r\n    }\r\n}\r\n\r\n// 控制器块初始化\r\nfunction iniController(roomName) {\r\n    if (!Memory.rooms[roomName].controller) {\r\n        Memory.rooms[roomName].controller = {}\r\n    }\r\n\r\n    let room = factory_room.nameGet(roomName);\r\n    let roomSequence = factory_room.nameGetSequence(roomName);\r\n\r\n    // 自动分配建设控制器区的CONTAINER\r\n    if (globalData.rooms[roomSequence - 1].AutomaticAssignControllerCONTAINER) {\r\n        // 9*9范围自动生成CONTAINER\r\n        let pos = room.controller.pos;\r\n        let found = room.lookAtArea(pos.y - 1, pos.x - 1, pos.y + 1,\r\n            pos.x + 1, true);\r\n        // 筛选出平原和沼泽非墙壁\r\n        let foundFilter = _.filter(found, (f) =>\r\n            (f.terrain == 'plain' || f.terrain == 'swamp') &&\r\n            (f.type == LOOK_STRUCTURES ? f.structure.structureType != STRUCTURE_WALL : true));\r\n        if (foundFilter.length > 0) {\r\n            // 是否已经存在CONTAINER或在建的CONTAINER\r\n            let found2 = _.filter(found, (f) => f.type == LOOK_CONSTRUCTION_SITES || (f.type == LOOK_STRUCTURES && f\r\n                .structure.structureType == STRUCTURE_CONTAINER));\r\n            if (found2.length < 1) {\r\n                let x = foundFilter[0].x;\r\n                let y = foundFilter[0].y;\r\n                // 指定位置创建一个新的 ConstructionSite\r\n                let returnData = room.createConstructionSite(x, y, STRUCTURE_CONTAINER);\r\n                if (returnData == OK) {\r\n                    clog('自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y, returnData);\r\n                } else {\r\n                    clog('自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y, returnData);\r\n                    Memory.rooms[roomName].controller = {\r\n                        container: {\r\n                            x: x,\r\n                            y: y,\r\n                            id: null,\r\n                            // 运输者的ID列表\r\n                            list: []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","// -------------------------------初始化\r\nglobal.factory = {};\r\nglobal.controller = {}\r\n// -------------------------------全局数据\r\nimport \"./globalData.js\"\r\n// -------------------------------构建接口\r\n// -------------------------------构建函数\r\n// -------------------------------封装\r\n// 报错\r\nimport \"./utils/Throw.js\"\r\n// 日志\r\nimport \"./utils/log.js\"\r\n// -------------------------------工具\r\n// 工具集\r\nimport \"./utils/utils.js\";\r\nimport \"./utils/超级移动优化hotfix 0.9.4.js\";\r\n// -------------------------------工厂模块\r\n// -------------------------------控制器\r\n// -------------------------------默认只执行一次的初始化程序\r\nimport initialization from \"./initialization.js\"\r\n\r\ninitialization();","export default {\r\n    getNameAllArray: getNameAllArray,\r\n    nameGet: nameGet,\r\n    sequenceGet: sequenceGet,\r\n    nameGetSequence: nameGetSequence,\r\n    sequenceGetName: sequenceGetName,\r\n    sequenceGetRoomSequence: sequenceGetRoomSequence,\r\n    nameGetRoomName: nameGetRoomName\r\n}\r\n\r\nfunction getNameAllArray() {\r\n    return _.chain(globalData.rooms)\r\n        .map('spawns') // 获取各房间的spawns数组\r\n        .flatten() // 将嵌套的spawns数组扁平化为一个单一数组\r\n        .map('name') // 映射每个spawn对象的name属性\r\n        .value(); // 获取最终处理的结果数组\r\n}\r\n\r\nfunction nameGet(name) {\r\n    return Game.spawns[name];\r\n}\r\n\r\nfunction sequenceGet(sequence) {\r\n    return Game.spawns[sequenceGetName(sequence)];\r\n}\r\n\r\nfunction nameGetSequence(name) {\r\n    let spawnNameAllArray = getNameAllArray();\r\n    let sequence = _.indexOf(spawnNameAllArray, name);\r\n    if (sequence == -1) {\r\n        return 1;\r\n    }\r\n    return sequence + 1;\r\n}\r\n\r\nfunction sequenceGetName(sequence) {\r\n    let spawnNameAllArray = getNameAllArray();\r\n    if (sequence > spawnNameAllArray.length || sequence < 1) {\r\n        return spawnNameAllArray[0];\r\n    }\r\n    return spawnNameAllArray[sequence - 1];\r\n}\r\n\r\n// 基地序号获取房间序号\r\nfunction sequenceGetRoomSequence(sequence) {\r\n    let roomName = sequenceGet(sequence).room.name;\r\n    return nameGetSequence(roomName);\r\n}\r\n\r\n// 基地名称获取房间名称\r\nfunction nameGetRoomName(name) {\r\n    return nameGet(name).room.name;\r\n}\r\n","export default {\r\n    GetContainerLength: (roomName) => {\r\n        // 获取能量源区ContainerLen数量\r\n        let memorySource = Memory.rooms[roomName].source.list;\r\n        let len = 0;\r\n        for (let val in memorySource) {\r\n            let spaceXYList = memorySource[val].spaceXYList;\r\n            for (let i = 0; i < spaceXYList.length; i++) {\r\n                let containerID = spaceXYList[i].containerID\r\n                if (containerID) len++;\r\n            }\r\n        }\r\n        return len;\r\n    }\r\n}","// ATTACK：最基础的攻击型身体部件，伤害和造价都很均衡，所以受到不少玩家的钟爱。它还有一个特性就是一旦被攻击就会自动反击。\r\n// RANGED_ATTACK：范围型攻击部件，有rangedAttack（攻击三格内任一单位）和rangedMassAttack（攻击三格内所有单位）两种攻击模式。但是这个 part 的伤害要低于 ATTACK 并且造价更高。\r\n// WORK：没错，WORK 部件也可以被用于进攻，主要的手段就是 dismantle 方法。它可以对建筑物造成大量伤害。但是 WORK 只能用于拆建筑物，对 creep 的攻击毫无还手之力。所以一般搭配其他种类的 creep 使用。\r\n// CLAIM：可以使用attackController方法攻击指定控制器，借此来阻止对方房间进入安全模式。但是由于造价高且 TTL 短，所以一般只用于需要速战速决的进攻中。\r\n// HEAL：治疗专用，可以使用 heal（近距离高效）和 rangedHeal（远距离低效）方法治疗指定 Creep。\r\n// TOUGH：造价极低（只要10点能量），主要用来承担伤害，除了拥有正常的 100 生命值外没有什么用处。但是在经过 Boost 后 TOUGH 会成为战斗中最重要的身体部件之一，下文中我们会进行介绍。\r\n\r\n// havester \t采矿者 \t开采能量 \tcarry 是否到达上限 \t存入指定的结构\r\n// upgrader \t升级者 \t取出能量 \tcarry 是否到达上限 \t升级房间控制器\r\n// builder \t建造者 \t取出能量 \tcarry 是否到达上限 \t建造结构\r\n// carrier \t运输者 \t取出能量 \tcarry 是否到达上限 \t存入指定的结构\r\n// repairer \t维修者 \t取出能量 \tcarry 是否到达上限 \t修复受损的结构\r\n// defender \t防御者 \t驻守指定区域 \t房间内是否有入侵者 \t攻击入侵者\r\n\r\n\r\n// creep 是你的单位, creep 可以移动、采集能量、建造建筑、攻击其他 creep 以及执行其他动作。\r\n// 每个 creep 都由最多 50 个身体部件构成，身体部件的类型如下：\r\n// 身体部件 \t孵化成本 \t每个部件效果\r\n// MOVE \t50 \t每 tick 减少 2 点疲惫值\r\n// WORK \t100\r\n// 每 tick 从能量源采集 2 单位能量。\r\n// 每 tick 从矿区采集 1 单位矿物。\r\n// 每 tick 增加工地建设进度 5 点，花费 5 单位能量。\r\n// 每 tick 增加建筑 100 耐久度，花费 1 单位能量。\r\n// 每 tick 拆减建筑 50 点耐久，并返还 0.25 单位能量。\r\n// 每 tick 提高控制器升级进度 1 点，花费 1 单位能量。\r\n// CARRY \t50 \t携带最多 50 单位资源。\r\n// ATTACK \t80 \t对相邻的 creep 或建筑造成 30 点伤害。\r\n// RANGED_ATTACK \t150\r\n// 单个目标时，每 tick 对 creep 或建筑造成 10 点伤害，范围为 3 格。\r\n// 多个目标时，每 tick 对范围内所有 creep 与建筑造成 1-4-10 点伤害，具体伤害取决于距离，范围为 3 格。\r\n// HEAL \t250 \t治疗对象可为自己或其它 creep。自愈或治疗相邻 creep 时每 tick 恢复 12 点耐久，一定距离内远程治疗每 tick 恢复 4 点耐久。\r\n// CLAIM \t600\r\n// 占领一个中立房间的控制器。\r\n// 每部件每 tick 使己方对中立房间控制器的预定时间增加 1 tick，或使其他玩家的预定时间减少 1 tick。\r\n// 每部件每 tick 使其他玩家控制器降级计数器加速 300 tick。\r\n// 注：拥有该部件的 creep 寿命只有 600 tick，且无法被 renew。\r\n// TOUGH \t10 \t无附加效果，唯一作用是增加 creep 的最大耐久值。可被强化以承受更多伤害。\r\n\r\n\r\nimport factory_spawn from \"../factory/spawn.js\";\r\nimport factory_room from \"../factory/room.js\";\r\n\r\nimport factory_source from \"../factory/source.js\";\r\n\r\nexport default {\r\n    moveTo: (creep, target, type = '') => {\r\n        let visualizePathStyle = {};\r\n        switch (type) {\r\n            case 'Resource':\r\n                visualizePathStyle = {\r\n                    // 填充颜色\r\n                    fill: '',\r\n                    // 线条颜色\r\n                    stroke: globalData.Move.WorkResourceColor,\r\n                    // undefined (实线)，dashed (虚线) 或者 dotted (点线)\r\n                    lineStyle: 'dashed',\r\n                    // 线条宽度\r\n                    strokeWidth: .1,\r\n                    // 透明度\r\n                    opacity: .5\r\n                }\r\n                break;\r\n            default:\r\n                visualizePathStyle = {\r\n                    // 填充颜色\r\n                    fill: '',\r\n                    // 线条颜色\r\n                    stroke: globalData.Move.WorkColor,\r\n                    // undefined (实线)，dashed (虚线) 或者 dotted (点线)\r\n                    lineStyle: 'dashed',\r\n                    // 线条宽度\r\n                    strokeWidth: .1,\r\n                    // 透明度\r\n                    opacity: .5\r\n                }\r\n        }\r\n        creep.moveTo(target, {\r\n            visualizePathStyle: visualizePathStyle\r\n        });\r\n    },\r\n    CleanMemory: () => {\r\n        // 清理内存\r\n\r\n        for (let name in Memory.creeps) { // 释放内存\r\n            if (!Game.creeps[name]) {\r\n                // 房间名称\r\n                let roomName = Memory.creeps[name].roomName;\r\n\r\n                // 采集者\r\n                if (Memory.creeps[name].role == globalData.harvest) {\r\n                    // 从能量源区记录删除\r\n                    let harvestSourceID, memorySource, memorySourceList;\r\n                    let on = false;\r\n                    // 如果没有合法记录会不存在harvestSourceID,报错需要捕获\r\n                    try {\r\n                        harvestSourceID = Memory.creeps[name].harvestSourceID;\r\n                        memorySource = Memory.rooms[roomName].source.list;\r\n                        memorySourceList = memorySource[harvestSourceID].list;\r\n                        on = true;\r\n                    } catch (e) {\r\n                        //TODO handle the exception\r\n                    }\r\n                    // 是否合法记录了\r\n                    if (on && harvestSourceID && memorySource && memorySourceList) {\r\n                        for (let i = 0; i < memorySourceList.length; i++) {\r\n                            if (memorySourceList[i] == name) {\r\n                                memorySource[harvestSourceID].list.splice(i, 1);\r\n                                Memory.rooms[roomName].source.list = memorySource;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 从采集建造CONTAINER记录删除\r\n                    let harvestBuildCONTAINERList;\r\n                    on = false;\r\n                    try {\r\n                        if (!Memory.rooms[roomName].source.harvestBuildCONTAINERList) Memory.rooms[roomName]\r\n                            .source\r\n                            .harvestBuildCONTAINERList = {};\r\n                        harvestBuildCONTAINERList = Memory.rooms[roomName].source.harvestBuildCONTAINERList;\r\n                        on = true;\r\n                    } catch (e) {\r\n                        //TODO handle the exception\r\n                    }\r\n\r\n                    if (on && _.size(harvestBuildCONTAINERList) > 0) {\r\n                        let on = false;\r\n                        for (let i in harvestBuildCONTAINERList) {\r\n                            if (name == i) {\r\n                                on = true;\r\n                                return false;\r\n                            }\r\n                        }\r\n                        if (on) {\r\n                            harvestBuildCONTAINERList[name] = false;\r\n                            harvestBuildCONTAINERList = _.omit(harvestBuildCONTAINERList, name);\r\n\r\n                            Memory.rooms[roomName].source.harvestBuildCONTAINERList =\r\n                                harvestBuildCONTAINERList;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // 运输者\r\n                if (Memory.creeps[name].role == globalData.carrier) {\r\n                    {\r\n                        // 从能量源区记录删除\r\n                        let TransportationTargetID, memorySource;\r\n                        let on = false;\r\n                        // 如果没有合法记录会不存在harvestSourceID,报错需要捕获\r\n                        try {\r\n                            TransportationTargetID = Memory.creeps[name].TransportationTargetID;\r\n                            memorySource = Memory.rooms[roomName].source.list;\r\n                            on = true;\r\n                        } catch (e) {\r\n                            //TODO handle the exception\r\n                        }\r\n                        // 是否合法记录了\r\n                        if (on && TransportationTargetID && memorySource) {\r\n                            let on = false;\r\n                            for (let val in memorySource) {\r\n                                let spaceXYList = memorySource[val].spaceXYList;\r\n                                for (let i = 0; i < spaceXYList.length; i++) {\r\n                                    let containerID = spaceXYList[i].containerID\r\n                                    if (TransportationTargetID == containerID) {\r\n                                        let i2 = 0;\r\n                                        for (; i2 < spaceXYList[i].list.length; i2++) {\r\n                                            if (spaceXYList[i].list[i2] == name) {\r\n                                                on = true;\r\n                                                break\r\n                                            }\r\n                                        }\r\n                                        if (on) {\r\n                                            spaceXYList[i].list.splice(i2, 1);\r\n                                            Memory.rooms[roomName].source.list[val].spaceXYList[i].list =\r\n                                                spaceXYList[i].list;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (on) break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    {\r\n                        // 从控制器区记录删除\r\n                        // let TransportationTargetID;\r\n                        let memoryControllerContainerList;\r\n                        let on = false;\r\n                        try {\r\n                            // TransportationTargetID = Memory.creeps[name].TransportationTargetID;\r\n                            memoryControllerContainerList = Memory.rooms[roomName].controller.container.list;\r\n                            on = true;\r\n                        } catch (e) {\r\n                            //TODO handle the exception\r\n                        }\r\n                        // 是否合法记录了\r\n                        if (on && memoryControllerContainerList) {\r\n                            let on = false;\r\n                            let i = 0;\r\n                            for (; i < memoryControllerContainerList.length; i++) {\r\n                                if (memoryControllerContainerList[i] == name) {\r\n                                    on = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (on) {\r\n                                memoryControllerContainerList.splice(i, 1);\r\n                                Memory.rooms[roomName].controller.container.list =\r\n                                    memoryControllerContainerList;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                delete Memory.creeps[name];\r\n                clog('清楚不存在的creep内存:', name);\r\n            }\r\n        }\r\n\r\n\r\n        // {\r\n        // \t// 能量源区Container\r\n        // \t// 再次扫描,记录列表里面的creep是否还还活,把已经死亡的去除\r\n        // \tlet TransportationTargetID, memorySource;\r\n        // \tlet on = false;\r\n        // \t// 如果没有合法记录会不存在harvestSourceID,报错需要捕获\r\n        // \ttry {\r\n        // \t\tTransportationTargetID = Memory.creeps[name].TransportationTargetID;\r\n        // \t\tmemorySource = Memory.rooms[roomName].source.list;\r\n        // \t\ton = true;\r\n        // \t} catch (e) {\r\n        // \t\t//TODO handle the exception\r\n        // \t}\r\n        // \tif (on && TransportationTargetID) {\r\n        // \t\tfor (let val in memorySource) {\r\n        // \t\t\tlet spaceXYList = memorySource[val].spaceXYList;\r\n        // \t\t\tfor (let i = 0; i < spaceXYList.length; i++) {\r\n        // \t\t\t\tlet containerID = spaceXYList[i].containerID\r\n        // \t\t\t\tif (TransportationTargetID == containerID) {\r\n        // \t\t\t\t\tlet i2 = 0;\r\n        // \t\t\t\t\tlet spaceXYListList2 = [];\r\n        // \t\t\t\t\tfor (; i2 < spaceXYList[i].list.length; i2++) {\r\n        // \t\t\t\t\t\tfor (let name in Memory.creeps) {\r\n        // \t\t\t\t\t\t\tif (name == spaceXYList[i].list[i2]) {\r\n        // \t\t\t\t\t\t\t\tspaceXYListList2.push(name);\r\n        // \t\t\t\t\t\t\t\tbreak;\r\n        // \t\t\t\t\t\t\t}\r\n        // \t\t\t\t\t\t}\r\n        // \t\t\t\t\t}\r\n        // \t\t\t\t\tMemory.rooms[roomName].source.list[val].spaceXYList[i].list = spaceXYListList2;\r\n        // \t\t\t\t}\r\n        // \t\t\t}\r\n        // \t\t}\r\n        // \t}\r\n        // }\r\n\r\n        // {\r\n        // \t// 控制器区Container\r\n        // \t// 再次扫描,记录列表里面的creep是否还还活,把已经死亡的去除\r\n        // \tlet memoryControllerContainerList;\r\n        // \tlet on = false;\r\n        // \ttry {\r\n        // \t\tmemoryControllerContainerList = Memory.rooms[roomName].controller.container.list;\r\n        // \t\ton = true;\r\n        // \t} catch (e) {\r\n        // \t\t//TODO handle the exception\r\n        // \t}\r\n        // \tif (on && memoryControllerContainerList) {\r\n        // \t\tlet memoryControllerContainerList2 = [];\r\n        // \t\tfor (var i = 0; i < memoryControllerContainerList.length; i++) {\r\n        // \t\t\tlet on = false;\r\n        // \t\t\tfor (let name in Memory.creeps) {\r\n        // \t\t\t\tif (name == memoryControllerContainerList[i]) {\r\n        // \t\t\t\t\ton = true;\r\n        // \t\t\t\t\tbreak;\r\n        // \t\t\t\t}\r\n        // \t\t\t}\r\n        // \t\t\tif (on) {\r\n        // \t\t\t\tmemoryControllerContainerList2.push(memoryControllerContainerList[i]);\r\n        // \t\t\t}\r\n        // \t\t}\r\n        // \t\tMemory.rooms[roomName].controller.container.list = memoryControllerContainerList2;\r\n        // \t}\r\n        // }\r\n\r\n    },\r\n    addHarvest: (harvests, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.harvest + Game.time;\r\n\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.harvest.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.harvest.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if ( /*Object.keys(Game.creeps).length < 1 ||*/ harvests) {\r\n            // 当总creep数量小于2时,使用缩减版进行快速发展（注意：当建筑只剩基地时最高能量300）\r\n            if (harvests.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.harvest\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.harvest.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (harvests.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.harvest\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.harvest.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.harvest,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 采集者: ' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addCarrier: (carriers, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.carrier + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.carrier.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.carrier.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (carriers) {\r\n            if (carriers.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.carrier\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.carrier.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (carriers.length > 2 && controller_level >= 4) {\r\n                if (globalData.creepConfigs.carrier.sourceContainer1v1 && carriers.length >= factory_source\r\n                    .GetContainerLength(roomSequence) + 1) {\r\n                    if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.carrier\r\n                        .bodysPlus\r\n                        .totalEnergyRequired) {\r\n                        bodys = globalData.creepConfigs.carrier.bodysPlus.list;\r\n                    } else {\r\n                        return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.carrier,\r\n                    task: dataStructure_task,\r\n                    target: dataStructure_target,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 运输者: ' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addUpgrader: (upgraders, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.upgrader + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.upgrader.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.upgrader.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (upgraders) {\r\n            if (upgraders.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.upgrader\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.upgrader.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (upgraders.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.upgrader\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.upgrader.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.upgrader,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 升级者: ' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addBuilder: (builders, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.builder + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.builder.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.builder.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (builders) {\r\n            if (builders.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.builder\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.builder.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (builders.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.builder\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.builder.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.builder,\r\n                    roomName: roomName,\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 建造者:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addRepairer: (repairers, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.repairer + Game.time;\r\n        let targets = factory_spawn.nameGet(spawnName).room.find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                // 找出需要储存能量\r\n                return (structure.structureType == STRUCTURE_TOWER) &&\r\n                    structure.store.getUsedCapacity(RESOURCE_ENERGY) > 100;\r\n            }\r\n        });\r\n        if (targets.length > 0 && globalData.creepConfigs.repairer.onTower) {\r\n            return '存在TOWER能量大于100以上,不需要维修者';\r\n        }\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.repairer.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.repairer.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (repairers) {\r\n            if (repairers.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.repairer\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.repairer.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (repairers.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.repairer\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.repairer.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.repairer,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 维修者:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addNearDefender: (nearDefenders, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.nearDefender + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.nearDefender.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.nearDefender.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (nearDefenders) {\r\n            if (nearDefenders.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.nearDefender\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.nearDefender.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (nearDefenders.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.nearDefender\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.nearDefender.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.nearDefender,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 防御者-近战:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addFarDefender: (farDefenders, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.farDefender + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.farDefender.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.farDefender.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (farDefenders) {\r\n            if (farDefenders.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.farDefender\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.farDefender.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (farDefenders.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.farDefender\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.farDefender.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.farDefender,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 防御者-远战:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addOccupier: (occupiers, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.occupier + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.occupier.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.occupier.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (occupiers) {\r\n            if (occupiers.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.occupier\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.occupier.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (occupiers.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.occupier\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.occupier.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.occupier,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 占领者:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    addTheHealer: (theHealers, controller_level = 4, spawnName) => {\r\n        let spawnSequence = factory_spawn.nameGetSequence(spawnName);\r\n        let roomSequence = factory_spawn.sequenceGetRoomSequence(spawnSequence);\r\n        let roomName = factory_room.sequenceGetName(roomSequence);\r\n        let bodys;\r\n        let newName = globalData.theHealer + Game.time;\r\n        if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.theHealer.bodys\r\n            .totalEnergyRequired) {\r\n            bodys = globalData.creepConfigs.theHealer.bodys.list;\r\n        } else {\r\n            return '房间总能量数量未达到限制，无法生产';\r\n        }\r\n        if (theHealers) {\r\n            if (theHealers.length < 1) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.theHealer\r\n                    .bodysMinus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.theHealer.bodysMinus.list;\r\n                } else {\r\n                    return 'Minus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n            if (theHealers.length > 2 && controller_level >= 4) {\r\n                if (factory_room.nameGet(roomName).energyAvailable >= globalData.creepConfigs.theHealer\r\n                    .bodysPlus\r\n                    .totalEnergyRequired) {\r\n                    bodys = globalData.creepConfigs.theHealer.bodysPlus.list;\r\n                } else {\r\n                    return 'Plus 房间总能量数量未达到限制，无法生产';\r\n                }\r\n            }\r\n        }\r\n        let returnData = factory_spawn.nameGet(spawnName).spawnCreep(bodys,\r\n            newName, {\r\n                memory: {\r\n                    role: globalData.theHealer,\r\n                    roomName: roomName,\r\n                    spawnName: spawnName\r\n                }\r\n            });\r\n        if (returnData == OK) {\r\n            Game.creeps[newName].memory.id = Game.creeps[newName].id;\r\n            clog('生成新的 治疗者:' + newName);\r\n        }\r\n        return returnData\r\n    },\r\n    ComponentEnergyCalculation: (creepComponent = []) => {\r\n        // 部件能量计算\r\n        let total = 0;\r\n        for (let i = 0; i < creepComponent.length; i++) {\r\n            switch (creepComponent[i]) {\r\n                case MOVE:\r\n                    total += globalData.creepComponentConfigs.MOVE;\r\n                    break;\r\n                case WORK:\r\n                    total += globalData.creepComponentConfigs.WORK;\r\n                    break;\r\n                case CARRY:\r\n                    total += globalData.creepComponentConfigs.CARRY;\r\n                    break;\r\n                case ATTACK:\r\n                    total += globalData.creepComponentConfigs.ATTACK;\r\n                    break;\r\n                case RANGED_ATTACK:\r\n                    total += globalData.creepComponentConfigs.RANGED_ATTACK;\r\n                    break;\r\n                case HEAL:\r\n                    total += globalData.creepComponentConfigs.HEAL;\r\n                    break;\r\n                case CLAIM:\r\n                    total += globalData.creepComponentConfigs.CLAIM;\r\n                    break;\r\n                case TOUGH:\r\n                    total += globalData.creepComponentConfigs.TOUGH;\r\n                    break;\r\n                default:\r\n                    Throw.Error('ComponentEnergyCalculation', ' 无效 ', creepComponent[i]);\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n}\r\n\r\n// creep 监控状态检查\r\nCreep.prototype.isHealthy = function () {\r\n    if (this.ticksToLive <= 10) return false\r\n    else return true\r\n}","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 采集\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        // work && 背包为空\r\n        if (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) {\r\n            creep.memory.work = false;\r\n            creep.say('🔄 收获');\r\n        }\r\n        // 非work状态 && 背包满(空余为0)\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.work = true;\r\n            creep.say('🛒 存放');\r\n        }\r\n\r\n        let roomName = creep.room.name;\r\n        let roomSequence = factory_room.nameGetSequence(roomName);\r\n\r\n        // 没带carry部件或者满了，再采集能量会自动掉脚下，如果脚下有容器就会自动进容器\r\n        // 脚下是否有CONTAINER，有就不移动\r\n        let on = false;\r\n        let targetPos = new RoomPosition(creep.pos.x, creep.pos.y, creep.room.name);\r\n        let found = creep.room.lookForAt(LOOK_STRUCTURES, targetPos);\r\n        if (found.length && found[0].structureType == STRUCTURE_CONTAINER && found[0].store.getFreeCapacity(\r\n            RESOURCE_ENERGY) > 0) {\r\n            on = true;\r\n        }\r\n\r\n        if (!creep.memory.work || on) {\r\n            let sources = creep.room.find(FIND_SOURCES);\r\n            // 默认去采集第一个source\r\n            let source = sources.length > 0 ? sources[0] : null;\r\n\r\n            // 自动分配能量源区\r\n            if (globalData.rooms[roomSequence - 1].AutomaticAssignHarvest) {\r\n                // 没有分配到的Source\r\n\r\n                // 根据9*9计算能量源区地形分配数量 只计算一次缓存后固定\r\n                // try {\r\n                // \tif (!Memory.rooms[roomName].source.list) {}\r\n                // } catch (e) {\r\n                // \tMemory.rooms[roomName].source.list = {};\r\n                // }\r\n                if (!Memory.rooms[roomName].source ? true : !Memory.rooms[roomName].source.list) {\r\n\r\n                    // 网上贡献的方法\r\n                    // let zb=creep.room.find(FIND_SOURCES).pos;\r\n                    // let dix=_.filter(creep.room.lookAtArea(LOOK_TERRAIN,zb.y-1,zb.x-1,zb.y+1,zb.x+1,1,(f)=>f.terrain=='plain' 8& creep.room.lookAt(f.pos)[0].structureType!-STRUCTURE_WALL).length)\r\n\r\n                    let memorySource = {};\r\n                    const terrain = new Room.Terrain(creep.room.name);\r\n                    let total = 0;\r\n                    for (let i = 0; i < sources.length; i++) {\r\n                        let val = sources[i];\r\n                        let num = 0;\r\n                        // 空地XY坐标列表\r\n                        let spaceXYList = [];\r\n                        let x;\r\n                        let x_ini = x = val.pos.x - 1;\r\n                        let y = val.pos.y - 1;\r\n                        for (let i2 = 0; i2 < 3; i2++) {\r\n                            x = x_ini;\r\n                            for (let i3 = 0; i3 < 3; i3++) {\r\n                                if (terrain.get(x, y) != TERRAIN_MASK_WALL) {\r\n                                    // console.log(x, y)\r\n                                    let on = true;\r\n                                    let targetPos = new RoomPosition(x, y, creep.room.name)\r\n                                    // 人造墙壁\r\n                                    let found = creep.room.lookForAt(LOOK_STRUCTURES, targetPos);\r\n                                    // console.log(found, ' found[1] +', found[1], \"+\")\r\n                                    if (found.length && found[0].structureType == STRUCTURE_WALL) {\r\n                                        on = false;\r\n                                    }\r\n                                    // const look = creep.room.lookAt(targetPos);\r\n                                    // look.forEach(function(lookObject) {\r\n                                    // \t// 人造墙壁\r\n                                    // \tif (lookObject.type != LOOK_STRUCTURES && lookObject[\r\n                                    // \t\t\tLOOK_STRUCTURES][1] != '(constructedWall)') {\r\n                                    // \t\tconsole.log(x, y)\r\n                                    // \t\ton = true;\r\n                                    // \t}\r\n                                    // });\r\n                                    if (on) {\r\n                                        num++\r\n                                        spaceXYList.push({\r\n                                            x: x,\r\n                                            y: y,\r\n                                            // 如果存在CONTAINER记录允许运输列表\r\n                                            list: [],\r\n                                            // 当前坐标是否存在CONTAINER\r\n                                            containerID: null\r\n                                        })\r\n\r\n                                        // 自动建造对应数量的CONTAINER\r\n                                        if (globalData.rooms[roomSequence - 1].AutomaticAssignHarvestCONTAINER) {\r\n                                            let on = true;\r\n                                            // 已经存在有建筑了跳过\r\n                                            if (found.length) {\r\n                                                on = false;\r\n                                                // console.log('found',found);\r\n\r\n                                                // 已经存在CONTAINER就跳过\r\n                                                // if (found[0].structureType != STRUCTURE_CONTAINER) {\r\n                                                // \ton = false;\r\n                                                // }\r\n                                            }\r\n                                            if (on) {\r\n                                                // 指定位置创建一个新的 ConstructionSite\r\n                                                let returnData = factory_room.nameGet(roomName)\r\n                                                    .createConstructionSite(x, y, STRUCTURE_CONTAINER);\r\n                                                if (returnData == OK) {\r\n                                                    clog('自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y,\r\n                                                        returnData);\r\n                                                } else {\r\n                                                    clog('自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y,\r\n                                                        returnData);\r\n                                                }\r\n                                                // OK\t0\t这个操作已经成功纳入计划。\r\n                                                // ERR_NOT_OWNER\t-1\t该房间被敌对玩家占领（claim）或预定（reserve）。\r\n                                                // ERR_INVALID_TARGET\t-7\tT该建筑无法被放置在指定位置。\r\n                                                // ERR_FULL\t-8\t你已经放置了太多建筑工地。其上限为 100。\r\n                                                // ERR_INVALID_ARGS\t-10\t不正确的位置。\r\n                                                // ERR_RCL_NOT_ENOUGH\t-14\t房间控制器级别不足。\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    ;\r\n                                }\r\n                                x++;\r\n                            }\r\n                            y++;\r\n                        }\r\n\r\n                        total += num;\r\n                        memorySource[val.id] = {\r\n                            // 允许采集记录列表\r\n                            list: [],\r\n                            // 允许采集数量\r\n                            harvestNum: num,\r\n                            // 空地XY坐标列表\r\n                            spaceXYList: spaceXYList\r\n                        };\r\n                    }\r\n                    Memory.rooms[roomName].source = {\r\n                        list: memorySource,\r\n                        // 允许采集总数\r\n                        total: total\r\n                    };\r\n                    // 根据最大支持数量动态更新采集者数量\r\n                    if (globalData.creepConfigs.harvest.AutomaticAssignNum) {\r\n                        globalData.creepConfigs.harvest.number = total;\r\n                    }\r\n                }\r\n\r\n                let memorySource = Memory.rooms[roomName].source.list;\r\n                if (memorySource) {\r\n                    if (!creep.memory.harvestSourceID) {\r\n                        // 找出没有被分配完的能量源区\r\n                        let memorySourceListNull = null;\r\n                        for (let val in memorySource) {\r\n                            if (memorySource[val].list.length < 1) {\r\n                                memorySourceListNull = val;\r\n                                break;\r\n                            }\r\n                        }\r\n                        for (let val in memorySource) {\r\n                            // 找到空闲能量源区，优先分配给没有分配数量的能量源区\r\n                            if (memorySourceListNull && val != memorySourceListNull) continue;\r\n                            if (memorySource[val].list.length < memorySource[val].harvestNum) {\r\n                                // 把creep ID记录到能量源区\r\n                                memorySource[val].list.push(creep.name);\r\n                                // 把能量源区ID记录到creep\r\n                                creep.memory.harvestSourceID = val;\r\n\r\n                                Memory.rooms[roomName].source.list = memorySource;\r\n                                clog('房间', roomName, ' ', creep.name, '已自动分配给能量源区', val)\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 找出已经分配的能量源区消息\r\n                    for (let i = 0; i < sources.length; i++) {\r\n                        if (sources[i].id == creep.memory.harvestSourceID) {\r\n                            // 检查是否在能量源区记录中\r\n                            let memorySourceList = memorySource[sources[i].id].list;\r\n                            let on = false;\r\n                            for (let i2 = 0; i2 < memorySourceList.length; i2++) {\r\n                                if (memorySourceList[i2] == creep.name) {\r\n                                    on = true;\r\n                                    break\r\n                                }\r\n                            }\r\n                            if (on) {\r\n                                // 合法记录在能量源区\r\n                                source = sources[i];\r\n                            } else {\r\n                                // 不合法,移除\r\n                                creep.memory.harvestSourceID = null;\r\n                            }\r\n                            break\r\n                        }\r\n                    }\r\n\r\n                    if (source) {\r\n                        if (source.id != creep.memory.harvestSourceID) {\r\n                            // Throw.Error('creep ', creep.id, ' 找不到分配的能量源ID ', creep.memory.harvestSourceID);\r\n                        }\r\n                    } else {\r\n                        // Throw.Error('creep ', creep.id, ' 找不到分配的能量源ID ', creep.memory.harvestSourceID);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            if (source) {\r\n                // 采集能量\r\n                if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, source, 'Resource');\r\n                }\r\n            }\r\n        } else {\r\n            // 至少留下一个运输到基地\r\n            let harvestBuildCONTAINERList;\r\n            let on = false;\r\n            try {\r\n                if (!Memory.rooms[roomName].source.harvestBuildCONTAINERList) Memory.rooms[roomName].source\r\n                    .harvestBuildCONTAINERList = {};\r\n                harvestBuildCONTAINERList = Memory.rooms[roomName].source.harvestBuildCONTAINERList;\r\n                on = true;\r\n            } catch (e) {\r\n                //TODO handle the exception\r\n            }\r\n            if (on) {\r\n                // 脚下是否有CONTAINER没有建造完成,就优先建筑\r\n                let targetPos = new RoomPosition(creep.pos.x, creep.pos.y, creep.room.name);\r\n                let found = creep.room.lookForAt(LOOK_CONSTRUCTION_SITES, targetPos);\r\n                if (found.length && found[0].structureType == STRUCTURE_CONTAINER) {\r\n                    harvestBuildCONTAINERList[creep.name] = true;\r\n                } else {\r\n                    harvestBuildCONTAINERList[creep.name] = false;\r\n                    harvestBuildCONTAINERList = _.omit(harvestBuildCONTAINERList, creep.name);\r\n                }\r\n                Memory.rooms[roomName].source.harvestBuildCONTAINERList = harvestBuildCONTAINERList;\r\n                const harvests = factory_creep.Harvest.ALL(roomName);\r\n                if (_.size(harvestBuildCONTAINERList) < harvests.length) {\r\n                    if (harvestBuildCONTAINERList[creep.name]) {\r\n                        // 建造\r\n                        if (creep.build(found[0]) == ERR_NOT_IN_RANGE) {\r\n                            factory_creep.moveTo(creep, found[0]);\r\n                        }\r\n                        return\r\n                    }\r\n                } else {\r\n                    if (harvestBuildCONTAINERList[creep.name]) {\r\n                        harvestBuildCONTAINERList[creep.name] = false;\r\n                        harvestBuildCONTAINERList = _.omit(harvestBuildCONTAINERList, creep.name);\r\n\r\n                        Memory.rooms[roomName].source.harvestBuildCONTAINERList = harvestBuildCONTAINERList;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            var targets = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    // 返回该存储的剩余可用容量大于0的CONTAINER\r\n                    return (\r\n                            // structure.structureType == STRUCTURE_EXTENSION ||\r\n                            // structure.structureType == STRUCTURE_SPAWN ||\r\n                            // structure.structureType == STRUCTURE_TOWER ||\r\n                            structure.structureType == STRUCTURE_CONTAINER) &&\r\n                        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n                }\r\n            });\r\n            let target = null;\r\n            if (targets.length > 0) {\r\n                // _.find(targets, (val) => creep.pos.getRangeTo(val)<=3)\r\n                target = function (targets) {\r\n                    let val0range;\r\n                    for (let i = 0; i < targets.length; i++) {\r\n                        let val = targets[i];\r\n                        // 获取到指定位置的线性范围。\r\n                        const range = creep.pos.getRangeTo(val);\r\n                        // 先记录一下,避免后续重复消耗CPU\r\n                        if (i == 0) val0range = range;\r\n                        // 脚下的CONTAINER\r\n                        if (range <= 1) return val;\r\n                        // 扩大成周边范围\r\n                        if (range <= 3) return val;\r\n                    }\r\n                    // 周边找不到CONTAINER,默认第一个，如果范围大于就不前往\r\n                    return val0range < 5 ? targets[0] : null;\r\n                }(targets);\r\n            }\r\n            if (!target) {\r\n                // CONTAINER满了或者没有建  查找到该位置路径最短的对象\r\n                target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        // 返回该存储的剩余可用容量大于0的CONTAINER\r\n                        return (\r\n                                structure.structureType == STRUCTURE_EXTENSION ||\r\n                                // ||structure.structureType == STRUCTURE_TOWER\r\n                                structure.structureType == STRUCTURE_SPAWN) &&\r\n                            structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n                    }\r\n                });\r\n            }\r\n            if (!target) {\r\n                // CONTAINER满了或者没有建  查找到该位置路径最短的对象\r\n                target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        // 返回该存储的剩余可用容量大于0的CONTAINER\r\n                        return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                            structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n                    }\r\n                });\r\n            }\r\n            if (target) {\r\n                // 将资源从该 creep 转移至其他对象\r\n                if (creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, target);\r\n                }\r\n            } else {\r\n                // 储存能量都满了不用搬运能量,先干其他\r\n                let targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n                if (targets.length > 0) {\r\n                    // 建造\r\n                    if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, targets[0]);\r\n                    }\r\n                }\r\n                if (targets.length < 1) {\r\n                    targets = creep.room.find(FIND_STRUCTURES, {\r\n                        filter: object => object.hits < object.hitsMax\r\n                    });\r\n                    targets.sort((a, b) => a.hits - b.hits);\r\n                    if (targets.length > 0) {\r\n                        // 维修\r\n                        if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                            factory_creep.moveTo(creep, targets[0]);\r\n                        }\r\n                    }\r\n                }\r\n                if (targets.length < 1) {\r\n                    // 升级\r\n                    if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, creep.room.controller);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n};\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.harvest && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.harvest);\r\n    }\r\n    return returnData;\r\n}","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 升级\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n\r\n        if (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) { // 升级状态&&能量不足的时候，变为采集者\r\n            creep.memory.work = false;\r\n            creep.say('🔄 采集');\r\n        }\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) { // 非升级状态&&能量满的时候，变为升级状态\r\n            creep.memory.work = true;\r\n            creep.say('⚡ 升级');\r\n        }\r\n\r\n        let roomName = creep.room.name;\r\n\r\n        if (creep.memory.work) { // 升级状态，找到控制器并升级 + 可视化\r\n            if (!creep.room.controller.sign) {\r\n                // 对控制器签名\r\n                if (creep.signController(creep.room.controller, \"peaceful development.\") ==\r\n                    ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, creep.room.controller);\r\n                }\r\n            } else {\r\n                if (creep.room.controller.sign.username != globalData.username) {\r\n                    // 对控制器签名\r\n                    if (creep.signController(creep.room.controller, \"peaceful development.\") ==\r\n                        ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, creep.room.controller);\r\n                    }\r\n                } else {\r\n                    // 升级\r\n                    if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, creep.room.controller);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else { // 采集状态 + 可视化\r\n            const harvests = factory_creep.Harvest.ALL(roomName);\r\n            if (harvests.length < 1) {\r\n                // 采集死完后,自己去采集\r\n                let target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n                if (target) {\r\n                    if (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, target, 'Resource');\r\n                    }\r\n                }\r\n            } else {\r\n                let target;\r\n\r\n                let memoryControllerContainer;\r\n                let on = false;\r\n                try {\r\n                    memoryControllerContainer = Memory.rooms[roomName].controller.container;\r\n                    on = true;\r\n                } catch (e) {\r\n                    //TODO handle the exception\r\n                }\r\n                if (on && memoryControllerContainer && memoryControllerContainer.id) {\r\n                    target = Game.getObjectById(memoryControllerContainer.id);\r\n                    if (target.store.getUsedCapacity(RESOURCE_ENERGY) == 0) {\r\n                        target = null;\r\n                    }\r\n                }\r\n\r\n                if (!target) {\r\n                    target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                            // return (structure.structureType == STRUCTURE_CONTAINER ||\r\n                            // \t\tstructure.structureType == STRUCTURE_EXTENSION ||\r\n                            // \t\t(structure.structureType == STRUCTURE_SPAWN &&\r\n                            // \t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 250) ||\r\n                            // \t\tstructure.structureType == STRUCTURE_TOWER) &&\r\n                            // \tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        }\r\n                    });\r\n                }\r\n                if (!target) {\r\n                    // 找不到可搬运的地方,从基地搬运\r\n                    target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_SPAWN) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 200;\r\n                        }\r\n                    });\r\n                }\r\n                if (!target) {\r\n                    // 找不到可搬运的地方,从基地搬运\r\n                    target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_EXTENSION) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        }\r\n                    });\r\n                }\r\n                if (!target) {\r\n                    // 采集死完后,自己去采集\r\n                    target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n                    if (target) {\r\n                        if (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n                            // 向目标移动\r\n                            factory_creep.moveTo(creep, target, 'Resource');\r\n                        }\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (target) {\r\n                    // 从建筑(structure)中拿取资源\r\n                    if (creep.withdraw(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, target, 'Resource');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n};\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.upgrader && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.upgrader);\r\n    }\r\n    return returnData;\r\n}\r\n\r\n\r\n// /**\r\n//  * 升级者配置生成器\r\n//  * source: 从指定矿中挖矿\r\n//  * target: 将其转移到指定的 roomController 中\r\n//  *\r\n//  * @param sourceId 要挖的矿 id\r\n//  */\r\n// module.exports = sourceId => ({\r\n//     // 采集能量矿\r\n//     source: creep => {\r\n//         const source = Game.getObjectById(sourceId)\r\n//         if (creep.harvest(source) == ERR_NOT_IN_RANGE) creep.moveTo(source)\r\n\r\n//         // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n//         return creep.store.getFreeCapacity() <= 0\r\n//     },\r\n//     // 升级控制器\r\n//     target: creep => {\r\n//         const controller = creep.room.controller\r\n//         if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n\r\n//         // 自己身上的能量没有了，返回 true（切换至 source 阶段）\r\n//         return creep.store[RESOURCE_ENERGY] <= 0\r\n//     }\r\n// })","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 建造\r\nexport default {\r\n\r\n\t/** @param {Creep} creep **/\r\n\trun: function(creep) {\r\n\t\tif (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) { // work && 背包为空\r\n\t\t\tcreep.memory.work = false; // 变为 非work状态\r\n\t\t\tcreep.say('🔄 收获');\r\n\t\t}\r\n\t\tif (!creep.memory.work && creep.store.getFreeCapacity() == 0) { // 非work状态 && 背包满(空余为0)\r\n\t\t\tcreep.memory.work = true; // 变为 work状态\r\n\t\t\tcreep.say('🚧 建造');\r\n\t\t}\r\n\r\n\t\tlet roomName = creep.room.name;\r\n\r\n\t\tif (creep.memory.work) { // work状态的时候\r\n\t\t\t// 寻找建筑位\r\n\t\t\t// 路\r\n\t\t\tlet targets = creep.room.find(FIND_CONSTRUCTION_SITES, {\r\n\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\treturn structure.structureType == STRUCTURE_ROAD;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// 墙壁\r\n\t\t\tif (targets.length < 1) {\r\n\t\t\t\ttargets = creep.room.find(FIND_CONSTRUCTION_SITES, {\r\n\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\treturn structure.structureType == STRUCTURE_WALL;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// 小型储存能量\r\n\t\t\tif (targets.length < 1) {\r\n\t\t\t\ttargets = creep.room.find(FIND_CONSTRUCTION_SITES, {\r\n\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\treturn structure.structureType == STRUCTURE_EXTENSION;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// 中型储存能量\r\n\t\t\tif (targets.length < 1) {\r\n\t\t\t\ttargets = creep.room.find(FIND_CONSTRUCTION_SITES, {\r\n\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\treturn structure.structureType == STRUCTURE_CONTAINER;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (targets.length < 1) {\r\n\t\t\t\ttargets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n\t\t\t}\r\n\r\n\t\t\tif (targets.length > 0) { // targets.length > 0  || 建筑位 > 0\r\n\t\t\t\t// 建造\r\n\t\t\t\tif (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\tfactory_creep.moveTo(creep, targets[0]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 不用建造了,先干其他\r\n\t\t\t\tlet targets = creep.room.find(FIND_STRUCTURES, {\r\n\t\t\t\t\tfilter: object => object.hits < object.hitsMax\r\n\t\t\t\t});\r\n\t\t\t\ttargets.sort((a, b) => a.hits - b.hits);\r\n\t\t\t\tif (targets.length > 0) {\r\n\t\t\t\t\t// 维修\r\n\t\t\t\t\tif (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\t\tfactory_creep.moveTo(creep, targets[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (targets.length < 1) {\r\n\t\t\t\t\t// 升级\r\n\t\t\t\t\tif (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\t\tfactory_creep.moveTo(creep, creep.room.controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { // 非work状态的时候， 到source旁边并采集\r\n\t\t\tconst harvests = factory_creep.Harvest.ALL(roomName);\r\n\t\t\tif (harvests.length < 1) {\r\n\t\t\t\t// 采集死完后,自己去采集\r\n\t\t\t\tlet target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tif (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\t\tfactory_creep.moveTo(creep, target, 'Resource');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tlet target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\t// 找出有储存能量的container搬运\r\n\t\t\t\t\t\treturn (structure.structureType == STRUCTURE_CONTAINER) &&\r\n\t\t\t\t\t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n\t\t\t\t\t\t// return (structure.structureType == STRUCTURE_CONTAINER ||\r\n\t\t\t\t\t\t// \t\tstructure.structureType == STRUCTURE_EXTENSION ||\r\n\t\t\t\t\t\t// \t\t(structure.structureType == STRUCTURE_SPAWN &&\r\n\t\t\t\t\t\t// \t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 250) ||\r\n\t\t\t\t\t\t// \t\tstructure.structureType == STRUCTURE_TOWER) &&\r\n\t\t\t\t\t\t// \tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!target) {\r\n\t\t\t\t\t// 找不到可搬运的地方,从基地搬运\r\n\t\t\t\t\ttarget = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n\t\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\t\t// 找出有储存能量的container搬运\r\n\t\t\t\t\t\t\treturn (structure.structureType == STRUCTURE_SPAWN) &&\r\n\t\t\t\t\t\t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 200;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (!target) {\r\n\t\t\t\t\t// 找不到可搬运的地方,从基地搬运\r\n\t\t\t\t\ttarget = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n\t\t\t\t\t\tfilter: (structure) => {\r\n\t\t\t\t\t\t\t// 找出有储存能量的container搬运\r\n\t\t\t\t\t\t\treturn (structure.structureType == STRUCTURE_EXTENSION) &&\r\n\t\t\t\t\t\t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (!target) {\r\n\t\t\t\t\t// 采集死完后,自己去采集\r\n\t\t\t\t\ttarget = creep.pos.findClosestByPath(FIND_SOURCES);\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\tif (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\t\t\t// 向目标移动\r\n\t\t\t\t\t\t\tfactory_creep.moveTo(creep, target, 'Resource');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\t// 从建筑(structure)中拿取资源\r\n\t\t\t\t\tif (creep.withdraw(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n\t\t\t\t\t\t// 向目标移动\r\n\t\t\t\t\t\tfactory_creep.moveTo(creep, target, 'Resource');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tALL: (...e) => {\r\n\t\treturn all(...e);\r\n\t}\r\n};\r\n\r\nfunction all(roomName) {\r\n\tlet returnData;\r\n\r\n\tif (roomName) {\r\n\t\treturnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.builder && creep.memory\r\n\t\t\t.roomName == roomName));\r\n\t} else {\r\n\t\treturnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.builder);\r\n\t}\r\n\treturn returnData;\r\n}","import factory_spawn from \"../../factory/spawn.js\";\r\nimport factory_room from \"../../factory/room.js\";\r\n\r\nimport factory_creep from \"../../factory/creep.js\";\r\n\r\n// 运输者\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        // work && 背包为空\r\n        if (creep.memory.work && creep.store.getUsedCapacity() == 0) {\r\n            creep.memory.work = false;\r\n            creep.say('🔄 收获');\r\n        }\r\n        // 非work状态 && 背包满(空余为0)\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) {\r\n            creep.memory.work = true;\r\n            creep.say('🛒 存放');\r\n        }\r\n\r\n        // 房间序号\r\n        let roomName = creep.room.name;\r\n\r\n        if (!creep.memory.work) {\r\n            // 所有掉落的资源\r\n            let target = creep.pos.findClosestByPath(FIND_DROPPED_RESOURCES);\r\n            // const target = creep.pos.findClosestByRange(FIND_DROPPED_RESOURCES);\r\n            // if(target)\r\n            if (target) {\r\n                // 捡起一个物品 (如捡起一些能量)\r\n                if (creep.pickup(target) == ERR_NOT_IN_RANGE) {\r\n                    // 向目标移动\r\n                    factory_creep.moveTo(creep, target, 'Resource');\r\n                }\r\n            } else {\r\n                // 墓碑\r\n                target = creep.pos.findClosestByPath(FIND_TOMBSTONES, {\r\n                    filter: (structure) => {\r\n                        return (structure.store.getUsedCapacity() > 0);\r\n                    }\r\n                });\r\n                if (target) {\r\n                    for (const resourceType in target.store) {\r\n                        if (creep.withdraw(target, resourceType) == ERR_NOT_IN_RANGE) {\r\n                            // 向目标移动\r\n                            factory_creep.moveTo(creep, target, 'Resource');\r\n                            break;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                let source = null;\r\n                // 能量源区CONTAINER是否1v1运送\r\n                if (globalData.creepConfigs.carrier.sourceContainer1v1 && Memory.rooms[roomName].source) {\r\n                    let memorySource = Memory.rooms[roomName].source.list;\r\n                    // source周边的空地是否存在CONTAINER\r\n                    for (let val in memorySource) {\r\n                        // 空地XY坐标列表\r\n                        let spaceXYList = memorySource[val].spaceXYList;\r\n                        for (let i = 0; i < spaceXYList.length; i++) {\r\n                            let x = spaceXYList[i].x;\r\n                            let y = spaceXYList[i].y;\r\n                            let targetPos = new RoomPosition(x, y, creep.room.name)\r\n                            // CONTAINER\r\n                            let found = creep.room.lookForAt(LOOK_STRUCTURES, targetPos);\r\n                            if (found.length && found[0].structureType == STRUCTURE_CONTAINER) {\r\n                                spaceXYList[i].containerID = found[0].id;\r\n                            } else {\r\n                                // 如果不存在CONTAINER就清除CONTAINERID\r\n                                spaceXYList[i].containerID = null;\r\n\r\n                                // 是否有正在建造的CONSTRUCTION\r\n                                let found = creep.room.lookForAt(LOOK_CONSTRUCTION_SITES, targetPos);\r\n                                if (found.length && found[0].structureType != STRUCTURE_CONTAINER) {\r\n                                    // 指定位置创建一个新的 ConstructionSite\r\n                                    let returnData = factory_room.nameGet(roomName)\r\n                                        .createConstructionSite(x, y, STRUCTURE_CONTAINER);\r\n                                    if (returnData != OK) {\r\n                                        clog('能量源区自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y,\r\n                                            returnData);\r\n                                    } else {\r\n                                        clog('能量源区自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y,\r\n                                            returnData);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        memorySource[val].spaceXYList = spaceXYList;\r\n                    }\r\n\r\n                    let TransportationTarget = creep.memory.TransportationTarget;\r\n                    if (!TransportationTarget) {\r\n                        // 找出没有被分配完的CONTAINER\r\n                        let memoryContainerListNull = null;\r\n                        for (let val in memorySource) {\r\n                            let spaceXYList = memorySource[val].spaceXYList;\r\n                            let on = false;\r\n                            for (let i = 0; i < spaceXYList.length; i++) {\r\n                                try {\r\n                                    if (spaceXYList[i].list.length < 1) {\r\n                                        memoryContainerListNull = i;\r\n                                        on = true;\r\n                                        break;\r\n                                    }\r\n                                } catch (e) {\r\n                                    //TODO handle the exception\r\n                                    spaceXYList[i].list = []\r\n                                }\r\n                            }\r\n                            if (on) break;\r\n                        }\r\n                        for (let val in memorySource) {\r\n                            // 找到空闲CONTAINER，优先分配给没有分配数量的CONTAINER\r\n                            let on = false;\r\n                            let spaceXYList = memorySource[val].spaceXYList;\r\n                            for (let i = 0; i < spaceXYList.length; i++) {\r\n                                let containerID = spaceXYList[i].containerID\r\n                                if (memoryContainerListNull && containerID != spaceXYList[\r\n                                    memoryContainerListNull].containerID) continue;\r\n                                if (spaceXYList[i].list.length < 1) {\r\n                                    // 把creep ID记录到能量源区CONTAINER\r\n                                    spaceXYList[i].list.push(creep.name);\r\n                                    // 把能量源区ID记录到creep\r\n                                    creep.memory.TransportationTarget = {\r\n                                        id: containerID,\r\n                                        type: 'Source'\r\n                                    };\r\n\r\n                                    Memory.rooms[roomName].source.list[val].spaceXYList = spaceXYList;\r\n                                    on = true;\r\n                                    clog('房间', roomName, ' ', creep.name, '已自动分配给能量源区', val, \"Container\",\r\n                                        spaceXYList[i].containerID)\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (on) break;\r\n                        }\r\n                    }\r\n\r\n                    // 找出已经分配的能量源区消息\r\n                    TransportationTarget = creep.memory.TransportationTarget;\r\n                    if (TransportationTarget && TransportationTarget.type ==\r\n                        'Source') {\r\n                        let targets = creep.room.find(FIND_STRUCTURES, {\r\n                            filter: (structure) => {\r\n                                return structure.structureType == STRUCTURE_CONTAINER;\r\n                            }\r\n                        });\r\n                        for (let i = 0; i < targets.length; i++) {\r\n                            if (targets[i].id == TransportationTarget.id) {\r\n                                // 检查是否在能量源区CONTAINER记录中\r\n                                let on = false;\r\n                                for (let val in memorySource) {\r\n                                    let spaceXYList = memorySource[val].spaceXYList;\r\n                                    for (let i2 = 0; i2 < spaceXYList.length; i2++) {\r\n                                        for (let i3 = 0; i3 < spaceXYList[i2].list.length; i3++) {\r\n                                            if (spaceXYList[i2].list[i3] == creep.name) {\r\n                                                on = true;\r\n                                                break\r\n                                            }\r\n                                        }\r\n                                        if (on) break;\r\n                                    }\r\n                                    if (on) break;\r\n                                }\r\n                                if (on) {\r\n                                    // 合法记录在能量源区CONTAINER\r\n                                    source = targets[i];\r\n                                } else {\r\n                                    // 不合法,移除\r\n                                    creep.memory.TransportationTarget = null;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (source) {\r\n                        if (TransportationTarget && source.id != TransportationTarget.id &&\r\n                            TransportationTarget == 'Source') {\r\n                            // Throw.Error('creep ', creep.id, ' 找不到分配的能量源CONTAINERID ', creep.memory.TransportationTargetID);\r\n                        }\r\n                    } else {\r\n                        // Throw.Error('creep ', creep.id, ' 找不到分配的能量源CONTAINERID ', creep.memory.TransportationTargetID);\r\n                    }\r\n                }\r\n\r\n                if (!source) {\r\n                    // 所有建筑 去除控制器Container\r\n                    let memoryControllerContainer;\r\n                    let on = false;\r\n                    try {\r\n                        memoryControllerContainer = Memory.rooms[roomName].controller.container;\r\n                        on = true;\r\n                    } catch (e) {\r\n\r\n                    }\r\n                    if (on && memoryControllerContainer && memoryControllerContainer.id) {\r\n                        on = true;\r\n                    } else {\r\n                        on = false;\r\n                    }\r\n                    let target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_CONTAINER ||\r\n                                    structure.structureType == STRUCTURE_STORAGE) &&\r\n                                (on ? structure.id != memoryControllerContainer.id : true) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 100;\r\n                        }\r\n                    })\r\n                    let targets = [];\r\n                    if (target) {\r\n                        targets.push(target);\r\n                    }\r\n                    targets = targets.concat(\r\n                        // 所有废墟\r\n                        creep.room.find(FIND_RUINS, {\r\n                            filter: (structure) => {\r\n                                return (structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0);\r\n                            }\r\n                        }),\r\n                    );\r\n                    if (targets.length > 0) {\r\n                        source = targets[0];\r\n                    }\r\n                }\r\n\r\n                if (source) {\r\n                    // 从建筑(structure)中拿取资源\r\n                    if (creep.withdraw(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, source, 'Resource');\r\n                    }\r\n                } else {\r\n                    // 找不到可取资源的地方,先去存资源\r\n                    transfer(creep);\r\n                }\r\n            }\r\n        } else {\r\n            // 背包满了,先去存资源\r\n            transfer(creep);\r\n        }\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n};\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.carrier && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.carrier);\r\n    }\r\n    return returnData;\r\n}\r\n\r\nfunction transfer(creep) {\r\n    let roomName = creep.room.name;\r\n\r\n    // 给控制器CONTAINER,运输能量\r\n    if (transferControllerContainer(creep)) return;\r\n    // 给Tower,运输能量\r\n    // if (transferTower(creep)) return;\r\n\r\n    // 找出需要补充能量的建筑\r\n    // let targets = creep.room.find(FIND_STRUCTURES, {\r\n    // \tfilter: (structure) => {\r\n    // \t\t// 找出需要储存能量\r\n    // \t\treturn (structure.structureType == STRUCTURE_TOWER) &&\r\n    // \t\t\tstructure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n    // \t}\r\n    // });\r\n    // if (targets.length < 1) {\r\n\r\n    // }\r\n    let targets = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            // 找出需要储存能量\r\n            return (structure.structureType == STRUCTURE_EXTENSION ||\r\n                    structure.structureType == STRUCTURE_SPAWN) &&\r\n                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n        }\r\n    });\r\n    if (targets.length < 1) {\r\n        targets = creep.room.find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                // 找出需要储存能量\r\n                return (structure.structureType == STRUCTURE_TOWER) &&\r\n                    structure.store.getFreeCapacity(RESOURCE_ENERGY) > structure.store.getCapacity(\r\n                        RESOURCE_ENERGY) / 3;\r\n            }\r\n        });\r\n    }\r\n    if (targets.length < 1) {\r\n        targets = creep.room.find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                // 找出需要储存能量\r\n                return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                    structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n            }\r\n        });\r\n        // 去除能量源区的CONTAINER\r\n        let targets2 = [];\r\n        let memorySource = Memory.rooms[roomName].source.list;\r\n        for (let i = 0; i < targets.length; i++) {\r\n            let on = false;\r\n            // 能量源区的CONTAINER\r\n            for (let val in memorySource) {\r\n                let spaceXYList = memorySource[val].spaceXYList;\r\n                for (let i2 = 0; i2 < spaceXYList.length; i2++) {\r\n                    if (spaceXYList[i2].x == targets[i].pos.x && spaceXYList[i2].y == targets[i].pos.y) {\r\n                        // targets2.splice(i, 1);\r\n                        on = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (on) break;\r\n            }\r\n\r\n            if (!on) {\r\n                targets2.push(targets[i]);\r\n            }\r\n        }\r\n        targets = targets2;\r\n\r\n        // 如果剩余数量大于1，去除控制器区的CONTAINER\r\n        if (targets.length > 1) {\r\n            let targets2 = [];\r\n            let memoryControllerContainer = Memory.rooms[roomName].controller.container;\r\n            for (var i = 0; i < targets.length; i++) {\r\n                // 控制器区的CONTAINER\r\n                if (targets[i].pos.x == memoryControllerContainer.x && targets[i].pos.y == memoryControllerContainer\r\n                    .y) {\r\n\r\n                } else {\r\n                    targets2.push(targets[i]);\r\n                }\r\n            }\r\n            targets = targets2;\r\n        } else {\r\n            if (targets.length == 1) {\r\n                // 当控制器Container储存能量低于总量30%才运送\r\n                if (!(targets[0].store.getFreeCapacity(RESOURCE_ENERGY) > targets[0].store.getCapacity(\r\n                    RESOURCE_ENERGY) / 3)) {\r\n                    targets = [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (targets.length < 1) {\r\n        targets = creep.room.find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                // 找出需要储存能量\r\n                return (structure.structureType == STRUCTURE_STORAGE) &&\r\n                    structure.store.getFreeCapacity() > 0;\r\n            }\r\n        });\r\n    }\r\n    if (targets.length > 0) {\r\n        let resourceGhodium = false;\r\n        for (const resourceType in creep.carry) {\r\n            // console.log(resourceType)\r\n            if (resourceType != RESOURCE_ENERGY) {\r\n                resourceGhodium = true;\r\n                break;\r\n            }\r\n        }\r\n        if (resourceGhodium) {\r\n            let targets2 = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return (structure.structureType == STRUCTURE_STORAGE) &&\r\n                        structure.store.getFreeCapacity() > 0;\r\n                }\r\n            });\r\n            if (targets2.length > 0) {\r\n                let storage = targets2[0];\r\n                // 将资源从该 creep 转移至其他对象\r\n                for (const resourceType in creep.carry) {\r\n                    if (creep.transfer(storage, resourceType) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, storage);\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        // 将资源从该 creep 转移至其他对象\r\n        if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            // 向目标移动\r\n            factory_creep.moveTo(creep, targets[0]);\r\n        }\r\n    } else {\r\n        // 储存能量都满了不用搬运能量,先干其他\r\n        let targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n        if (targets.length > 0) {\r\n            // 建造\r\n            if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, targets[0]);\r\n            }\r\n        }\r\n        if (targets.length < 1) {\r\n            targets = creep.room.find(FIND_STRUCTURES, {\r\n                filter: object => object.hits < object.hitsMax\r\n            });\r\n            targets.sort((a, b) => a.hits - b.hits);\r\n            if (targets.length > 0) {\r\n                // 维修\r\n                if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, targets[0]);\r\n                }\r\n            }\r\n        }\r\n        if (targets.length < 1) {\r\n            // 升级\r\n            if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, creep.room.controller);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n// 控制器Container\r\nfunction transferControllerContainer(creep) {\r\n    let roomName = creep.room.name;\r\n\r\n    // 控制器旁是否有CONTAINER或在建的CONTAINER\r\n    if (!creep.room.controller) return false;\r\n    if (!creep.room.controller.pos) return false;\r\n    let pos = creep.room.controller.pos;\r\n    let found = creep.room.lookAtArea(pos.y - 1, pos.x - 1, pos.y + 1, pos.x + 1, true);\r\n    let found2 = _.filter(found, (f) => f.type == LOOK_CONSTRUCTION_SITES || (f.type == LOOK_STRUCTURES && f\r\n        .structure.structureType == STRUCTURE_CONTAINER));\r\n\r\n    let memoryControllerContainer;\r\n    let on = false;\r\n    try {\r\n        memoryControllerContainer = Memory.rooms[roomName].controller.container;\r\n        if (!memoryControllerContainer.x || !memoryControllerContainer.y) Throw.Error(\r\n            'Memory.rooms[' + roomName + '].controller.container不存在x或y');\r\n        on = true;\r\n    } catch (e) {\r\n        if (!Memory.rooms[roomName].controller) Memory.rooms[roomName].controller = {};\r\n\r\n        if (found2.length > 0) {\r\n            let x = found2[0].x;\r\n            let y = found2[0].y;\r\n            Memory.rooms[roomName].controller = {\r\n                container: {\r\n                    x: x,\r\n                    y: y,\r\n                    id: null,\r\n                    // 运输者的ID列表\r\n                    list: []\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (found2.length < 1 && on && memoryControllerContainer.x && memoryControllerContainer.y) {\r\n        // 如果不存在CONTAINER就清除CONTAINERID\r\n        Memory.rooms[roomName].controller.container.id = null;\r\n\r\n        let x = memoryControllerContainer.x;\r\n        let y = memoryControllerContainer.y;\r\n        // 指定位置创建一个新的 ConstructionSite\r\n        let returnData = creep.room.createConstructionSite(x, y, STRUCTURE_CONTAINER);\r\n        if (returnData != OK) {\r\n            clog('自动建造对应数量的CONTAINER 房间', roomName, ' x', x, ' y', y, returnData);\r\n            Memory.rooms[roomName].controller = {\r\n                container: {\r\n                    x: x,\r\n                    y: y,\r\n                    id: null,\r\n                    // 运输者的ID列表\r\n                    list: []\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (memoryControllerContainer && memoryControllerContainer.id) {\r\n        let TransportationTarget = creep.memory.TransportationTarget;\r\n        // 没有分配运输者,进行分配\r\n        if (memoryControllerContainer.list.length < 1) {\r\n            if (!TransportationTarget) {\r\n                memoryControllerContainer.list.push(creep.name);\r\n                creep.memory.TransportationTarget = {\r\n                    id: memoryControllerContainer.id,\r\n                    type: 'ControllerContainer'\r\n                };\r\n                clog('房间', roomName, ' ', creep.name, '已自动分配给控制器Container', memoryControllerContainer.id);\r\n            }\r\n        }\r\n\r\n        // 运输能量\r\n        if (TransportationTarget && TransportationTarget.id && TransportationTarget.id == memoryControllerContainer\r\n            .id && TransportationTarget.type == 'ControllerContainer') {\r\n            // 检查是否在控制器CONTAINER记录中\r\n            let on = false;\r\n            for (let i2 = 0; i2 < memoryControllerContainer.list.length; i2++) {\r\n                if (creep.name == memoryControllerContainer.list[i2]) {\r\n                    on = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (on) {\r\n                // 合法记录在控制器CONTAINER\r\n                const source = Game.getObjectById(memoryControllerContainer.id);\r\n                // 将资源从该 creep 转移至其他对象\r\n                if (creep.transfer(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    // 向目标移动\r\n                    factory_creep.moveTo(creep, source);\r\n                }\r\n                return true;\r\n            } else {\r\n                // 不合法,移除\r\n                creep.memory.TransportationTarget = null;\r\n            }\r\n        }\r\n    } else {\r\n        // 存在正在建造的CONTAINER,检测是否建造完成\r\n        let x = Memory.rooms[roomName].controller.container.x;\r\n        let y = Memory.rooms[roomName].controller.container.y;\r\n        let targetPos = new RoomPosition(x, y, creep.room.name)\r\n        // CONTAINER\r\n        let found = creep.room.lookForAt(LOOK_STRUCTURES, targetPos);\r\n        if (found.length && found[0].structureType == STRUCTURE_CONTAINER) {\r\n            Memory.rooms[roomName].controller.container.id = found[0].id;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction transferTower(creep) {\r\n    let roomName = creep.room.name;\r\n\r\n    let memoryTower;\r\n    let on = false;\r\n    try {\r\n        memoryTower = Memory.rooms[roomName].Tower;\r\n        on = true;\r\n    } catch (e) {\r\n        if (!Memory.rooms[roomName].Tower) Memory.rooms[roomName].Tower = {};\r\n    }\r\n\r\n    let memoryTowerList;\r\n    on = false;\r\n    try {\r\n        memoryTowerList = Memory.rooms[roomName].Tower.list;\r\n        on = true;\r\n    } catch (e) {\r\n        if (!Memory.rooms[roomName].Tower.list) Memory.rooms[roomName].Tower.list = [];\r\n    }\r\n\r\n    let memoryTowerCarryList;\r\n    on = false;\r\n    try {\r\n        memoryTowerList = Memory.rooms[roomName].Tower.carryList;\r\n        on = true;\r\n    } catch (e) {\r\n        if (!Memory.rooms[roomName].Tower.carryList) Memory.rooms[roomName].Tower.carryList = [];\r\n    }\r\n\r\n    if (on && memoryTower) {\r\n        let TransportationTarget = creep.memory.TransportationTarget;\r\n        // 没有分配运输者,进行分配\r\n        if (memoryTower.list.length < 1) {\r\n            if (!TransportationTarget) {\r\n                memoryTower.list.push(creep.name);\r\n                creep.memory.TransportationTarget = {\r\n                    id: memoryTower.id,\r\n                    type: 'Tower'\r\n                };\r\n                clog('房间', roomName, ' ', creep.name, '已自动分配给Tower', memoryTower.id);\r\n            }\r\n        }\r\n\r\n        // 运输能量\r\n        if (TransportationTarget && TransportationTarget.id && TransportationTarget.id == memoryTower\r\n            .id && TransportationTarget.type == 'Tower') {\r\n            // 检查是否在Tower记录中\r\n            let on = false;\r\n            for (let i2 = 0; i2 < memoryTower.list.length; i2++) {\r\n                if (creep.name == memoryTower.list[i2]) {\r\n                    on = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (on) {\r\n                // 合法记录\r\n                const source = Game.getObjectById(memoryTower.id);\r\n                // 将资源从该 creep 转移至其他对象\r\n                if (creep.transfer(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                    // 向目标移动\r\n                    factory_creep.moveTo(creep, source);\r\n                }\r\n                return true;\r\n            } else {\r\n                // 不合法,移除\r\n                creep.memory.TransportationTarget = null;\r\n            }\r\n        }\r\n    } else {\r\n        // 存在正在建造的CONTAINER,检测是否建造完成\r\n        let x = Memory.rooms[roomName].controller.container.x;\r\n        let y = Memory.rooms[roomName].controller.container.y;\r\n        let targetPos = new RoomPosition(x, y, creep.room.name)\r\n        // CONTAINER\r\n        let found = creep.room.lookForAt(LOOK_STRUCTURES, targetPos);\r\n        if (found.length && found[0].structureType == STRUCTURE_CONTAINER) {\r\n            Memory.rooms[roomName].controller.container.id = found[0].id;\r\n        }\r\n    }\r\n    return false;\r\n}","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 维修者\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        if (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) { // work && 背包为空\r\n            creep.memory.work = false; // 变为 非work状态\r\n            creep.say('🔄 收获');\r\n        }\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) { // 非work状态 && 背包满(空余为0)\r\n            creep.memory.work = true; // 变为 work状态\r\n            creep.say('🚧 维修');\r\n        }\r\n\r\n        let roomName = creep.room.name;\r\n\r\n        if (creep.memory.work) { // work状态的时候\r\n            // 修复受损建筑 优先CONTAINER\r\n            let targets = creep.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                        structure.hits < structure.hitsMax;\r\n                }\r\n            });\r\n            // 可通行墙壁\r\n            if (targets.length < 1) {\r\n                targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType == STRUCTURE_RAMPART) &&\r\n                            structure.hits < structure.hitsMax;\r\n                    }\r\n                });\r\n            }\r\n            // 路\r\n            if (targets.length < 1) {\r\n                targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType == STRUCTURE_ROAD) &&\r\n                            structure.hits < structure.hitsMax;\r\n                    }\r\n                });\r\n            }\r\n            // 墙壁\r\n            if (targets.length < 1) {\r\n                targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType == STRUCTURE_WALL) &&\r\n                            structure.hits < structure.hitsMax;\r\n                    }\r\n                });\r\n            }\r\n            if (targets.length < 1) {\r\n                targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: object => object.hits < object.hitsMax\r\n                });\r\n            }\r\n\r\n            targets.sort((a, b) => a.hits - b.hits);\r\n\r\n            if (targets.length > 0) {\r\n                // 维修\r\n                if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, targets[0]);\r\n                }\r\n            } else {\r\n                // 不用维修了,先干其他\r\n                let targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n                if (targets.length > 0) {\r\n                    // 建造\r\n                    if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, targets[0]);\r\n                    }\r\n                }\r\n                if (targets.length < 1) {\r\n                    // 升级\r\n                    if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, creep.room.controller);\r\n                    }\r\n                }\r\n            }\r\n        } else { // 非work状态的时候， 到source旁边并采集\r\n            const harvests = factory_creep.Harvest.ALL(roomName);\r\n            if (harvests.length < 1) {\r\n                // 采集死完后,自己去采集\r\n                let target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n                if (target) {\r\n                    if (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, target, 'Resource');\r\n                    }\r\n                }\r\n            } else {\r\n                let target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        // 找出有储存能量的container搬运\r\n                        return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                            structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        // return (structure.structureType == STRUCTURE_CONTAINER ||\r\n                        // \t\tstructure.structureType == STRUCTURE_EXTENSION ||\r\n                        // \t\t(structure.structureType == STRUCTURE_SPAWN &&\r\n                        // \t\t\tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 250) ||\r\n                        // \t\tstructure.structureType == STRUCTURE_TOWER) &&\r\n                        // \tstructure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                    }\r\n                });\r\n                if (!target) {\r\n                    // 找不到可搬运的地方,从基地搬运\r\n                    target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_SPAWN) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 200;\r\n                        }\r\n                    });\r\n                }\r\n                if (!target) {\r\n                    // 找不到可搬运的地方,从基地搬运\r\n                    target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_EXTENSION) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        }\r\n                    });\r\n                }\r\n                if (!target) {\r\n                    // 采集死完后,自己去采集\r\n                    target = creep.pos.findClosestByPath(FIND_SOURCES);\r\n                    if (target) {\r\n                        if (creep.harvest(target) == ERR_NOT_IN_RANGE) {\r\n                            // 向目标移动\r\n                            factory_creep.moveTo(creep, target, 'Resource');\r\n                        }\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (target) {\r\n                    // 从建筑(structure)中拿取资源\r\n                    if (creep.withdraw(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, target, 'Resource');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n};\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.repairer && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.repairer);\r\n    }\r\n    return returnData;\r\n}","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 近战和远程\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        if (creep.memory.role == globalData.nearDefender) {\r\n            nearDefenderRun(creep);\r\n        } else if (creep.memory.role == globalData.farDefender) {\r\n            farDefenderRun(creep);\r\n        }\r\n    },\r\n    ALLNearDefender: (...e) => {\r\n        return allNearDefender(...e);\r\n    },\r\n    ALLFarDefender: (...e) => {\r\n        return allFarDefender(...e);\r\n    }\r\n}\r\n\r\nfunction allNearDefender(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.nearDefender && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.nearDefender);\r\n    }\r\n    return returnData;\r\n}\r\n\r\nfunction allFarDefender(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.farDefender && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.farDefender);\r\n    }\r\n    return returnData;\r\n}\r\n\r\nfunction nearDefenderRun(creep) {\r\n    const target = creep.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n    if (target) {\r\n        // 使用近战攻击\r\n        if (creep.attack(target) == ERR_NOT_IN_RANGE) {\r\n            factory_creep.moveTo(creep, target);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction farDefenderRun(creep) {\r\n    const target = creep.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n    if (target) {\r\n        // 远程攻击其他 creep 或者建筑\r\n        if (creep.rangedAttack(target) == ERR_NOT_IN_RANGE) {\r\n            factory_creep.moveTo(creep, target);\r\n        }\r\n    }\r\n\r\n    // const targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 3);\r\n\r\n    // if (targets.length > 0) {\r\n    // \t// 3 格范围内的所有敌方 creep 和建筑进行攻击\r\n    // \t// creep.rangedMassAttack();\r\n\r\n    // \t// 远程攻击其他 creep 或者建筑\r\n    // \tif (creep.rangedAttack(targets[0]) == ERR_NOT_IN_RANGE) {\r\n    // \t\tfactory_creep.moveTo(creep, targets[0]);\r\n    // \t}\r\n    // }\r\n\r\n}","import factory_creep from \"../../factory/creep.js\";\r\n\r\n// 治疗\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep) {\r\n        const target = creep.pos.findClosestByRange(FIND_MY_CREEPS, {\r\n            filter: function (object) {\r\n                return object.hits < object.hitsMax;\r\n            }\r\n        });\r\n        if (target) {\r\n            // 治疗\r\n            if (creep.heal(target) == ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, target);\r\n            }\r\n        }\r\n\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n}\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.theHealer && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.theHealer);\r\n    }\r\n    return returnData;\r\n}","import factory_spawn from \"../../factory/spawn.js\";\r\nimport factory_room from \"../../factory/room.js\";\r\n\r\nimport factory_creep from \"../../factory/creep.js\";\r\n\r\n// 占领\r\nexport default {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function (creep, roomName) {\r\n        roomName = 'W47S53';\r\n        // 需要拥有CLAIM部件\r\n        // Game.spawns.Spawn1.spawnCreep([WORK, CARRY, MOVE], 'ee1', { memory: {}})\r\n        // {\r\n        // let creep = Game.creeps['ee1'];\r\n        // creep.moveTo(new RoomPosition(25, 25, 'W48S54'));\r\n        // let creep = Game.creeps['ee1'];\r\n        // let room = Game.rooms['W48S54'];\r\n        // if (creep.signController(room.controller, \"I'm going to claim this room in a few days.\") ==\r\n        // \tERR_NOT_IN_RANGE) {\r\n        // \tcreep.moveTo(room.controller);\r\n        // }\r\n\r\n        // factory_creep.Occupy.run(Game.creeps['builder54894683'],'W48S54');\r\n\r\n        // 如果指定需要占领房间名称,覆盖原来的\r\n        if (roomName) {\r\n            creep.memory.occupyRoomName = roomName;\r\n        }\r\n        // 获取需要占领房间名称\r\n        let occupyRoomName = creep.memory.occupyRoomName;\r\n        if (!occupyRoomName) {\r\n            // 获取不到不再执行程序\r\n            return;\r\n        } else {\r\n            roomName = occupyRoomName;\r\n        }\r\n\r\n        let room = Game.rooms[roomName];\r\n\r\n        // 如果该房间不存在就先往房间走\r\n        if (!room) {\r\n            factory_creep.moveTo(creep, new RoomPosition(43, 17, roomName));\r\n        } else {\r\n            // 如果房间存在了就说明已经进入了该房间\r\n            // 移动到房间的控制器并占领\r\n            if (creep.claimController(room.controller) == ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, room.controller)\r\n            }\r\n\r\n            // 预定控制器\r\n            // if (creep.reserveController(room.controller) == ERR_NOT_IN_RANGE) {\r\n            // \tcreep.moveTo(room.controller);\r\n            // }\r\n\r\n            // 对控制器签名\r\n            // if (creep.signController(room.controller, \"I'm going to claim this room in a few days.\") ==\r\n            if (creep.signController(room.controller, \"peaceful development.\") ==\r\n                ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, room.controller);\r\n            }\r\n\r\n        }\r\n\r\n        // factory_spawn.nameGet(spawnName).spawnCreep([WORK, CARRY, MOVE, CLAIM],\r\n        // \t'Occupy1号', {\r\n        // \t\tmemory: {\r\n        // \t\t\trole: '',\r\n        // \t\t\tSpecialActions: {\r\n        // \t\t\t\tcode: 'Occupy',\r\n        // \t\t\t\tmgs: 'W48S54'\r\n        // \t\t\t},\r\n        // \t\t}\r\n        // \t});\r\n\r\n        // 因为我们的 claimer 已经在房间里了\r\n        // 所以我们可以正常的获取该房间的对象。\r\n        // const target = Game.getObjectById('spawn工地的id')\r\n\r\n        // 获取能量的逻辑\r\n        // ...\r\n\r\n        // 建造 spawn\r\n        // if(target) {\r\n        //     if(creep.build(target) == ERR_NOT_IN_RANGE) {\r\n        //         // reusePath 代表缓存的距离，默认为 5\r\n        //         creep.moveTo(target, { reusePath: 50 })\r\n        //     }\r\n        // }\r\n\r\n\r\n    },\r\n    ALL: (...e) => {\r\n        return all(...e);\r\n    }\r\n}\r\n\r\n\r\nfunction all(roomName) {\r\n    let returnData;\r\n\r\n    if (roomName) {\r\n        returnData = _.filter(Game.creeps, (creep) => (creep.memory.role == globalData.occupier && creep.memory\r\n            .roomName == roomName));\r\n    } else {\r\n        returnData = _.filter(Game.creeps, (creep) => creep.memory.role == globalData.occupier);\r\n    }\r\n    return returnData;\r\n}","/*\r\n 被动指派任务-》小兵完成当前任务来领取新的任务-》优先级计算是否允许领取\r\n 主动指派任务给空的小兵-》优先级\r\n 优先级，计算距离，小兵类型，小兵属性\r\n 建立一个有空小兵的列表，第一次运行初始化程序中，任务中心主动找出所有空闲小兵，然后根据优先级进行指派\r\n 任务中心。第一步：建立任务，第二步：派发任务\r\n 下面各种执行任务（塔，爬爬等）\r\n*/\r\n\r\nimport factory_task from \"../factory/task.js\";\r\n\r\nimport factory_creep_Harvest from \"../factory/creep/Harvest.js\";\r\nimport factory_creep_Upgrader from \"../factory/creep/Upgrader.js\";\r\nimport factory_creep_Builder from \"../factory/creep/Builder.js\";\r\nimport factory_creep_Carrier from \"../factory/creep/Carrier.js\";\r\nimport factory_creep_Repairer from \"../factory/creep/Repairer.js\";\r\nimport factory_creep_Defender from \"../factory/creep/Defender.js\";\r\nimport factory_creep_TheHealer from \"../factory/creep/TheHealer.js\";\r\nimport factory_creep_Occupier from \"../factory/creep/Occupier.js\";\r\n\r\n/**\r\n * 挂载 请求任务\r\n */\r\nCreep.prototype.requestTask = function () {\r\n    return assignTask(this);\r\n}\r\n\r\n/**\r\n * 控制器 任务\r\n */\r\nexport default function () {\r\n\r\n    // 建立任务\r\n    addTask();\r\n\r\n    // 派发任务\r\n    // dispatchTasks();\r\n\r\n    // 执行任务\r\n    // performTasks();\r\n}\r\n\r\n// 请求指派任务\r\nfunction assignTask(creep) {\r\n\r\n}\r\n\r\n// 建立添加任务\r\nfunction addTask() {\r\n    _.forEach(Game.rooms, room => {\r\n        let roomName = room.name;\r\n\r\n        const harvests = factory_creep_Harvest.ALL(roomName);\r\n        const upgraders = factory_creep_Upgrader.ALL(roomName);\r\n        const builders = factory_creep_Builder.ALL(roomName);\r\n        const carriers = factory_creep_Carrier.ALL(roomName);\r\n        const repairers = factory_creep_Repairer.ALL(roomName);\r\n        const nearDefenders = factory_creep_Defender.ALLNearDefender(roomName);\r\n        const farDefenders = factory_creep_Defender.ALLFarDefender(roomName);\r\n        const theHealers = factory_creep_TheHealer.ALL(roomName);\r\n        const occupiers = factory_creep_Occupier.ALL(roomName);\r\n\r\n        // 我方血少的CREEPS\r\n        const myCreepHitsF = room.find(FIND_MY_CREEPS, {\r\n            filter: function (object) {\r\n                return object.hits < object.hitsMax;\r\n            }\r\n        });\r\n        myCreepHitsF.sort((a, b) => a.hits - b.hits);\r\n\r\n        // 敌方CREEPS\r\n        const hostileCreep = room.find(FIND_HOSTILE_CREEPS);\r\n\r\n        // 所有掉落的资源\r\n        const droppedResources = room.find(FIND_DROPPED_RESOURCES);\r\n\r\n        // 墓碑\r\n        const tombstones = room.find(FIND_TOMBSTONES, {\r\n            filter: (structure) => {\r\n                return (structure.store.getUsedCapacity() > 0);\r\n            }\r\n        });\r\n        tombstones.sort((a, b) => a.ticksToDecay - b.ticksToDecay);\r\n\r\n        // 控制器升级\r\n        let controller = room.controller;\r\n\r\n        // 控制器CONTAINER能量供给运输\r\n\r\n        // 能量源采集\r\n        const sources = room.find(FIND_SOURCES);\r\n\r\n        // 能量源CONTAINER能量搬运\r\n\r\n        // 矿采集\r\n        const minerals = room.find(FIND_MINERALS);\r\n\r\n        // 矿CONTAINER资源搬运\r\n\r\n\r\n    });\r\n}\r\n\r\n// 派发任务\r\nfunction dispatchTasks() {\r\n    // 寻找空闲Creep\r\n    _.forEach(Game.creeps, creep => {\r\n        let roomName = creep.room.name;\r\n\r\n    });\r\n}\r\n\r\n// 执行任务\r\nfunction performTasks() {\r\n    // 正在执行任务队列\r\n    let performList = [];\r\n    try {\r\n        performList = factory_task.perform.getALL();\r\n    } catch (e) {\r\n        //TODO handle the exception\r\n    }\r\n\r\n    for (let val in performList) {\r\n        switch (val.type) {\r\n            case globalData.havester:\r\n                // 采集\r\n                break;\r\n            case globalData.upgrader:\r\n                // 升级\r\n                break;\r\n            case globalData.builder:\r\n                // 建造\r\n                break;\r\n            case globalData.carrier:\r\n                // 运输\r\n                break;\r\n            case globalData.repairer:\r\n                // 维修\r\n                break;\r\n            case globalData.defender:\r\n                // 防御\r\n                break;\r\n            case globalData.attack:\r\n                // 攻击\r\n                break;\r\n            case globalData.treat:\r\n                // 治疗\r\n                break;\r\n            default:\r\n                clog('无效任务', task);\r\n        }\r\n    }\r\n}","import factory_spawn from \"../factory/spawn.js\";\r\nimport factory_room from \"../factory/room.js\";\r\n\r\nexport default {\r\n    run: (roomName) => {\r\n        let room = factory_room.nameGet(roomName);\r\n\r\n        var hostiles = room.find(FIND_HOSTILE_CREEPS);\r\n        if (hostiles.length > 0) {\r\n            // 统计分别有哪些用户\r\n            let usernameList = [];\r\n            _.forEach(hostiles, hostile => {\r\n                usernameList.push(hostile.owner.username);\r\n            });\r\n            // 去重\r\n            usernameList = _.uniq(usernameList);\r\n            let usernameListString = '';\r\n            _.forEach(usernameList, username => {\r\n                usernameListString += '【' + username + '】';\r\n            });\r\n            Utils.notify(`发现用户${usernameListString}派CREEPS到【${roomName}】房间中`);\r\n        }\r\n\r\n        // 查找针对您的 creep 和建筑的所有敌对行动\r\n        let eventLog = room.getEventLog();\r\n        let attackEvents = _.filter(eventLog, {\r\n            event: EVENT_ATTACK\r\n        });\r\n        let attackMy = false;\r\n        let textAll = '';\r\n        attackEvents.forEach(event => {\r\n            // 事件者ID\r\n            let objectId = event.objectId;\r\n            // 造成的 hit 伤害量\r\n            let damage = event.data.damage;\r\n            // 目标对象ID\r\n            let targetId = event.data.targetId;\r\n\r\n\r\n            let target = Game.getObjectById(targetId);\r\n            let structureType, x, y;\r\n            if (target) {\r\n                try {\r\n                    x = target.pos.x;\r\n                    y = target.pos.y;\r\n                } catch (e) {\r\n                    //TODO handle the exception\r\n                }\r\n                try {\r\n                    structureType = target.structureType;\r\n                } catch (e) {\r\n                    //TODO handle the exception\r\n                }\r\n            }\r\n            // console.log(JSON.stringify(Game.getObjectById('')))\r\n\r\n            let initiate = Game.getObjectById(objectId);\r\n            let username;\r\n            if (initiate) {\r\n                try {\r\n                    username = initiate.owner.username;\r\n                } catch (e) {\r\n                    //TODO handle the exception\r\n                }\r\n            }\r\n\r\n            if (target && target.my) {\r\n                attackMy = true;\r\n                clog('房间' + roomName, '正在受到伤害', JSON.stringify(event));\r\n\r\n                let text = '【';\r\n                // if (type) text += '类型' + type + ' ';\r\n                if (structureType) text += 'structureType' + structureType + ' ';\r\n                if (damage) text += '受到伤害量' + damage + ' ';\r\n                if (x) text += 'x' + x + ' ';\r\n                if (y) text += 'y' + y + ' ';\r\n                if (username) text += '对方用户名称' + username + ' ';\r\n                text += '】';\r\n                textAll += text;\r\n\r\n                if (!Memory.attackEventsList) Memory.attackEventsList = [];\r\n                let time = Game.time;\r\n                Memory.attackEventsList.push({\r\n                    targetId: targetId,\r\n                    time: time\r\n                })\r\n            }\r\n        });\r\n\r\n        let objectDestroyedMy = false;\r\n        // 一个游戏对象被摧毁或是被消灭\r\n        let objectDestroyedEvents = _.filter(eventLog, {\r\n            event: EVENT_OBJECT_DESTROYED\r\n        });\r\n        if (objectDestroyedEvents.length > 0) {\r\n            objectDestroyedEvents.forEach(event => {\r\n                // 事件者ID\r\n                let objectId = event.objectId;\r\n\r\n                let time = Game.time;\r\n                if (!Memory.attackEventsList) Memory.attackEventsList = [];\r\n                let attackEventsList = Memory.attackEventsList;\r\n                for (var i = 0; i < attackEventsList.length; i++) {\r\n                    if (attackEventsList[i].targetId == objectId) {\r\n                        if (time - attackEventsList[i].time <= 5 && event.data.type != 'creep') {\r\n                            objectDestroyedMy = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // 清理超时的记录\r\n                let attackEventsList2 = [];\r\n                for (var i = 0; i < attackEventsList.length; i++) {\r\n                    if (time - attackEventsList[i].time <= 5) {\r\n                        attackEventsList2.push(attackEventsList[i]);\r\n                    }\r\n                }\r\n                Memory.attackEventsList = attackEventsList2;\r\n            });\r\n        }\r\n\r\n        if (attackEvents.length > 0 && attackMy) {\r\n            Utils.notify(`【${roomName}】房间,正在遭受攻击 ` + textAll);\r\n        }\r\n\r\n        if (objectDestroyedMy) {\r\n            let on = false;\r\n            if (room.name == globalData.rooms[0].name && globalData.rooms[0].AutomaticSecurity) {\r\n                on = true;\r\n            } else if (room.name == globalData.rooms[1].name && globalData.rooms[1]\r\n                .AutomaticSecurity) {\r\n                on = true;\r\n            } else if (room.name == globalData.rooms[2].name && globalData.rooms[2]\r\n                .AutomaticSecurity) {\r\n                on = true;\r\n            }\r\n            if (on) {\r\n                // 开启安全模式\r\n                let returnData = room.controller.activateSafeMode();\r\n                if (returnData == OK) {\r\n                    Utils.notify(`【${roomName}】房间,开启安全模式【成功】`);\r\n                } else if (returnData == ERR_BUSY) {\r\n                    Utils.notify(`【${roomName}】房间,开启安全模式【失败】,已经有其他房间处于安全模式下了`);\r\n                } else if (returnData == ERR_NOT_ENOUGH_RESOURCES) {\r\n                    Utils.notify(`【${roomName}】房间,开启安全模式【失败】,没有足够的可用激活次数`);\r\n                } else if (returnData == ERR_TIRED) {\r\n                    Utils.notify(\r\n                        `【${roomName}】房间,开启安全模式【失败】,上一个安全模式仍在冷却中，或者控制器正处于 upgradeBlocked 状态，或者控制器的降级计时器已经超过了 50% + 5000 tick 甚至更久`\r\n                    );\r\n                } else {\r\n                    Utils.notify(`【${roomName}】房间,开启安全模式【失败】,未知原因${returnData}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import factory_spawn from \"../factory/spawn.js\";\r\nimport factory_room from \"../factory/room.js\";\r\n\r\nexport default {\r\n    run: (roomName) => {\r\n        let room = factory_room.nameGet(roomName);\r\n\r\n        const targets = room.find(FIND_MY_STRUCTURES, {\r\n            filter: (structure) => {\r\n                return structure.structureType == STRUCTURE_TOWER;\r\n            }\r\n        });\r\n        if (targets.length) {\r\n            const storages = room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return structure.structureType == STRUCTURE_STORAGE;\r\n                }\r\n            });\r\n            let storageClosestTower;\r\n            if (storages.length > 0) {\r\n                storageClosestTower = storages[0].pos.findClosestByRange(FIND_MY_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return structure.structureType == STRUCTURE_TOWER;\r\n                    }\r\n                });\r\n            }\r\n            _.forEach(targets, target => {\r\n                if (storageClosestTower && storageClosestTower.id == target.id) {\r\n                    work(target, 1);\r\n                } else {\r\n                    work(target);\r\n                }\r\n\r\n                // const source = Game.getObjectById('65b28bef2bc6bc6a1b1bbf53');\r\n                // target.attack(source);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction work(tower, type) {\r\n    // 攻击 先攻击治疗\r\n    let closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS, {\r\n        filter: (structure) => {\r\n            let on = false;\r\n            let body = structure.body;\r\n            for (var i = 0; i < body.length; i++) {\r\n                if (body[i].type == HEAL) {\r\n                    on = true;\r\n                    break\r\n                }\r\n            }\r\n            return on;\r\n        }\r\n    });\r\n    if (!closestHostile) {\r\n        closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n    }\r\n    if (closestHostile) {\r\n        tower.attack(closestHostile);\r\n        return\r\n    }\r\n\r\n    // 治疗\r\n    let closestMYCreep = tower.room.find(FIND_MY_CREEPS, {\r\n        filter: function (object) {\r\n            return object.hits < object.hitsMax;\r\n        }\r\n    });\r\n\r\n    closestMYCreep.sort((a, b) => a.hits - b.hits);\r\n\r\n    if (closestMYCreep.length > 0) {\r\n        // 治疗\r\n        tower.heal(closestMYCreep[0]);\r\n        return;\r\n    }\r\n\r\n    if (type == 1) {\r\n        // 维修\r\n        let targets = tower.room.find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                    structure.hits < structure.hitsMax;\r\n            }\r\n        });\r\n        // 可通行墙壁\r\n        if (targets.length < 1) {\r\n            targets = tower.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return (structure.structureType == STRUCTURE_RAMPART) &&\r\n                        structure.hits < structure.hitsMax &&\r\n                        structure.hits < 100 * 10000 * 1;\r\n                }\r\n            });\r\n        }\r\n        // 路\r\n        if (targets.length < 1) {\r\n            targets = tower.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return (structure.structureType == STRUCTURE_ROAD) &&\r\n                        structure.hits < structure.hitsMax;\r\n                }\r\n            });\r\n        }\r\n        // 墙壁\r\n        if (targets.length < 1) {\r\n            targets = tower.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return (structure.structureType == STRUCTURE_WALL) &&\r\n                        structure.hits < structure.hitsMax &&\r\n                        structure.hits < 100 * 10000 * 1;\r\n                }\r\n            });\r\n        }\r\n        if (targets.length < 1) {\r\n            targets = tower.room.find(FIND_STRUCTURES, {\r\n                filter: (structure) => {\r\n                    return structure.hits < structure.hitsMax &&\r\n                        structure.structureType != STRUCTURE_WALL &&\r\n                        structure.structureType != STRUCTURE_RAMPART;\r\n                }\r\n            });\r\n        }\r\n        targets.sort((a, b) => a.hits - b.hits);\r\n        if (targets.length > 0) {\r\n            tower.repair(targets[0]);\r\n        }\r\n    } else {\r\n\r\n    }\r\n\r\n}","import factory_Secure from \"../factory/Secure.js\";\r\nimport factory_Tower from \"../factory/Tower.js\";\r\n\r\nimport factory_initialization from \"../initialization.js\";\r\nimport factory_room from \"../factory/room.js\";\r\n\r\nimport factory_creep_Harvest from \"../factory/creep/Harvest.js\";\r\nimport factory_creep_Upgrader from \"../factory/creep/Upgrader.js\";\r\nimport factory_creep_Builder from \"../factory/creep/Builder.js\";\r\nimport factory_creep_Carrier from \"../factory/creep/Carrier.js\";\r\nimport factory_creep_Repairer from \"../factory/creep/Repairer.js\";\r\nimport factory_creep_Defender from \"../factory/creep/Defender.js\";\r\nimport factory_creep_TheHealer from \"../factory/creep/TheHealer.js\";\r\nimport factory_creep_Occupier from \"../factory/creep/Occupier.js\";\r\n\r\nimport factory_Build from \"../factory/Build.js\";\r\n\r\n// 控制器 房间\r\nexport default function () {\r\n    _.forEach(Game.rooms, room => {\r\n        let roomName = room.name;\r\n\r\n        // 安全\r\n        factory_Secure.run(roomName);\r\n        // 塔\r\n        factory_Tower.run(roomName);\r\n\r\n        let eventLog = room.getEventLog();\r\n        // 建造完成 邮件提示\r\n        let buildEvents = _.filter(eventLog, {\r\n            event: EVENT_BUILD\r\n        });\r\n        if (buildEvents.length > 0) {\r\n            buildEvents.forEach(event => {\r\n                let target = Game.getObjectById(event.data.targetId);\r\n                if (target && target.progress && target.progressTotal) {\r\n                    if (target.progress + event.data.amount >= target.progressTotal) {\r\n                        clog('房间' + roomName, '建造完成', JSON.stringify(event));\r\n                        Utils.notify(\r\n                            `【${roomName}】房间,id【${event.data.targetId}】${event.data.structureType} x${event.data.x} y${event.data.y}【建造】【完成】`\r\n                        );\r\n                        if (event.data.structureType == STRUCTURE_SPAWN) {\r\n                            // 更新数据\r\n                            factory_initialization.iniglobalData();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // 一个游戏对象被摧毁或是被消灭 邮件提示\r\n        let objectDestroyedEvents = _.filter(eventLog, {\r\n            event: EVENT_OBJECT_DESTROYED\r\n        });\r\n        if (objectDestroyedEvents.length > 0) {\r\n            objectDestroyedEvents.forEach(event => {\r\n                clog('房间' + roomName, '一个游戏对象被摧毁或是被消灭', JSON.stringify(event));\r\n                if (event.data.type != 'creep') {\r\n                    Utils.notify(\r\n                        `【${roomName}】房间,id【${event.objectId}】${event.data.type}【被摧毁或是被消灭】`\r\n                    );\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        // 建筑（自动建造等）\r\n        factory_Build.run(roomName);\r\n\r\n        // 房间显示文本\r\n        roomVisual(roomName);\r\n    });\r\n\r\n    let roomName = globalData.rooms[0].name;\r\n    let roomName2 = globalData.rooms[1].name;\r\n\r\n    // CONTAINER+EXTENSION+STORAGE能量统计\r\n    containerExtensionStorageEnergyStat(roomName);\r\n\r\n    // 能量源区Container记录管理\r\n    sourceContainer(roomName);\r\n    // 控制器Container记录管理\r\n    controllerContainer(roomName);\r\n    // 采集建造CONTAINER记录管理\r\n    harvestBuildCONTAINER(roomName);\r\n\r\n    // 临时外部房间,升级\r\n    upgraderOuterRoom(roomName2);\r\n    // 临时外部房间,建造\r\n    // builderOuterRoom(roomName2);\r\n}\r\n\r\n\r\n// 房间显示文本\r\nfunction roomVisual(roomName) {\r\n    let room = factory_room.nameGet(roomName);\r\n\r\n    const harvests = factory_creep_Harvest.ALL(roomName);\r\n    const upgraders = factory_creep_Upgrader.ALL(roomName);\r\n    const builders = factory_creep_Builder.ALL(roomName);\r\n    const carriers = factory_creep_Carrier.ALL(roomName);\r\n    const repairers = factory_creep_Repairer.ALL(roomName);\r\n    const nearDefenders = factory_creep_Defender.ALLNearDefender(roomName);\r\n    const farDefenders = factory_creep_Defender.ALLFarDefender(roomName);\r\n    const theHealers = factory_creep_TheHealer.ALL(roomName);\r\n    const occupiers = factory_creep_Occupier.ALL(roomName);\r\n\r\n    // 查看控制器等级\r\n    const controller_level = room.controller.level;\r\n\r\n    room.visual.text('控制器等级:' + controller_level, 1, 1, {\r\n        align: 'left',\r\n    });\r\n\r\n    room.visual.text('采集者:' + harvests.length, 1, 2, {\r\n        align: 'left',\r\n    });\r\n    room.visual.text('升级者:' + upgraders.length, 1, 3, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('建造者:' + builders.length, 1, 4, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('运输者:' + carriers.length, 1, 5, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('维修者:' + repairers.length, 1, 6, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('近战者:' + nearDefenders.length, 1, 7, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('远战者:' + farDefenders.length, 1, 8, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('治疗者:' + theHealers.length, 1, 9, {\r\n        align: 'left'\r\n    });\r\n    room.visual.text('占领者:' + occupiers.length, 1, 10, {\r\n        align: 'left'\r\n    });\r\n}\r\n\r\n// 能量源区Container记录管理\r\nfunction sourceContainer(roomName) {\r\n    let memorySource;\r\n    let on = false;\r\n    // 如果没有合法记录会不存在harvestSourceID,报错需要捕获\r\n    try {\r\n        memorySource = Memory.rooms[roomName].source.list;\r\n        on = true;\r\n    } catch (e) {\r\n        //TODO handle the exception\r\n    }\r\n    // 检查是否在能量源区CONTAINER中记录creep是否还存活\r\n    if (on && memorySource) {\r\n        for (let val in memorySource) {\r\n            let spaceXYList = memorySource[val].spaceXYList;\r\n            for (let i = 0; i < spaceXYList.length; i++) {\r\n                let spaceXYListList2 = [];\r\n                for (let i2 = 0; i2 < spaceXYList[i].list.length; i2++) {\r\n                    let on = false;\r\n                    _.forEach(Game.creeps, (creep) => {\r\n                        if (creep.name == spaceXYList[i].list[i2]) {\r\n                            on = true;\r\n                            return false;\r\n                        }\r\n                    })\r\n                    if (on) {\r\n                        let creepName = spaceXYList[i].list[i2];\r\n                        let containerID = spaceXYList[i].containerID;\r\n                        let TransportationTarget = Game.creeps[creepName].memory.TransportationTarget;\r\n                        if (TransportationTarget) {\r\n                            if (TransportationTarget.id == containerID && TransportationTarget.type == 'Source') {\r\n                                spaceXYListList2.push(creepName);\r\n                            } else {\r\n                                Game.creeps[creepName].memory.TransportationTarget = null;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Memory.rooms[roomName].source.list[val].spaceXYList[i].list = spaceXYListList2;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 控制器Container记录管理\r\nfunction controllerContainer(roomName) {\r\n    let memoryControllerContainer;\r\n    let on = false;\r\n    try {\r\n        memoryControllerContainer = Memory.rooms[roomName].controller.container;\r\n        on = true;\r\n    } catch (e) {\r\n        //TODO handle the exception\r\n    }\r\n    if (on && memoryControllerContainer) {\r\n        if (memoryControllerContainer.list && memoryControllerContainer.list.length > 0) {\r\n            // 检查是否在控制器CONTAINER中记录creep是否还存活\r\n            let memoryControllerContainerList2 = [];\r\n            for (let i = 0; i < memoryControllerContainer.list.length; i++) {\r\n                let on = false;\r\n                _.forEach(Game.creeps, (creep) => {\r\n                    if (creep.name == memoryControllerContainer.list[i]) {\r\n                        on = true;\r\n                        return false;\r\n                    }\r\n                })\r\n                if (on) {\r\n                    let creepName = memoryControllerContainer.list[i];\r\n                    let containerID = memoryControllerContainer.id;\r\n                    let TransportationTarget = Game.creeps[creepName].memory.TransportationTarget;\r\n                    if (TransportationTarget) {\r\n                        if (TransportationTarget.id == containerID && TransportationTarget.type ==\r\n                            'ControllerContainer') {\r\n                            memoryControllerContainerList2.push(creepName);\r\n                        } else {\r\n                            Game.creeps[creepName].memory.TransportationTarget = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Memory.rooms[roomName].controller.container.list = memoryControllerContainerList2;\r\n        }\r\n    }\r\n}\r\n\r\n// 采集建造CONTAINER记录管理\r\nfunction harvestBuildCONTAINER(roomName) {\r\n    let harvestBuildCONTAINERList;\r\n    let on = false;\r\n    try {\r\n        if (!Memory.rooms[roomName].source.harvestBuildCONTAINERList) Memory.rooms[roomName].source\r\n            .harvestBuildCONTAINERList = {};\r\n        harvestBuildCONTAINERList = Memory.rooms[roomName].source.harvestBuildCONTAINERList;\r\n        on = true;\r\n    } catch (e) {\r\n        //TODO handle the exception\r\n    }\r\n\r\n    if (on && _.size(harvestBuildCONTAINERList) > 0) {\r\n        // 检查是否记录中的creep是否还存活\r\n        let harvestBuildCONTAINERList2 = {};\r\n        for (let i in harvestBuildCONTAINERList) {\r\n            let on = false;\r\n            _.forEach(Game.creeps, (creep) => {\r\n                if (creep.name == i) {\r\n                    on = true;\r\n                    return false;\r\n                }\r\n            })\r\n            if (on) harvestBuildCONTAINERList2[i] = harvestBuildCONTAINERList[i];\r\n        }\r\n        Memory.rooms[roomName].source.harvestBuildCONTAINERList = harvestBuildCONTAINERList2;\r\n\r\n    }\r\n}\r\n\r\n// CONTAINER+EXTENSION+STORAGE能量统计\r\nfunction containerExtensionStorageEnergyStat(roomName) {\r\n    let targets = factory_room.nameGet(roomName).find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            return (structure.structureType == STRUCTURE_CONTAINER ||\r\n                    structure.structureType == STRUCTURE_EXTENSION ||\r\n                    structure.structureType == STRUCTURE_STORAGE) &&\r\n                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n        }\r\n    });\r\n    let targetsStore = [];\r\n    let total = 0;\r\n    for (var i = 0; i < targets.length; i++) {\r\n        let energy = targets[i].store[RESOURCE_ENERGY];\r\n        total += parseInt(energy ? energy : 0);\r\n        targetsStore.push(energy);\r\n    }\r\n    if (parseInt(total) < 500) {\r\n        clog('房间' + roomName, 'CONTAINER+EXTENSION+STORAGE能量' + total + '不足500');\r\n        Utils.notify(\r\n            `【${roomName}】房间【CONTAINER+EXTENSION+STORAGE能量${total}不足500】`\r\n        );\r\n    }\r\n    Memory.rooms[roomName].containerExtensionStorageEnergyStat = total;\r\n}\r\n\r\n// 临时外部房间,升级\r\nfunction upgraderOuterRoom(roomName) {\r\n    let room = factory_room.nameGet(roomName);\r\n\r\n    let creepName = '';\r\n    const upgraders = factory_creep.Upgrader.ALL(1);\r\n    if (upgraders < 1) return;\r\n    // 是否已存在\r\n    _.forEach(upgraders, upgrader => {\r\n        if (upgrader.memory.upgraderOuterRoom) {\r\n            creepName = upgrader.name;\r\n            return false;\r\n        }\r\n    })\r\n    // 找新的\r\n    if (!creepName) {\r\n        _.forEach(upgraders, upgrader => {\r\n            if (!upgrader.memory.upgraderOuterRoom) {\r\n                upgrader.memory.upgraderOuterRoom = roomName;\r\n                creepName = upgrader.name;\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n    let creep = Game.creeps[creepName];\r\n\r\n    if (!room) {\r\n        factory_creep.moveTo(creep, new RoomPosition(43, 17, roomName));\r\n    } else {\r\n        if (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) { // 升级状态&&能量不足的时候，变为采集者\r\n            creep.memory.work = false;\r\n            creep.say('🔄 采集');\r\n        }\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) { // 非升级状态&&能量满的时候，变为升级状态\r\n            creep.memory.work = true;\r\n            creep.say('⚡ 升级');\r\n        }\r\n\r\n        if (creep.memory.work) { // 升级状态，找到控制器并升级 + 可视化\r\n            if (creep.upgradeController(room.controller) == ERR_NOT_IN_RANGE) {\r\n                factory_creep.moveTo(creep, room.controller);\r\n            }\r\n        } else {\r\n            // 掉落的资源\r\n            let targets = room.find(FIND_DROPPED_RESOURCES);\r\n            if (targets.length > 0) {\r\n                // 捡起一个物品 (如捡起一些能量)\r\n                if (creep.pickup(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    // 向目标移动\r\n                    factory_creepmoveTo(creep, targets[0], 'Resource');\r\n                }\r\n            } else {\r\n                targets = targets.concat(\r\n                    // 所有墓碑\r\n                    room.find(FIND_TOMBSTONES, {\r\n                        filter: (structure) => {\r\n                            return (structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0);\r\n                        }\r\n                    }),\r\n                    // 所有废墟\r\n                    room.find(FIND_RUINS, {\r\n                        filter: (structure) => {\r\n                            return (structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0);\r\n                        }\r\n                    }),\r\n                );\r\n                if (targets.length < 1) {\r\n                    let sources = room.find(FIND_SOURCES);\r\n                    // 采集能量\r\n                    if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, sources[0], 'Resource');\r\n                    }\r\n                    return;\r\n                }\r\n                if (targets.length < 1) {\r\n                    targets = factory_room.nameGet(roomName).find(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        }\r\n                    });\r\n                }\r\n                if (targets.length > 0) {\r\n                    // 从建筑(structure)中拿取资源\r\n                    if (creep.withdraw(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, targets[0], 'Resource');\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n// 临时外部房间,建造\r\nfunction builderOuterRoom(roomName) {\r\n    let room = factory_room.nameGet(roomName);\r\n\r\n    let creepName = '';\r\n    const builders = factory_creep.Builder.ALL(1);\r\n    if (builders < 1) return;\r\n    // 是否已存在\r\n    _.forEach(builders, builder => {\r\n        if (builder.memory.builderOuterRoom) {\r\n            creepName = builder.name;\r\n            return false;\r\n        }\r\n    })\r\n    // 找新的\r\n    if (!creepName) {\r\n        _.forEach(builders, builder => {\r\n            if (!builder.memory.builderOuterRoom) {\r\n                builder.memory.builderOuterRoom = roomName;\r\n                creepName = builder.name;\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n    let creep = Game.creeps[creepName];\r\n\r\n    if (!room) {\r\n        factory_creep.moveTo(creep, new RoomPosition(43, 17, roomName));\r\n    } else {\r\n        if (creep.memory.work && creep.store[RESOURCE_ENERGY] == 0) { // work && 背包为空\r\n            creep.memory.work = false; // 变为 非work状态\r\n            creep.say('🔄 收获');\r\n        }\r\n        if (!creep.memory.work && creep.store.getFreeCapacity() == 0) { // 非work状态 && 背包满(空余为0)\r\n            creep.memory.work = true; // 变为 work状态\r\n            creep.say('🚧 建造');\r\n        }\r\n\r\n        if (creep.memory.work) {\r\n            let targets = room.find(FIND_CONSTRUCTION_SITES);\r\n            if (targets.length > 0) {\r\n                // 建造\r\n                if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    factory_creep.moveTo(creep, targets[0]);\r\n                }\r\n            }\r\n        } else {\r\n            // 掉落的资源\r\n            let targets = room.find(FIND_DROPPED_RESOURCES);\r\n            if (targets.length > 0) {\r\n                // 捡起一个物品 (如捡起一些能量)\r\n                if (creep.pickup(targets[0]) == ERR_NOT_IN_RANGE) {\r\n                    // 向目标移动\r\n                    factory_creep.moveTo(creep, targets[0], 'Resource');\r\n                }\r\n            } else {\r\n                targets = targets.concat(\r\n                    // 所有墓碑\r\n                    room.find(FIND_TOMBSTONES, {\r\n                        filter: (structure) => {\r\n                            return (structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0);\r\n                        }\r\n                    }),\r\n                    // 所有废墟\r\n                    room.find(FIND_RUINS, {\r\n                        filter: (structure) => {\r\n                            return (structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0);\r\n                        }\r\n                    }),\r\n                );\r\n                if (targets.length < 1) {\r\n                    let sources = room.find(FIND_SOURCES);\r\n                    // 采集能量\r\n                    if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                        factory_creep.moveTo(creep, sources[0], 'Resource');\r\n                    }\r\n                    return;\r\n                }\r\n                if (targets.length < 1) {\r\n                    targets = factory_room.nameGet(roomName).find(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            // 找出有储存能量的container搬运\r\n                            return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                                structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0;\r\n                        }\r\n                    });\r\n                }\r\n                if (targets.length > 0) {\r\n                    // 从建筑(structure)中拿取资源\r\n                    if (creep.withdraw(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        // 向目标移动\r\n                        factory_creep.moveTo(creep, targets[0], 'Resource');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import factory_creep from \"../factory/creep.js\";\r\nimport factory_spawn from \"../factory/spawn.js\";\r\nimport factory_room from \"../factory/room.js\";\r\n\r\nimport factory_creep_Harvest from \"../factory/creep/Harvest.js\";\r\nimport factory_creep_Upgrader from \"../factory/creep/Upgrader.js\";\r\nimport factory_creep_Builder from \"../factory/creep/Builder.js\";\r\nimport factory_creep_Carrier from \"../factory/creep/Carrier.js\";\r\nimport factory_creep_Repairer from \"../factory/creep/Repairer.js\";\r\nimport factory_creep_Defender from \"../factory/creep/Defender.js\";\r\nimport factory_creep_TheHealer from \"../factory/creep/TheHealer.js\";\r\nimport factory_creep_Occupier from \"../factory/creep/Occupier.js\";\r\n\r\n// 控制器 creep\r\nexport default function () {\r\n\r\n    // 遍历所有 creep 并执行上文中拓展的 work 方法\r\n    // Object.values(Game.creeps).forEach(creep => creep.work())\r\n\r\n    // 清理内存\r\n    factory_creep.CleanMemory();\r\n\r\n    // spawn生产孵化Creep\r\n    spawnProduceCreep(globalData.rooms[0].spawns[0].name);\r\n\r\n    // 事件管理\r\n    eventManagement();\r\n\r\n}\r\n\r\n\r\nfunction addHarvest(harvests, controller_level = 4, spawnName) {\r\n    // 生产 限制 采集\r\n    if (harvests.length < globalData.creepConfigs.harvest.number) {\r\n        let returnData = factory_creep.addHarvest(harvests, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addUpgrader(upgraders, controller_level, spawnName) {\r\n    // 生产 限制 升级\r\n    let roomName = factory_spawn.nameGetRoomName(spawnName);\r\n    if (upgraders.length < globalData.creepConfigs.upgrader.number) {\r\n        let returnData;\r\n        // 房间CONTAINER总能量在2000以下时,只会存在一个升级者\r\n        if (upgraders.length > 0) {\r\n            if (Memory.rooms[roomName].containerExtensionStorageEnergyStat > 2000) {\r\n                returnData = factory_creep.addUpgrader(upgraders, controller_level, spawnName);\r\n            }\r\n        } else {\r\n            returnData = factory_creep.addUpgrader(upgraders, controller_level, spawnName);\r\n        }\r\n\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addBuilder(builders, controller_level, spawnName) {\r\n    // 生产 限制 建造 前提控制器2等级\r\n    if (builders.length < globalData.creepConfigs.builder.number) { // && controller_level >= 2\r\n        let returnData = factory_creep.addBuilder(builders, controller_level, spawnName)\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addCarrier(carriers, controller_level, spawnName) {\r\n    // 生产 限制 运输\r\n    if (carriers.length < globalData.creepConfigs.carrier.number) {\r\n        // 拥有CONTAINER才生产\r\n        const builds = factory_spawn.nameGet(spawnName).room.find(FIND_STRUCTURES, {\r\n            filter: {\r\n                structureType: STRUCTURE_CONTAINER\r\n            }\r\n        });\r\n        if (builds.length > 0) {\r\n            let returnData = factory_creep.addCarrier(carriers, controller_level, spawnName);\r\n            // clog(returnData);\r\n            return returnData;\r\n        }\r\n        ;\r\n    }\r\n}\r\n\r\nfunction addRepairer(repairers, controller_level, spawnName) {\r\n    // 生产 限制 维修\r\n    if (repairers.length < globalData.creepConfigs.repairer.number) {\r\n        let returnData = factory_creep.addRepairer(repairers, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addNearDefender(nearDefenders, controller_level, spawnName) {\r\n    // 生产 限制 防御者-近战\r\n    if (nearDefenders.length < globalData.creepConfigs.nearDefender.number) {\r\n        let returnData = factory_creep.addNearDefender(nearDefenders, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addFarDefender(farDefenders, controller_level, spawnName) {\r\n    // 生产 限制 防御者-远战\r\n    if (farDefenders.length < globalData.creepConfigs.farDefender.number) {\r\n        let returnData = factory_creep.addFarDefender(farDefenders, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addTheHealer(theHealers, controller_level, spawnName) {\r\n    // 生产 限制 治疗者\r\n    if (theHealers.length < globalData.creepConfigs.theHealer.number) {\r\n        let returnData = factory_creep.addTheHealer(theHealers, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\nfunction addOccupier(occupiers, controller_level, spawnName) {\r\n    // 生产 限制 占领者\r\n    if (occupiers.length < globalData.creepConfigs.occupier.number) {\r\n        let returnData = factory_creep.addOccupier(occupiers, controller_level, spawnName);\r\n        // clog(returnData);\r\n        return returnData;\r\n    }\r\n}\r\n\r\n// 事件管理\r\nfunction eventManagement() {\r\n    for (let name in Game.creeps) {\r\n        let creep = Game.creeps[name];\r\n\r\n        // 特别行动\r\n        let SpecialActions = creep.memory.SpecialActions;\r\n        if (SpecialActions) {\r\n            // 数据格式\r\n            // SpecialActions:{\r\n            // //代号\r\n            // \tcode:'',\r\n            // //附加信息\r\n            // \tmgs:''\r\n            // }\r\n            switch (SpecialActions.code) {\r\n                case '':\r\n                    break;\r\n                default:\r\n            }\r\n            continue;\r\n        }\r\n\r\n        if (creep.memory.role == globalData.harvest) {\r\n            factory_creep_Harvest.run(creep);\r\n        }\r\n        if (creep.memory.role == globalData.upgrader) {\r\n            if (!creep.memory.upgraderOuterRoom) {\r\n                factory_creep_Upgrader.run(creep);\r\n            }\r\n        }\r\n        if (creep.memory.role == globalData.builder) {\r\n            if (!creep.memory.builderOuterRoom) {\r\n                factory_creep_Builder.run(creep);\r\n            }\r\n        }\r\n        if (creep.memory.role == globalData.carrier) {\r\n            factory_creep_Carrier.run(creep);\r\n        }\r\n        if (creep.memory.role == globalData.repairer) {\r\n            factory_creep_Repairer.run(creep);\r\n        }\r\n        if (creep.memory.role == globalData.nearDefender || creep.memory.role == globalData.farDefender) {\r\n            factory_creep_Defender.run(creep);\r\n        }\r\n        if (creep.memory.role == globalData.theHealer) {\r\n            factory_creep_TheHealer.run(creep);\r\n        }\r\n        if (creep.memory.role == globalData.occupier) {\r\n            factory_creep_Occupier.run(creep);\r\n        }\r\n    }\r\n}\r\n\r\n// spawn生产孵化Creep\r\nfunction spawnProduceCreep(spawnName) {\r\n    let roomName = factory_spawn.nameGetRoomName(spawnName);\r\n\r\n    const harvests = factory_creep_Harvest.ALL(roomName);\r\n    const upgraders = factory_creep_Upgrader.ALL(roomName);\r\n    const builders = factory_creep_Builder.ALL(roomName);\r\n    const carriers = factory_creep_Carrier.ALL(roomName);\r\n    const repairers = factory_creep_Repairer.ALL(roomName);\r\n    const nearDefenders = factory_creep_Defender.ALLNearDefender(roomName);\r\n    const farDefenders = factory_creep_Defender.ALLFarDefender(roomName);\r\n    const theHealers = factory_creep_TheHealer.ALL(roomName);\r\n    const occupiers = factory_creep_Occupier.ALL(roomName);\r\n\r\n    // 查看控制器等级\r\n    const controller_level = factory_room.nameGet(roomName).controller.level;\r\n\r\n    // 能量源区\r\n    let sources = factory_room.nameGet(roomName).find(FIND_SOURCES);\r\n\r\n    // 母巢 (spawn) 是否正在孵化一个新的 creep\r\n    if (factory_spawn.nameGet(spawnName).spawning) {\r\n        // 孵化，过程可视化\r\n        let spawningCreep = Game.creeps[factory_spawn.nameGet(spawnName).spawning.name];\r\n        factory_room.nameGet(roomName).visual.text(\r\n            '孵化🛠️' + spawningCreep.memory.role,\r\n            factory_spawn.nameGet(spawnName).pos.x + 1,\r\n            factory_spawn.nameGet(spawnName).pos.y, {\r\n                align: 'left',\r\n                opacity: 0.8\r\n            });\r\n    } else {\r\n        // 生产 采集\r\n        // 动态更新采集者数量\r\n        try {\r\n            if (globalData.creepConfigs.harvest.AutomaticAssignNum && Memory.rooms[roomName].source.total && globalData\r\n                .creepConfigs.harvest.number != Memory.rooms[roomName].source.total) globalData\r\n                .creepConfigs.harvest.number = Memory.rooms[roomName].source.total;\r\n        } catch (e) {\r\n            //TODO handle the exception\r\n        }\r\n\r\n\r\n        let towers = factory_room.nameGet(roomName).find(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                // 找出需要储存能量\r\n                return (structure.structureType == STRUCTURE_TOWER) &&\r\n                    structure.store.getUsedCapacity(RESOURCE_ENERGY) > 100;\r\n            }\r\n        });\r\n\r\n        // 优先级顺序生产 每种保持最低1个\r\n        let priority;\r\n        // 采集最低和能量源区一样的数量\r\n        if ((harvests.length < 1 && globalData.creepConfigs.harvest.number >= 1) || (harvests.length < sources.length &&\r\n            globalData.creepConfigs.harvest.number >= sources.length)) {\r\n            priority = 'harvest';\r\n        } else if (upgraders.length < 1 && globalData.creepConfigs.upgrader.number >= 1) {\r\n            priority = 'upgrader';\r\n        } else if (builders.length < 1 && globalData.creepConfigs.builder.number >= 1) {\r\n            priority = 'builder';\r\n        } else if (repairers.length < 1 && globalData.creepConfigs.repairer.number >= 1 && (!globalData.creepConfigs\r\n            .repairer.onTower || (globalData\r\n                .creepConfigs.repairer.onTower && towers.length <\r\n            1))) {\r\n            priority = 'repairer';\r\n        } else if (carriers.length < 1 && globalData.creepConfigs.carrier.number >= 1) {\r\n            // 注释掉是因为 拥有CONTAINER才生产 会卡住优先顺序，不进行默认生成\r\n            // priority = 'carrier';\r\n        } else if (nearDefenders.length < 1 && globalData.creepConfigs.nearDefender.number >= 1) {\r\n            priority = 'nearDefender';\r\n        } else if (farDefenders.length < 1 && globalData.creepConfigs.farDefender.number >= 1) {\r\n            priority = 'farDefender';\r\n        } else if (theHealers.length < 1 && globalData.creepConfigs.theHealer.number >= 1) {\r\n            priority = 'theHealer';\r\n        } else if (occupiers.length < 1 && globalData.creepConfigs.occupier.number >= 1 && factory_room.nameGet(roomName).energyCapacityAvailable >= 650) {\r\n            priority = 'occupier';\r\n        }\r\n        if (priority) {\r\n            switch (priority) {\r\n                case 'harvest':\r\n                    addHarvest(harvests, controller_level, spawnName);\r\n                    break;\r\n                case 'upgrader':\r\n                    addUpgrader(upgraders, controller_level, spawnName);\r\n                    break;\r\n                case 'builder':\r\n                    addBuilder(builders, controller_level, spawnName);\r\n                    break;\r\n                case 'carrier':\r\n                    addCarrier(carriers, controller_level, spawnName);\r\n                    break;\r\n                case 'repairer':\r\n                    addRepairer(repairers, controller_level, spawnName);\r\n                    break;\r\n                case 'nearDefender':\r\n                    addNearDefender(nearDefenders, controller_level, spawnName);\r\n                    break;\r\n                case 'farDefender':\r\n                    addFarDefender(farDefenders, controller_level, spawnName);\r\n                    break;\r\n                case 'theHealer':\r\n                    addTheHealer(theHealers, controller_level, spawnName);\r\n                    break;\r\n                case 'occupier':\r\n                    addOccupier(occupiers, controller_level, spawnName);\r\n                    break;\r\n                default:\r\n            }\r\n        } else {\r\n            // 默认顺序生产\r\n            if (addHarvest(harvests, controller_level, spawnName) != OK) {\r\n                if (addCarrier(carriers, controller_level, spawnName) != OK) {\r\n                    if (addBuilder(builders, controller_level, spawnName) != OK) {\r\n                        if (addRepairer(repairers, controller_level, spawnName) != OK) {\r\n                            if (addUpgrader(upgraders, controller_level, spawnName) != OK) {\r\n                                if (addNearDefender(upgraders, controller_level, spawnName) != OK) {\r\n                                    if (addFarDefender(upgraders, controller_level, spawnName) != OK) {\r\n                                        if (addTheHealer(upgraders, controller_level, spawnName) != OK) {\r\n                                            if (addOccupier(upgraders, controller_level, spawnName) != OK) {\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}","import controller_task from \"../controller/task.js\";\r\nimport controller_room from \"../controller/room.js\";\r\nimport controller_creep from \"../controller/creep.js\";\r\n\r\n// 联盟 amin\r\nexport default [\r\n    {\r\n        name: globalData.Alliance[0].username,\r\n        run: function (_this, objectFun) {\r\n            // 任务调度启动\r\n            controller_task();\r\n            // 房间管理\r\n            controller_room();\r\n            // creep管理\r\n            controller_creep();\r\n        }\r\n    },\r\n    {\r\n        name: globalData.Alliance[1].username,\r\n        run: function (_this, objectFun) {\r\n\r\n        }\r\n    }\r\n]","// 代码中文解释\r\n/// <reference types=\"@screepscn/types\" />\r\n\r\n// 拓展总入口 只执行一次\r\nimport \"./main_mount.js\";\r\n\r\nimport Alliance_run from './Alliance/run.js'\r\nimport Alliance_main from './Alliance/main.js'\r\n\r\nimport {errorMapper} from './modules/errorMapper.js'\r\n\r\nexport const loop = errorMapper(() => {\r\n    // 联盟 amin 入口\r\n    Alliance_run(Alliance_main, undefined, {});\r\n\r\n    // clog('本次tips使用 CPU 时间总量 ',Game.cpu.getUsed())\r\n})\r\n\r\n// 中文API\r\n// https://screeps-cn.github.io/api/#\r\n// 英文API\r\n// https://docs.screeps.com/api/#\r\n// lodash\r\n// https://www.lodashjs.com/\r\n\r\n// 房间 W25N6  W42S57 W48S54 W47S54\r\n// https://screeps.com/a/#!/room/shard3/W47S54\r\n\r\n// 缓存的种类\r\n// 持久化存储：游戏的Memory对象，只有这个地方能实现真正可靠的长时间存储。\r\n// 半持久存储：js 的 Global对象，对象原型都属于半持久存储，这种存储会在游戏全局重置时被清除，一般存放允许丢失的数据。\r\n// 非持久存储：直接定义在游戏对象（非原型）上的属性都属于非持久存储，例如Game.rooms.W1N1.myCustomProp = 123，这种存储只有本 tick 能访问到，用来存放 tick 内协同作业需要的数据。\r\n\r\n// 设计方案参考\r\n// https://github.com/lc150303/The-design-of-OverDom/tree/master/doc\r\n\r\n/*\r\n待完成程序:\r\n.废弃（可能会缺失部件导致程序错误，能量消费不是最优解）.多一种角色管理系统，不区分兵种，先统一分配后固定站岗，缺少了补上，1对1搬运\r\n.统一任务调度机制\r\n.creep阵型，攻击拉扯\r\n.自动铺路，能量源，控制器。方案1：两点最近距离（PathFinder.search）.方案2：走得次数多的地方铺路\r\n.createConstructionSite自动布局EXTENSION建筑 控制器等级3布局TOWER\r\n.外能量源采集（根据给定的房间名列出所有可用的出口Game.map.describeExits）\r\n.每个STORAGE搭配一个运输者。如果存在STORAGE并且搭配有运输者，其他运输者才可以把能量放到STORAGE\r\n.spawn是否停止获取能量，先用于生产\r\n.可以选择根据room总能量上限energyCapacityAvailable动态调整配置，energyAvailable来判断是否可以生产\r\n.TOWER逻辑顺序攻击，维修，治疗，运输者是否1v1运送能量或者1vN运送能量\r\n.安全模式，发现敌人安全模式开启，在外creep返回墙内.计算危险区域(Terrain静态地形)，当开启安全模式，creep不得移动到危险区域，除了攻击者除外\r\n.矿床Mineral，稀有资源储备Deposit。自动9*9内建CONTAINER(允许在路road上面建)，限制就1个CONTAINER\r\n.限制每个能量源就1个CONTAINER\r\n.BUG.把自动建CONTAINER允许在路road和可穿透墙rampart上面建\r\n.设置限制TOWER维修rampart到1M就不维修\r\n.采集者，升级者，会根据区域9*9哪里有CONTAINER或正在建造的CONTAINER坐标上面站着，如果已经站有一个，不做此限制\r\n生产creep时，在memory上记录属于的spawn和room。（一个room可能会有多个spawn）.BUG.把通过spawnName获取roomSequence,通过roomSequence获取spawnName代码更改\r\n.BUG.在获取roomSequence时判断roomName是否存在配置中，如果不存在抛出异常\r\n.多个spawn同时生产creep时，用类型名称+时间+spawn名称+_.uniqueId（harvest_564563_spawn1_100）\r\n.任务调派运输资源查看creep的store剩余可储存的数量在判断是否需要多名一起运输\r\n.renewCreep增加目标 creep 的剩余生存时间\r\n.核弹原爆点FIND_NUKES,邮件提示并且房间文本显示（发射此核弹的房间名launchRoomName+着落倒计时timeToLand）\r\n.核弹的爆炸范围是以落点为中心的 5 * 5 的正方形区域。建设防御核弹建筑布局\r\n.自动统计计算出每个区域的范围，已不可通行的建筑为划分。计算危险区域（临近传送区域的区域）\r\n.利用远程传输建筑实现房间里能量平衡\r\n.警报模式。当房间出现敌人，计算敌人数量，携带部件，危险程度。通过危险程度启动应当程序（优先启动能量平衡，防御治疗兵种生成）\r\n\r\n完成程序:\r\n.(废弃(改完出现错误)[此名称是 Game.creeps 对象中指向该 creep 对象的哈希键]).把小兵ID放到memory里面，不在使用小兵名称作为唯一ID值判断，改为小兵ID\r\n.每个运输者可以配置是否固定能量源区运输,属于的在自由选择\r\n.采集如果脚下有CONTAINER，挖完就放进CONTAINER（没带carry部件或者满了，再采集能量会自动掉脚下，如果脚下有容器就会自动进容器了）\r\n.在升级控制器的9*9空位其中一个上放置一个CONTAINER（并且检测是否在控制器7*7范围内），多个升级小兵共享一个CONTAINER\r\n.受到攻击掉血开启安全模式(getEventLog),Tower开启优先攻击模式\r\n.采集者，在能量源区脚下的CONTAINER未建成，先采集能量了自己建，在运输到需要运输的地方。至少留下一个运输到基地，不自己建\r\n.运输者，（取，放）状态切换，去取CONTAINER能量后可以选择去捡能量也可以去放\r\n.运输者一对一搬运，把搬运目标地址写在运输者缓存里面，不在重复循环消耗CPU，new一个RoomPosition\r\n.把每种小兵的取用能量加上状态,取满在用,用完在取\r\n.当控制器区存在有能量的CONTAINER,从控制器区存的CONTAINER取能量\r\n.BUG.能量源区CONTAINER记录信息,控制器CONTAINER记录信息,在creep死亡后,没有正常删除信息,导致无法加入新creeps记录\r\n.Game.notify邮件提示配置开关添加,统一入口使用，限制一分钟内有相同信息不重复发送\r\n.在room受到攻击，记录受到攻击对象的id和时间，在摧毁时查询记录是否在固定时间内（5）受到攻击，才开启安全模式\r\n.在一分钟内受到攻击，并且我方建筑物被摧毁，才开启控制器安全模式\r\n.离STORAGE最近的TOWER，才会消耗能量补充墙壁\r\n */\r\n"],"names":["global","base64","require$$0","util","ArraySet","MappingList","base64VLQ","require$$1","require$$2","require$$3","SourceMapGenerator","quickSort","require$$4","SourceMapConsumer","nameGet","sequenceGet","nameGetSequence","sequenceGetName","factory_room","factory_creep","all"],"mappings":"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AC;AAC/B,SAAS;AACT,KAAK;AACL,IAAI;AACJ,QAAQ,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;AAC7C,QAAQ,GAAG,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE;AACzC;AACA,SAAS;AACT,KAAK;AACL;;ACvBA;AACA;AACA;AAQA;AACY,MAAC,IAAI,GAAG,WAAW,CAAC,MAAM;AACtC;AACA,IAAI,YAAY,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;AAC/C;AACA;AACA,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13,14]}